{"version":3,"file":"js/236.1672999882192.f3805fa2d342ac4d5c88.js","mappings":"ypDAAA,SACA,kBACA,cACA,WACA,WACA,cACA,UAEA,WACA,WACA,WACA,WACA,WAEMA,EAAc,cACZC,EAAY,EAAAC,SAAQ,QAE5B,gCACQ,GAAoB,IAAAC,iBAAlBC,EAAI,OAAEC,EAAO,UACfC,GAAS,eAaf,QAXA,IAAAC,YAAU,WAESP,IACRQ,SAAS,CAAEC,cAAe,EAAAC,uBAE/BJ,IAAWF,GAEbE,EAAOK,KAAKC,UAAUC,MAAK,2EAAY,cAAAC,WAAUb,GAASY,KAAKR,G,SAEnE,GAAG,GAAGC,KAEE,GACN,KAAMF,EACJ,OACE,SAAC,EAAAW,SAAQ,WACP,SAAC,EAAAC,QAAO,CAACC,KAAK,SAGpB,KAAKb,aAAI,EAAJA,EAAMc,KACT,OACE,iCACE,SAAC,UAAmB,KACpB,SAAC,UAAM,OAIb,QACE,OAAO,SAAC,EAAAC,kBAAiB,IAE/B,C,qhCClDA,cACA,WACA,WAGA,cACA,WACA,WAEMC,EAAc,IAAI,EAAAC,YAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,MAS5B,mBAAiC,G,IAAEC,EAAM,SACjCC,EAAQ,UAAMC,SAAQ,WAE1B,OADA,IAAAC,cACIH,GACK,IAAAI,aAAYJ,GAAQC,OAEtB,IAAAG,eAAcH,KACvB,GAAG,CAACD,IAMJ,OAJA,IAAAlB,YAAU,W,QACmB,QAA3B,EAAgB,QAAhB,EAAQ,OAARL,eAAQ,IAARA,cAAQ,EAARA,SAAUI,cAAM,eAAEwB,iBAAS,gBAAG,iBAChC,GAAG,KAGD,SAAC,WAAa,GAACJ,MAAOA,GAAK,WACzB,SAAC,EAAAK,gBAAe,WACd,SAAC,EAAAC,oBAAmB,GAACC,OAAQb,GAAW,WACtC,SAAC,UAAG,WAKd,C,iZC3CA,WAWA,WAYA,WACA,WACA,WAEA,WAEA,WAKA,cACA,cACA,aACA,WACA,cACA,cACA,cACA,cACA,WACA,cAEMc,GAAY,IAAAC,iBAAgB,CAChCC,cAAe,CACbC,gBAAiB,EAAAC,2BAA2BC,MAC5CC,QAAS,OACTC,cAAe,UAEjBC,uBAAwB,CACtBC,SAAU,CAAC,kBACXC,UAAW,QAEbC,aAAc,CACZC,eAAgB,gBAChBC,QAAS,YACTC,OAAQ,eAEVC,gBAAiB,CACfH,eAAgB,gBAChBE,OAAQ,eAEVE,UAAW,CACTC,QAAS,KA8Qb,UA1QyB,W,QACjBC,EAAUlB,IACVd,GAAc,IAAAiC,kBACZjD,GAAS,IAAAD,iBAAe,KAC1BmD,EAAgBC,OAAOC,aAAaC,QAAQ,aAAe,GAC3D,GAAkB,IAAAC,UAAS,GAA1BC,EAAI,KAAEC,EAAO,KACd,GAAwB,IAAAF,UAASJ,GAAhCO,EAAO,KAAEC,EAAU,KACpB,GAAoC,IAAAJ,WAAS,GAA5CK,EAAa,KAAEC,EAAgB,KAChC,GAA8B,IAAAN,UAAwB,IAArDO,EAAU,KAAEC,EAAa,KAC1B,GAAwC,IAAAR,UAAiB,GAAxDS,EAAe,KAAEC,EAAkB,KACpC,GAAgD,IAAAV,UAAyB,OAAxEW,EAAmB,KAAEC,EAAsB,KAE5C,GAA8B,IAAAZ,UAAqB,CACvDa,YAAa,GACbC,SAAU,GACVC,OAAQ,KAHHC,EAAU,KAAEC,EAAa,KAM1BC,EAAe,WAAM,OAAAD,EAAc,CAAEJ,YAAa,GAAIC,SAAU,GAAIC,OAAQ,IAAvD,EAErBI,IACc,QAAjB,EAAAH,EAAWD,cAAM,eAAEK,SAAqC,KAA3BJ,EAAWH,eAA0C,QAAnB,EAAAG,EAAWF,gBAAQ,eAAEM,QAEjF,GAQF,IAAAC,uBAPSC,EAAuB,YAC3BC,EAAqB,QACnBC,EAAuB,UAChC,IAAAC,KAAA,aAAiF,CAC/EC,sBAAuB,GACvBC,oBAAqB,IACtB,EAH8BC,EAAY,wBAAuBC,GAAU,sBAMxEC,GAAuB,CAC3B,OACA,oBACA,wBACA,gBACA,UAGIC,GAAa,WACjB,OAAAD,GAAqBrB,GAAmB,IAAME,CAA9C,EAEI,IAMF,IAAAqB,qBAAoB/B,EAAME,EAASa,EAAYe,MALjDE,GAAS,aACTC,GAAK,SACLC,GAAO,WACPC,GAAU,cACV,MAAAX,KAAAA,QAAI,IAAG,IAAEA,KAAM,GAAIY,KAAM,CAAEC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAAK,GAGzD,IAAqD,IAAAC,4BACzD/E,EACAuC,EACAE,EACAa,EACAe,MALmBW,GAAU,eASzBC,GATgD,cASdP,IAAcd,EAEhDsB,GAAuB,SAACC,EAAGC,GAAY,OAAA5C,EAAQ4C,EAAR,EAEvCC,GAAmC,SAACF,EAAGG,EAAYF,GAEvDhD,aAAamD,QAAQ,UAAWD,EAAWE,YAC3C9C,EAAW4C,GACX9C,EAAQ4C,EACV,EAeMK,GAAgB,CAAC,OAAQ,eAAgB,WAAY,WAAY,UAEjEC,GAAgB,SAACC,GAAY,MAAK,OAA8C,QAA9C,EAAAxB,GAAWyB,MAAK,SAAC,G,IAAEC,EAAK,QAAO,OAAAF,IAASE,CAAT,WAAe,eAAEC,IAAI,EAS5F,GAAIrB,GAAS,MAAMD,GACnB,GAAIV,EAAyB,MAAMD,EAGjC,OAEEE,GAAI,KAFAgC,QAAW,IAAG,MAAE,GACd,GACNhC,GAAI,WADEa,QAAK,IAAG,KAAC,GAGboB,IAAa,IAAAC,cACjB,SAACC,GAAoC,OACnC,CACEC,MAAO,SACPC,QAAS,WACP,OAAApB,GAAWkB,aAAO,EAAPA,EAASG,MAAM5G,MAAK,WAEzB8C,EAAO,GAAKqC,GAAQnC,EAAU,GAAKF,IAASqC,GAAQ,GAAKnC,GAAY,GACvED,EAAQD,EAAO,EAEnB,GALA,GAOJ,CACE+D,WAAYrB,GACZkB,MAAO,OACPC,QAAS,WACPtD,EAAc,CAACoD,IACftD,GAAiB,EACnB,GAjBiC,GAoBrC,CAACqC,KAGGsB,GAAwB,IAAV3B,GAEpB,OAAI2B,IAAe9C,IAAgBc,IAE/B,SAAC,EAAA5E,SAAQ,WACP,SAAC,UAAe,CAAC8D,YAAaA,EAAaD,aAAcA,OAK7D,UAAC,EAAAgD,KAAI,GAACC,UAAWF,GAAcvE,EAAQV,uBAAyBU,EAAQhB,eAAa,YACnF,SAAC,UAAgB,CACf0F,OAAQ7D,EACR8D,KAAMhE,EACNiE,UAAW,WACThE,GAAiB,GACjBE,EAAc,GAChB,KAEF,UAAC,EAAA+D,KAAI,GAACJ,UAAWzE,EAAQP,cAAY,YACnC,SAAC,UAAkB,CACjB8C,UAAWA,GACXhB,cAAe,SAACmD,GACdnD,EAAcmD,GACdlE,EAAQ,EACV,EACAc,WAAYA,KAEd,SAAC,EAAAwD,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMR,IAAW,WACrB,SAAC,EAAAS,WAAU,CACTC,GAAG,oBACHC,SAAS,wBACTC,iBAAiB,SACjBb,WAAY/B,GACZ6C,UAAWxC,GACXnC,QAASA,EACTF,KAAMA,EACN2C,UAAWA,GACXmC,WAAS,EACThC,gBAAiBA,eAKzB,SAAC,UAAI,GAAC0B,MAAOxC,IAAS,WACpB,SAAC,EAAAiC,KAAI,GAACC,UAAWzE,EAAQV,wBAAsB,WAC7C,SAAC,EAAAgG,cAAa,CACZC,QAAS9E,EACT+E,QAAS/B,GAAc/B,OACvB+D,QAAS,EAAAC,aAAaC,iBAI5B,SAAC,UAAI,GAACZ,KAAMR,IAAehC,IAAS,WAClC,iCACE,UAAC,EAAAqD,gBAAe,gBACH,4BACXC,OAAO,4BACPJ,QAAQ,WAAS,YAEjB,SAAC,EAAAK,MAAK,WACJ,UAAC,EAAAC,GAAE,WACAtC,GAAcuC,KAAI,SAACC,EAAcC,GAAU,OAC1C,SAAC,EAAAC,GAAE,GAA+BC,MAxH9BC,EAwH+CH,EAxHN,CAC3DI,OAAQ,CACNJ,MAAOnF,EACPwF,UAAWtF,EACXuF,iBAAkB,OAEpBC,OAAQ,SAACC,EAAQR,EAAOK,GACtBvF,EAAmBkF,GACnBhF,EAAuBqF,EACzB,EACAF,YAAW,KA8G4D,UACtDJ,IADMA,EAAe,UAxHrB,IAACI,CAuHsC,KAK5C,SAAC,EAAAF,GAAE,WACD,SAAC,EAAAvI,QAAO,CAACC,KAAK,KAAK4G,UAAWxB,GAAoB,GAAKjD,EAAQF,oBAIrE,SAAC,EAAA6G,MAAK,UACH5C,GAAYiC,KAAI,SAAC9B,GAEd,IAnHQ9C,EAmHRiD,EAOEH,EAAO,KANTJ,EAMEI,EAAO,KALT0C,EAKE1C,EAAO,IAJT2C,EAIE3C,EAAO,kBAHTlC,EAGEkC,EAAO,sBAFT4C,EAEE5C,EAAO,OADT6C,EACE7C,EAAO,yBACX,OACE,UAAC,EAAA6B,GAAE,YACD,UAAC,EAAAiB,GAAE,WACAlD,GACD,mBACA,SAAC,UAAmB,CAACmD,KAAML,QAE7B,SAAC,EAAAI,GAAE,UAAEtD,GAAcmD,MACnB,SAAC,EAAAG,GAAE,WAnIG5F,EAmIcY,EAlIpCE,EACGgF,QAAO,SAAC,G,IAAErD,EAAK,QAAO,OAAAzC,aAAQ,EAARA,EAAU+F,SAAStD,EAAnB,IACtBmC,KAAI,SAAC,GAAa,OAAP,MAAO,IAClBoB,KAAK,UAgIQ,SAAC,EAAAJ,GAAE,WACD,SAAC,UAAY,CAAC9C,QAASA,OAEzB,SAAC,EAAA8C,GAAE,WACD,SAAC,UAAU,CAACF,OAAQA,EAAQtE,MAAOuE,OAErC,SAAC,EAAAC,GAAE,GAACK,cAAY,cACd,SAAC,UAAkB,GACjBC,QAAQ,mEACRC,OAAOvK,aAAI,EAAJA,EAAMwK,OACbC,aAAW,cAEX,SAAC,EAAAC,cAAa,CAACC,MAAO3D,GAAWE,aApB9BG,EAyBb,WAGJ,UAAC,EAAAQ,KAAI,GAACJ,UAAWzE,EAAQH,iBAAe,YACtC,SAAC,EAAAiF,SAAQ,KACT,SAAC,EAAAA,SAAQ,WACP,SAAC,EAAAE,WAAU,CACTC,GAAG,uBACHC,SAAS,2BACTC,iBAAiB,SACjBC,UAAWxC,GACXnC,QAASA,EACTF,KAAMA,EACN2C,UAAWA,GACXuC,QAAS,EAAAmC,kBAAkBC,OAC3BxE,gBAAiBA,kBAM3B,SAAC,UAAI,GAAC0B,MAAOR,IAAehC,IAAS,WACnC,SAAC,UAAe,CAACd,YAAaA,EAAaD,aAAcA,UAIjE,C,w+DC7UA,WAeA,WAKA,WACA,WACA,WACA,WACA,WACA,cACA,WAQA,cACA,cACA,WAOA,aACA,WACA,cACA,WACA,WAMM1C,GAAY,IAAAC,iBAAgB,CAChC+I,YAAa,CACXC,WAAY,OACZC,MAAO,EAAAC,iBAAiB9I,OAE1B+I,iBAAkB,CAChB,UAAW,CACTC,WAAY,mBAGhBC,aAAc,CACZ7I,SAAU,CAAC,qBACX8I,OAAQ,UACRC,aAAc,iBACd,OAAQ,CACNN,MAAO,EAAAO,kBAAkBpJ,MAAQ,aACjCQ,QAAS,mBAEX,QAAS,CACP6I,KAAM,EAAAD,kBAAkBpJ,MAAQ,aAChCQ,QAAS,KAGb8I,UAAW,CACT,OAAQ,CACN,qBAAsB,CAAEJ,OAAQ,WAChC1I,QAAS,oBAGb+I,eAAgB,CACdnJ,SAAU,CAAC,qBACXI,QAAS,gCAEXgJ,aAAc,CACZpJ,SAAU,CAAC,qBACX,WAAY,CACVI,QAAS,QAGbiJ,oBAAqB,CACnBC,aAAc,QAEhBC,WAAY,CACVC,YAAa,OACbC,WAAY,mBAEdC,aAAc,CACZ7J,QAAS,iBACTM,eAAgB,YAElBwJ,iBAAkB,CAChBvJ,QAAS,4BAIPwJ,EAA8B,CAClCrF,KAAM,GACN8C,IAAK,GACLwC,OAAQ,GACRzF,KAAM,MACNvC,SAAU,CAAC,OACXiI,YAAY,EACZC,UAAU,EACVC,sBAAsB,GAGlBC,EAAsB,CAAE1F,MAAM,EAAO8C,KAAK,EAAOwC,QAAQ,GA6lB/D,UA3lBmB,SAAC,G,MAAcK,EAAgB,aAC1C,GAAoC,IAAA1M,iBAAlC2M,EAAuB,0BAAE1M,EAAI,OAC/B,GAAgC,IAAAsD,WAAS,GAAxCqJ,EAAW,KAAEC,EAAc,KAC5B,GAAsC,IAAAtJ,WAAS,GAA9CuJ,EAAc,KAAEC,EAAiB,KAClC,GAA8B,IAAAxJ,UAAwB,CAAC,KAAtDyJ,EAAU,KAAEC,EAAa,KAC1BhK,EAAUlB,IACVd,GAAc,IAAAiC,kBACdgK,GAAS,IAAAC,WAAU,CACvBC,cAAe,CAAChB,GAChBiB,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,IAAAC,wBAClBC,eAAgB,CAAChB,GACjBiB,SAAU,WAAM,IAGZC,EAAe,SAACxE,EAAe/G,GACnC2K,GAAkB,GAClB,IAAMa,EAAW,KAAsBZ,GAAU,GACjDY,EAAYzE,GAAS/G,EACrB6K,EAAcW,EAChB,EAEQC,GAAgB,IAAAC,kBAAgB,YAElCC,GAAsB,aAAYf,EAAY,KAsC9C,EACJ/L,EAAY+M,aAAuC,EAAAC,wBAA0B,CAAC,EADxE,IAAA/I,oBAAqBE,OAAU,IAAG,KAAE,EAAE,IAAAH,sBAAuBE,OAAY,IAAG,KAAE,GAGtF,IAAA/E,YAAU,WAvCe,IAAO8N,IAwCbH,EAxCgC,mC,wDAC7B,SAAMI,QAAQC,IAChC,KAAIlB,EAAOvF,QAAM,GAAEsB,KAAI,SAAOtB,EAAQwB,GAAK,0C,yEACnCkF,EAAcH,EAAK/E,IACrB,IAAAmF,YAAWD,GACE,GAAMR,EAAYQ,IAD/B,M,OAGF,IAFME,EAAS,YAEAF,EAEb,OADAV,EAAaxE,EAAOoF,GACb,CAAP,WACK5G,GAAM,CACT0E,OAAQkC,KACH5B,GAA6C,KAAlBhF,EAAO0E,QAAmBgC,EACtD,CACE7B,wBACgC,QAA5B,EAAuB,QAAvB,EAAAgC,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,6BAEpC,CAAC,I,iBAIX,MAAO,CAAP,WACK9G,GAAM,CACT0E,OAAQgC,KACH1B,GAA6C,KAAlBhF,EAAO0E,QAAmBgC,EACtD,CACE7B,wBAAoD,QAA5B,EAAuB,QAAvB,EAAAgC,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,6BAExD,CAAC,I,0BA3BLb,EAAc,SAgCpBV,EAAOwB,UAAUd,G,UAQnB,GAAG,CAACG,IAEE,OAA+C,IAAAvM,UAAQ,WAC3D,IAAMmN,EAAqB,CAAC,EACtBC,EAAuB,CAAC,EAG9B,OAFAxJ,EAAWyJ,SAAQ,SAAC,G,IAAE9H,EAAI,OAAED,EAAK,QAAO,OAAC6H,EAAmB5H,GAAQD,CAA5B,IACxC3B,EAAa0J,SAAQ,SAAC,G,IAAE9H,EAAI,OAAED,EAAK,QAAO,OAAC8H,EAAqB7H,GAAQD,CAA9B,IACnC,CAAE6H,mBAAkB,EAAEC,qBAAoB,EACnD,GAAG,CAACxJ,EAAYD,IANRwJ,EAAkB,qBAAEC,EAAoB,uBAU1CE,EAAa,WACjBjC,GAAe,GACfK,EAAO6B,WAAW,CAACtC,IACnBS,EAAO8B,YACP/B,EAAc,CAAC,IACjB,EAEM,IAAmD,IAAAgC,oBACvDhO,GACA,IAAAiO,sBAAqBhC,EAAOvF,SAFTwH,GAAU,eAAaC,GAAQ,aAK9CC,GAA+C,IAAzBnC,EAAOvF,OAAOhD,OAEpC2K,IAAepC,EAAOvF,OAAO4H,MAAK,SAAC,GAAiB,OAAP,UAAO,IAOpDC,GAAiB,SAACrG,EAAesG,EAAUC,GAC/C3C,GAAkB,GAClB,IAAMa,EAAc,EAAH,GAAOV,EAAOvF,QAAM,GACrCiG,EAAYzE,GAAS,EAAH,KAAQyE,EAAYzE,IAAWsG,GACjDvC,EAAOwB,UAAUd,GAAalN,KAAKgP,EACrC,EA0BMC,GAAqB,SACzBxG,EACAyG,G,UAEMxN,KAA8B,QAApB,EAAA8K,EAAOvF,OAAOwB,UAAM,eAAGyG,IACjCC,KAA+B,QAApB,EAAA3C,EAAO2C,OAAO1G,UAAM,eAAGyG,IAClCE,EAA+B,QAArB,EAAA5C,EAAO4C,QAAQ3G,UAAM,eAAGyG,GACxC,QAAQ,GACN,KAAKC,GAAUC,EACb,MAAO,QACT,KAAK1N,GAAS0N,EACZ,MAAO,UACT,QACE,MAAO,UAEb,EAIMC,GAA8C,W,MAC5CC,GAAyB,QAAd,EAAA9C,EAAO4C,eAAO,eAAEnL,QAAS,GAAK,EACzC,EAAgBuI,EAAO4C,QAAQE,IAAa,CAAC,EAA3CjJ,EAAI,OAAE8C,EAAG,MACjB,IAAK9C,IAAS8C,EAAK,CACjB,IAAMoG,EAAiB,EAAH,GAAO/C,EAAO4C,SAAO,GACzCG,EAAeD,GAAY,EAAH,KAAQC,EAAeD,IAAS,CAAEjJ,MAAM,EAAM8C,KAAK,IAC3EqD,EAAO6B,WAAWkB,E,CAEtB,EAEIC,IAAkB,aAAYhD,EAAOvF,SAAW,GAE9C,IAA6D,IAAAwI,0BAA9CC,GAAmB,eAAQ5B,GAAc,SAE9D,IAAApO,YAAU,WAER,GAAIwM,EAAa,CACXsD,GAAgBvL,SAAWuI,EAAOvF,OAAOhD,SAAQuL,GAAkBhD,EAAOvF,QAC9E,IAAM,EAAmB,EAAH,GAAOuF,EAAO4C,SAAO,GAC3CM,GACEF,GAAgBjH,KAAI,SAAC,EAA6CE,G,UAA3CpC,EAAI,OAAE8C,EAAG,MAAEwC,EAAM,SAAEG,EAAoB,uBAU5D,QAT4B,QAAvB,IAAiBrD,UAAM,eAAEpC,OAAQA,IACpC,EAAiBoC,GAAS,EAAH,KAAQ,EAAiBA,IAAM,CAAEpC,MAAM,OAEpC,QAAvB,IAAiBoC,UAAM,eAAEU,MAAOA,IACnC,EAAiBV,GAAS,EAAH,KAAQ,EAAiBA,IAAM,CAAEU,KAAK,OAEnC,QAAvB,IAAiBV,UAAM,eAAEkD,SAAUA,IACtC,EAAiBlD,GAAS,EAAH,KAAQ,EAAiBA,IAAM,CAAEkD,QAAQ,KAE3D,CACLtF,KAAI,EACJ8C,IAAG,EACHwG,QAAShE,EACTiE,sBAAuB9D,EAE3B,KACA9L,MAAK,SAAO6P,GAAc,0C,0DACL,SAAMrD,EAAOsD,aAAaN,K,cAAzCO,EAAe,SACfC,GAAkB,IAAAC,mBAAkBJ,EAAgBE,GAC1DvD,EAAO0D,UAAUF,GACjB3D,GAAkB,GAClBG,EAAO6B,WAAW,G,cAGxB,GAAG,CAACmB,GAAiBA,GAAgBvL,OAAQiI,IAE7C,IAAMiE,GAAW,SAAC1H,G,OACQ,QAApB,EAAA+D,EAAOvF,OAAOwB,UAAM,eAAEoD,WACxBiD,GAAerG,EAAO,EAAF,KAAO+D,EAAOvF,OAAOwB,IAAM,CAAEoD,UAAU,KAC3DwD,MACKP,GAAerG,EAAO,EAAF,KAAO+D,EAAOvF,OAAOwB,IAAM,CAAEoD,UAAU,IACpE,EA4DA,OACE,iCACE,SAAC,UAAkB,GACjBhC,QAAQ,mEACRC,OAAOvK,aAAI,EAAJA,EAAMwK,OACbC,aAAW,cAEX,SAAC,EAAAoG,OAAM,GACL5I,GAAG,4BACHY,OAAO,wBACPJ,QAAQ,UACRnB,WAAYmF,EACZrF,QArMkB,WAAM,OAAAwF,GAAgBD,EAAhB,GAqME,mCAK7BA,GACC,SAAC,EAAAmE,MAAK,GACJC,SAAS,MACTtI,QAAS,EAAAuI,aAAaC,OACtB9J,MAAM,0BACN0B,OAAO,wBACPqI,MACE,SAAC,EAAAC,QAAO,GACNC,eAAe,qDACfC,aAAa,sFAAkE,WAE/E,SAAC,EAAAR,OAAM,GAACpI,QAAQ,QAAO,aAAY,QAAM,WACvC,SAAC,EAAA6I,2BAA0B,UAIjCxG,aACE,gBAAGrD,UAAWzE,EAAQ8H,aAAW,yFAInCyG,QAAM,EACNC,QAAS3C,EACT4C,QACE,UAAC,EAAAC,MAAK,YACJ,SAAC,EAAAC,UAAS,WACR,SAAC,EAAAd,OAAM,GACLvJ,YAAa2F,EAAO2E,SAAW3E,EAAOvF,OAAOhD,OAAS,GACtD+C,UAAWzE,EAAQ4I,oBACnBnD,QAAQ,OACRrB,QA1MM,WACpB6F,EAAO6B,WAAW,EAAD,KAAK7B,EAAO4C,SAAS,GAAF,CAAErD,IAAmB,IACzDS,EAAOwB,UAAU,EAAD,KACXxB,EAAOvF,OAAOsB,KAAI,SAAC6I,GAAS,cAAMA,GAAI,CAAEvF,UAAU,GAAtB,KAA+B,IAC9DH,I,IAEFW,GAAkB,EACpB,EAoMgBgF,MAAM,SAAC,EAAAC,eAAc,IACrBlJ,OAAO,WAAS,yCAKpB,UAAC,EAAA8I,UAAS,YACR,SAAC,EAAAd,OAAM,GACLpJ,UAAWzE,EAAQ8I,WAEnBjD,OAAO,aACPJ,QAAQ,UACRlD,UAAW4J,GACX7H,YACGuF,IACAI,EAAO2E,SACRzC,KACa,QAAb,EAAAlC,EAAOvF,cAAM,eAAEhD,WAAWuL,cAAe,EAAfA,GAAiBvL,QAE7C0C,QAAS,WAAM,OAAA8H,KAAazO,KAAKoO,EAAlB,GAA6B,mBAVxC,YAcN,SAAC,EAAAgC,OAAM,GAAcpI,QAAQ,OAAOrB,QAASyH,EAAYhG,OAAO,gBAAc,qBAAlE,WAGZ,SAAC,EAAAgI,OAAM,GAELpI,QAAQ,OACRnB,WAAY2F,EAAOvF,OAAOhD,OAAS,GACnCsG,MAAM,QACN5D,QA5GgC,WAC9C,IACM4K,EADYC,MAAMC,KAAKD,MAAM,IAAIE,QACXnJ,KAAI,SAACE,GAAU,OACzCpC,MAAOsL,KAAKC,SAAW,GAAG7L,SAAS,IAAI8L,UAAU,GACjD1I,IAAK,EAAA2I,aAAarJ,GAClBkD,OAAQ,GACRzF,KAAQuC,EAAQ,EAAgB,MAAX,SACrB9E,SAAY8E,EAAQ,EAAa,CAAC,OAAT,CAAC,KAC1BmD,YAAY,EACZC,UAAU,EACVC,sBAAsB,EARmB,IAU3CU,EAAOwB,UAAUuD,EACnB,GA+FgE,qBAJ5C,gBASF,WAGV,UAAC,EAAApJ,gBAAe,gBAAY,2BAA2BC,OAAO,mBAAiB,YAC7E,SAAC,UAAI,GAACd,KAAMqH,IAAmB,WAC7B,SAAC,EAAAzF,MAAK,GAAC6I,WAAYnD,IAAW,WAC5B,UAAC,EAAAtG,GAAE,GAAC3B,QAjQM,WACtB6F,EAAOwB,UAAU,EAAD,GAAKxB,EAAOvF,OAAOsB,KAAI,SAAC6I,GAAS,cAAMA,GAAI,CAAEvF,UAAW+C,IAAvB,KAAsC,IACvFS,IACF,EA8P4CrI,UAAWzE,EAAQoI,cAAY,YAC3D,SAAC,EAAApB,GAAE,CACDvC,UAAWzE,EAAQ2I,aACnBtB,cAAY,EACZoI,OAAQ,CACNC,SAAU,EACVF,WAAYnD,OAGhB,SAAC,EAAArF,GAAE,GAAC2I,UAAU,mBAAiB,UAAEtD,GAAc,eAAiB,0BAIrEpC,EAAOvF,OAAOsB,KACb,SACE,EACAE,G,sBADEoD,EAAQ,WAAExF,EAAI,OAAE8C,EAAG,MAAEjD,EAAI,OAAEyF,EAAM,SAAEhI,EAAQ,WAAEiI,EAAU,aAAEE,EAAoB,uBAE5E,OACH,UAAC,EAAA5C,MAAK,GAAa6I,WAAYpD,QAAsBwD,EAAYtG,GAAQ,YACvE,SAAC,UAAI,GAACvE,KAAMqH,IAAmB,WAC7B,UAAC,EAAArG,GAAE,GAACtB,UAAWzE,EAAQyI,WAAS,YAC9B,SAAC,EAAAzB,GAAE,CACD5C,QAAS,WAAM,OAAAwJ,GAAS1H,EAAT,EACfzB,UAAWzE,EAAQ2I,aACnBtB,cAAY,EACZoI,OAAQ,CACNC,SAAUxJ,EACVsJ,WAAYlG,MAGhB,SAAC,EAAAtC,GAAE,GAAC6I,MAAO,GAAIzL,QAAS,WAAM,OAAAwJ,GAAS1H,EAAT,EAAiByJ,UAAW7L,GAAI,UAC3DA,GAAQ,kBAEX,SAAC,EAAAkD,GAAE,GAAC5C,QAAS,WAAM,OAAAwJ,GAAS1H,EAAT,EAAiByJ,UAAU,YAAU,WACtD,SAAC,UAAe,CACd9C,QAAS5C,EAAO4C,QAAQ3G,GACxB0G,OAAQ3C,EAAO2C,OAAO1G,SAG1B,SAAC,EAAAc,GAAE,GAAC2I,UAAU,eAAelL,UAAWzE,EAAQiJ,cAAY,WAC1D,SAAC,UAAI,GAAClE,KAA+B,IAAzBkF,EAAOvF,OAAOhD,QAAY,WACpC,SAAC,EAAAmM,OAAM,GACLzJ,QAAS,WAAM,OAtRhB,SAAC8B,GACxB,IAAM8I,EAAY/E,EAAOvF,OACzBsK,EAAUc,OAAO5J,EAAO,GAExB,IAAM6J,EAAa9F,EAAO4C,QAC1BkD,EAAWD,OAAO5J,EAAO,GAEzB,IAAM8J,EAAY/F,EAAO2C,OACzBoD,EAAUF,OAAO5J,EAAO,GAExB+D,EAAO6B,WAAWiE,GAClB9F,EAAO0D,UAAUqC,GACjB/F,EAAOwB,UAAUuD,EACnB,CAyQyCiB,CAAiB/J,EAAjB,EACfT,QAAQ,OACRqJ,MAAM,SAAC,EAAAoB,gBAAe,KAAG,oCAQnC,SAAC,EAAAnK,GAAE,GAACyJ,WAAYpD,QAAsBwD,EAAYtG,GAAQ,WACxD,SAAC,EAAAtC,GAAE,GACDmJ,QAAS,EACT1L,UACE2H,GAAsBpM,EAAQkJ,iBAAmBlJ,EAAQ0I,gBAAc,WAGzE,UAAC,EAAA0H,KAAI,YACH,SAAC,EAAAC,UAAS,GACRxM,MAAM,OACNyM,YAAU,EACVC,QAAQ,YACRC,UAAW9D,GAAmBxG,EAAO,QACrCuK,kBAAuC,QAApB,EAAAxG,EAAO2C,OAAO1G,UAAM,eAAEpC,MAAI,WAE7C,SAAC,EAAA4M,UAAS,CACRJ,YAAU,EACVrL,GAAG,OACHnB,KAAK,OACLD,MAAM,OACNgC,OAAO,aACP8K,KAAK,OACLH,UAAW9D,GAAmBxG,EAAO,QACrC0K,SAAU,SAACzR,GACToN,GAAerG,EAAO,CAAEpC,KAAM3E,GAChC,EACAA,MAAO2E,GAAQ,GACf+M,YAAY,mBAGhB,SAAC,EAAAR,UAAS,GACRxM,MAAM,MACNyM,YAAU,EACVC,QAAQ,MACRC,UAAW9D,GAAmBxG,EAAO,OACrCuK,kBAAuC,QAApB,EAAAxG,EAAO2C,OAAO1G,UAAM,eAAEU,KAAG,WAE5C,SAAC,EAAA8J,UAAS,CACRJ,YAAU,EACVK,KAAK,MACLH,UAAW9D,GAAmBxG,EAAO,OACrC4K,OAAQ,WAAM,OAjPX,SAAC5K,G,0BACtBU,EAA0B,QAApB,EAAAqD,EAAOvF,OAAOwB,UAAM,eAAEU,IAClC,IACE,IAAAyE,YAAWzE,KACqB,SAAX,QAApB,EAAAqD,EAAOvF,OAAOwB,UAAM,eAAEvC,OAAuD,QAArCsG,EAAOvF,OAAOwB,GAAO9E,SAAS,IACvE,CACA,IAAMuC,EAC4B,SAAX,QAApB,EAAAsG,EAAOvF,OAAOwB,UAAM,eAAEvC,QAAsC,QAApB,EAAAsG,EAAOvF,OAAOwB,UAAM,eAAEvC,QACgB,QAA/E,EAAAxB,EAAWyB,MAAK,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIO,SAASrD,IAAS8C,EAAIO,SAAStD,EAAnC,WAA0C,eAAEA,QACjF,MAEEzC,EAA0B,GAC9B,IAAkC,QAA9B,EAAoB,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAE9E,gBAAQ,eAAEM,SAA+C,QAArCuI,EAAOvF,OAAOwB,GAAO9E,SAAS,GAC1EA,EAA+B,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAE9E,aAC5B,CACL,IAAM2P,EAEL,QAFkB,EAAA7O,EAAa0B,MAC9B,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIO,SAASrD,IAAS8C,EAAIO,SAAS,IAAMtD,EAAzC,WACtB,eAAEA,MACCkN,IAAY3P,EAAW,CAAC2P,KACxB,IAAAC,SAAQ5P,KAAWA,EAAW,CAAC,O,CAErC,IAAwB,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAEvC,QAASA,KAAS,IAAAsN,SAAQ7P,EAA8B,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAEvC,MAAO,CACzF,IAAMgH,EAAc,EAAH,GAAOV,EAAOvF,QAAM,GACrCiG,EAAYzE,GAAS,EAAH,KAAQyE,EAAYzE,IAAW,CAAEvC,KAAI,EAAEvC,SAAQ,IACjE6I,EAAOwB,UAAUd,E,EAGvB,CAsNwCuG,CAAqBhL,EAArB,EACd0K,SAAU,SAACzR,GACLyH,IAAQzH,GACVoN,GAAerG,EAAO,CAAEU,IAAKzH,GAEjC,EACAA,MAAOyH,GAAO,GACdiK,YAAY,WACZ5L,GAAG,MACHnB,KAAK,MACLD,MAAM,MACNgC,OAAO,kBAGX,SAAC,EAAAwK,UAAS,GACRxM,MAAM,wBAAuB,aAClB,2BACXsN,WACE,SAAC,EAAAC,QAAO,GAAC9J,QAAQ,2DAAyD,WACxE,SAAC,EAAAgH,2BAA0B,CACzB7J,UAAU,aACVuD,MAAO,EAAAC,iBAAiB9I,WAI9BoR,QAAQ,QAAM,WAEd,SAAC,UAAc,CACb1K,OAAO,2BACPwL,aAAcC,SAASC,KACvBC,SAAU,gBAAkBtL,EAC5BuL,QAASC,OAAOvC,KAAKzD,GACrBjG,QAAS,EAAAkM,cAAcC,OACvBC,aAAcH,OAAOvC,KAAKzD,GAAoB9H,MAC5C,SAACkO,GAAgB,OAAAnO,IAAS+H,EAAmBoG,EAA5B,IAEnBC,YAAa,SAAC5S,GACZ,OAAAoN,GAAerG,EAAO,CAAEvC,KAAM+H,EAAmBvM,IAAjD,QAIN,SAAC,EAAAkR,UAAS,GACRxM,MAAM,sBAAqB,aAChB,yBACXsN,WACE,SAAC,EAAAC,QAAO,GAAC9J,QAAQ,yDAAuD,WACtE,SAAC,EAAAgH,2BAA0B,CACzB7J,UAAU,aACVuD,MAAO,EAAAC,iBAAiB9I,WAI9BoR,QAAQ,WAAS,WAEjB,SAAC,UAAc,CACb1K,OAAO,yBACPwL,aAAcC,SAASC,KACvBC,SAAU,mBAAqBtL,EAC/BuL,QAASC,OAAOvC,KAAKxD,GACrBlG,QAAS,EAAAkM,cAAcK,eACvBH,aAAcH,OAAOvC,KAAKxD,GAAsBzE,QAAO,SAAC4K,GACtD,OAAA1Q,aAAQ,EAARA,EAAU+F,SAASwE,EAAqBmG,GAAxC,IAEFG,iBAAiB7Q,aAAQ,EAARA,EAAUM,QAAS,GAAK,cACzCqQ,YAAa,SAAC5S,GAAU,OArQvB,SAACA,EAAiB+G,GAC3C,IAAIgM,EAAgB/S,EAAM6G,KAAI,SAACmM,GAAQ,OAAAxG,EAAqBwG,EAArB,IAClB,IAAjBhT,EAAMuC,QAAoD,QAApCwQ,EAAc/S,EAAMuC,OAAS,KACrDwQ,EAAgB,CAAC,QAEfA,EAAcxQ,OAAS,GAAKwQ,EAAc/K,SAAS,SACrD+K,EAAgBA,EAAchL,QAAO,SAACiL,GAAQ,MAAQ,QAARA,CAAA,KAGhD5F,GAAerG,EAAO,CACpB9E,SAAU8Q,GAEd,CAyPkDE,CAAmBjT,EAAO+G,EAA1B,QAG5B,SAAC,EAAAmK,UAAS,GACRxM,MAAM,UACNsN,WACE,SAAC,EAAAC,QAAO,GAAC9J,QAAQ,qCAAmC,WAClD,SAAC,EAAAgH,2BAA0B,CACzB7J,UAAU,aACVuD,MAAO,EAAAC,iBAAiB9I,WAI9BoR,QAAQ,SACRC,UAAW9D,GAAmBxG,EAAO,UACrCuK,kBAAuC,QAApB,EAAAxG,EAAO2C,OAAO1G,UAAM,eAAEkD,QAAM,WAE/C,SAAC,EAAAiJ,WAAU,CACT7B,UAAW9D,GAAmBxG,EAAO,UACrCjB,GAAG,kBAAiB,aACT,wBACX0L,KAAK,OACL2B,oBAAoB,iCACpBC,oBAAoB,4BACpBpT,MAAO4K,EAAW7D,GAClB3D,UAAW8G,EACXmJ,YAAY,EACZC,aAAc,SAACtT,GAAU,OAAAuL,EAAaxE,EAAO/G,EAApB,EACzBuT,aAAc,SAACvT,GAAU,OAAAuL,EAAaxE,EAAO/G,EAApB,EACzBwT,aAAc,WAAM,OAAAjI,EAAaxE,EAAO,GAApB,EACpB0M,cAAe,CACbC,OAAQ,OACRC,QAAS,KACTC,eAAgB,SAACC,GAAM,OAAAC,QAAQC,IAAI,iBAAkBF,EAA9B,GAEzBG,0BAAwB,EACxBC,iBAAiB,eAGrB,SAAC,UAAI,GAACrO,KAAM2E,IAA4BN,GAAM,WAC5C,UAAC,EAAAiH,UAAS,GACRE,QAAQ,uBACR1M,MAAM,kBACNwP,UAAQ,eAER,SAAC,EAAAC,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAiH,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,4BAEhCvG,GAAG,4BACHnB,KAAK,4BACLD,MAAM,4BACN0P,WAAYhK,EACZqH,SAAU,WACR,OAAArE,GAAerG,EAAO,CAAEqD,sBAAsB,GAA9C,KAGJ,SAAC,UAAkB,GACjBhC,MAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAgE,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,4BAEhClE,QAAQ,oFAAkF,WAE1F,SAAC,EAAAgM,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAiH,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,4BAEhCvG,GAAG,sCACHnB,KAAK,sCACLD,MAAM,oCACN0P,UAAWhK,EACXqH,SAAU,WACR,OAAArE,GAAerG,EAAO,CAAEqD,sBAAsB,GAA9C,0BAnNNrD,E,WAiOlB,KAKV,C,iUCltBA,WAEA,WACA,WACA,WAEMsN,EAAM,EAAAC,wBAAwBtU,MAC9BuU,EAAQ,EAAAC,yBAAyBxU,MAEjCL,GAAY,IAAAC,iBAAgB,CAChCyU,IAAK,CAAExL,MAAOwL,EAAKI,WAAY,OAAQC,SAAU,QACjDH,MAAO,CAAE1L,MAAO0L,EAAOE,WAAY,OAAQC,SAAU,UA4DvD,UAvCwB,SAAC,G,IAAEhH,EAAO,UAAED,EAAM,SAAEkH,EAAO,UAC3C9T,EAAUlB,IAEViV,EADW,CAAC,OAAQ,OACEC,OAAM,SAAC7B,GAAQ,OAAAtF,aAAO,EAAPA,EAAUsF,EAAV,IACrC8B,EAAWvC,OAAOhN,OAAOkI,GAAU,CAAC,GAAGoH,OAAM,SAAC7B,GAAQ,OAACA,CAAD,IACtD+B,EAAkBxC,OAAOvC,KAAKtC,GAAW,CAAC,GAC7C3F,QAAO,SAAC4K,GAAQ,SAAEjF,aAAO,EAAPA,EAAUiF,GAAZ,IAChBxF,MAAK,SAACwF,GAAQ,OAAAlF,aAAM,EAANA,EAASkF,EAAT,IAEjB,QAAQ,GACN,KAAKgC,EACH,OAAO,SAAC,EAAAlW,QAAO,CAACC,KAAK,OACvB,KAAKkW,GAAcE,EACjB,OACE,UAAC,EAAApP,KAAI,GAACsP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAAtP,SAAQ,GAACuP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAE,gBAAe,CAACtM,MAAO0L,QAE1B,SAAC,EAAA5O,SAAQ,WACP,mBAAML,UAAWzE,EAAQ0T,OAAK,2BAItC,KAAKQ,EACH,OACE,UAAC,EAAArP,KAAI,GAACsP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAAtP,SAAQ,GAACuP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAG,sBAAqB,CAACvM,MAAOwL,QAEhC,SAAC,EAAA1O,SAAQ,WACP,mBAAML,UAAWzE,EAAQwT,KAAG,6BAIpC,QACE,OAAO,wBAEb,C,s9CCrEA,eACA,cAGA,cAaa,EAAAgB,UACX,sGAEW,EAAAnJ,WAAa,SAAC8G,GACzB,IAAKA,EAAK,OAAO,EACjB,IAAMsC,EAAQ,IAAIC,OAAO,EAAAF,WACzB,OAAOrC,EAAIwC,MAAMF,EACnB,EAEa,EAAAxI,qBAAuB,SAAC2I,GACnC,OAAAA,EAAa5O,KAAI,SAAC,GAAgE,OAChFlC,KADsB,OAEtB8C,IAF2B,MAG3BC,kBAHiC,OAIjC7E,sBAJ2C,WAK3CoL,QALmD,SAMnDC,sBANyE,uBAAO,GAAlF,EAuBW,EAAAK,kBAAoB,SAC/BJ,EACAE,GAEA,IAAMqH,EAlBmB,SAACvH,GAC1B,OAAAA,EAAetH,KAAI,SAAC,GAAE,IAAAY,EAAG,MAAKkO,EAAI,IAAd,SAAqB,cACpCA,GAAI,CACPlO,IAAK,EAAF,KACEA,GAAG,CACNpE,OACGoE,aAAG,EAAHA,EAAKpE,SAAUoE,aAAG,EAAHA,EAAKmO,kBAIjBnO,aAAG,EAAHA,EAAKpE,MAHL,yDAAkDoE,aAAG,EAAHA,EAAKoO,UAAS,aAC9DpO,EAAM,UAAWA,EAAIoO,WAAa,O,GAP9C,CAiB8BC,CAAmB3H,GAC3CV,EAASiI,EAAsB7O,KAAI,SAAC,EAAgCE,G,IAA9BpC,EAAI,OAAE8C,EAAG,MAAWwC,EAAM,UAAsB,mBAEtFtF,aAAI,EAAJA,EAAMtB,OAAQ,CAAEsB,KAAMA,aAAI,EAAJA,EAAMtB,OAAU,CAAC,IACvCoE,aAAG,EAAHA,EAAKpE,OAAQ,CAAEoE,IAAKA,aAAG,EAAHA,EAAKpE,OAAU,CAAC,IACpC4G,aAAM,EAANA,EAAQ5G,OAAQ,CAAE4G,OAAQA,aAAM,EAANA,EAAQ5G,OAAU,CAAC,GAE9CgL,EAAatH,GAN0E,IAS5F,OAAI0G,EAAOoH,OAAM,SAACkB,GAAQ,WAAAlE,SAAQkE,EAAR,IACjB,GAGFtI,CACT,EAEa,EAAArC,qBAAuB,WAmBlC,OAjBA4K,EAAIC,UAAUD,EAAIE,OAAQ,kBAAkB,SAAUC,EAAcC,GAClE,OAAOC,KAAKC,KAAK,SAAUF,GAAS,SAAUpW,GAC5C,IAAKA,IAAUA,EAAMmW,GACnB,OAAO,EAET,GACEE,KAAKE,OAAOxO,QAAO,SAACyO,GAAM,OAAAA,IAAMxW,CAAN,IAAamN,MAAK,SAACqJ,GAAM,OAAAA,EAAEL,KAAkBnW,EAAMmW,EAA1B,IAEnD,MAAME,KAAKI,YAAY,CACrBC,KAAM,UAAGL,KAAKK,KAAI,YAAIP,KAI1B,OAAO,CACT,GACF,IAEOH,EAAIW,MACTX,EAAIE,SACDU,MAAM,CACLjS,KAAMqR,EAAIa,SAASC,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,YACtEvP,IAAKuO,EAAIa,SAASpP,IAAI,eAAeuP,SAAS,cAI/CC,eAAe,OAAQ,wBACvBA,eAAe,MAAO,wBAE7B,EAEa,EAAA7G,aAAe,CAC1B,6DACA,qEACA,gEACA,sEACA,2DACA,sEACA,sEACA,sDACA,sDACA,sDACA,4DACA,mDACA,mDACA,mDACA,qDACA,wDACA,mDACA,mDACA,mDACA,mDACA,mDACA,yEACA,yEACA,yEACA,8DACA,8DACA,8DACA,2DACA,2DACA,2DACA,sDACA,sDACA,sDACA,sDACA,sDACA,qDACA,gE,6mBC5IF,WACA,WAUA,aACA,WACA,WACA,cAEA,WACA,WACA,cACA,cACA,WACA,WACA,WACA,cAQMzQ,GAAY,IAAAC,iBAAgB,CAChCsX,eAAgB,CACdpX,gBAAiB,EAAAC,2BAA2BC,MAC5C4I,WAAY,QAEdvG,aAAc,CACZ8U,WAAY,QAEdC,YAAa,CACXC,aAAc,OACdzN,YAAa,SAEf0N,WAAY,CACVzO,MAAO,EAAA0O,2BAA2BvX,MAClC4O,SAAU,WACV4I,IAAK,MACLC,KAAM,OACNC,cAAe,UAgNnB,UA1M2B,SAAC,G,IAAEtU,EAAS,YAAEhB,EAAa,gBAAED,EAAU,aAC1DtB,EAAUlB,IACR9B,GAAS,IAAAD,iBAAe,KAC1BiB,GAAc,IAAAiC,kBAEd,GAA8B,IAAAK,UAAkB,YAA/CwW,EAAU,KAAEC,EAAa,KAC1B,GAA8C,IAAAzW,UAAS,CAAC,GAAvD0W,EAAkB,KAAEC,EAAqB,KAC1C,GAAwC,IAAA3W,UAAS,CAAC,GAAjD4W,EAAe,KAAEC,EAAkB,KACpC,GAAgC,IAAA7W,UAAS,IAAxCa,EAAW,KAAEiW,EAAc,KAC5B,GAA0C,IAAA9W,UAAmB,IAA5D+W,EAAgB,KAAEC,EAAmB,KACtC,GAAsC,IAAAhX,UAAmB,IAAxDiX,EAAc,KAAEC,EAAiB,KAElC,EACJxZ,EAAY+M,aAAuC,EAAAC,wBAA0B,CAAC,EADxE,IAAA/I,oBAAAA,OAAmB,IAAG,KAAE,EAAE,IAAAD,sBAAAA,OAAqB,IAAG,KAAE,EAGtDR,EAAe,WACnB4V,EAAe,IACfE,EAAoB,IACpBE,EAAkB,IAClBjW,EAAc,CAAEJ,YAAa,GAAIC,SAAU,GAAIC,OAAQ,IACzD,GAEA,IAAAlE,YAAU,WAGuB,IAA7BmE,EAAWD,OAAOK,QACa,IAA/BJ,EAAWF,SAASM,QACO,KAA3BJ,EAAWH,aACM,KAAhBA,GAAgD,IAA1BoW,EAAe7V,QAA4C,IAA5B2V,EAAiB3V,QAEvEF,GAEJ,GAAG,CAACF,IAEE,OAIF,aAAY,CACdH,YAAW,EACXkW,iBAAgB,EAChBE,eAAc,IANDE,EAAoB,cACfC,EAAyB,mBAC3BC,EAAuB,iBAOnCC,EAAY,SAACjH,EAAckH,GAC/B,IAAMC,EAAuB,SAATnH,EAAkB1O,EAAsBD,EACtD+V,EAAwB,GAO9B,OANAF,EAAMjM,SAAQ,SAAC9H,GACb,IAAMkU,EAAQF,EAAYlU,MAAK,SAAC+R,GAAM,OAAAA,EAAE7R,OAASA,CAAX,IAClCkU,GACFD,EAAOE,KAAKD,EAAMnU,MAEtB,IACOkU,CACT,GAEA,IAAA5a,YAAU,WACRoE,EAAc,CACZJ,YAAasW,EACbrW,SAAUwW,EAAU,UAAWF,GAC/BrW,OAAQuW,EAAU,OAAQD,IAE9B,GAAG,CAACF,EAAsBC,EAA2BC,IAErD,IAAM3U,EAAa,SAACiC,EAAYiT,EAAOC,GAGrCA,EAFoB,EAAH,GAAOD,GAAK,GACIhR,QAAO,SAACkR,GAAS,OAAAA,IAASnT,CAAT,IAEpD,EAkEA,OAhEA,IAAA9H,YAAU,WACR,IACE,IAAA6T,SAAQgG,KACR,IAAAhG,SAAQkG,IACuB,IAA/BjV,EAAoBP,QACa,IAAjCM,EAAsBN,OACtB,CACA,IAAM,EAAS,CAAC,EACV,EAAW,CAAC,EAClBO,EAAoB2J,SAAQ,SAACjI,GAAS,OAAC,EAAOA,EAAKG,MAAQH,EAAKE,KAA1B,IACtC7B,EAAsB4J,SAAQ,SAACyM,GAAY,OAAC,EAASA,EAAQvU,MAAQuU,EAAQxU,KAAlC,IAC3CoT,EAAsB,GACtBE,EAAmB,E,CAEvB,GAAG,CAAClV,EAAqBD,KAmDvB,UAAC,EAAA6C,KAAI,YACH,SAAC,EAAAC,SAAQ,WACP,UAAC,EAAAwT,WAAU,YACT,SAAC,EAAAxT,SAAQ,WACP,SAAC,UAAc,CACb0M,SAAS,0BACT3L,OAAO,cACPvB,WAAY/B,EACZkP,QA3II,CAAC,WAAY,UAAW,gBA4I5BhM,QAAS,EAAAkM,cAAcC,OACvBC,aAAciF,EACd/E,YAAagF,EACb9E,gBAAgB,SAChBsG,YAAY,SAAC,EAAAC,WAAU,SAG3B,SAAC,EAAA1T,SAAQ,UAjEU,WACzB,OAAQgS,GACN,IAAK,WACH,OACE,UAAC,EAAAjS,KAAI,YACH,SAAC,EAAA6L,UAAS,CACRpM,WAAY/B,EACZ0C,GAAG,SACHY,OAAO,gBACPgL,YAAY,qBACZ1R,MAAOgC,EACPyP,SAAU,SAACzR,GAAU,OAAAiY,EAAejY,EAAf,EACrBsF,UAAWzE,EAAQuW,eAErB,SAAC,EAAAkC,WAAU,CAAC5a,KAAK,KAAK4G,UAAWzE,EAAQyW,gBAG/C,IAAK,UACH,OACE,SAAC,UAAc,CACbjF,SAAS,gBACT3L,OAAO,iBACPvB,WAAY/B,EACZkP,QAASC,OAAOvC,KAAK6H,GACrBvR,QAAS,EAAAkM,cAAc+G,SACvB7G,aAAcwF,EACdtF,YAAauF,EACbrF,gBAAgB,sBAGtB,IAAK,eACH,OACE,SAAC,UAAc,CACbT,SAAS,aACT3L,OAAO,cACPvB,WAAY/B,EACZkP,QAASC,OAAOvC,KAAK+H,GACrBzR,QAAS,EAAAkM,cAAc+G,SACvB7G,aAAc0F,EACdxF,YAAayF,EACbvF,gBAAgB,2BAGtB,QACE,OAAO,wBAEb,CAmBmB0G,WAGf,SAAC,EAAA7T,SAAQ,WACP,SAAC,UAAkB,GACjBwC,QAAQ,mEACRC,OAAOvK,aAAI,EAAJA,EAAMwK,OACbC,aAAW,cAEX,SAAC,UAAU,CAACnD,WAAY/B,UAG5B,SAAC,UAAI,GAACwC,OAAQsS,EAAiB3V,QAAU6V,EAAe7V,QAAyB,IAAfP,IAAkB,WAClF,UAAC,EAAA2D,SAAQ,GAAC8T,UAAW,CAAExE,QAAS,aAAe3P,UAAWzE,EAAQqW,gBAAc,YAC9E,SAAC,EAAAwC,UAAS,GAACC,aAAa,WAAS,UAC9BzB,EAAiBrR,KAAI,SAACqS,GAAY,OACjC,SAAC,EAAAU,KAAI,GAEH3U,QAAS,WAAM,OAAApB,EAAWqV,EAAShB,EAAkBC,EAAtC,GAA0D,UAExEe,IAHIA,EAF0B,QASrC,SAAC,EAAAQ,UAAS,GAACC,aAAa,gBAAc,UACnCvB,EAAevR,KAAI,SAACrC,GAAS,OAC5B,SAAC,EAAAoV,KAAI,GAAY3U,QAAS,WAAM,OAAApB,EAAWW,EAAM4T,EAAgBC,EAAjC,GAAmD,UAChF7T,IADQA,EADiB,OAMf,KAAhBxC,IACC,SAAC,EAAA0X,UAAS,GAACC,aAAa,YAAU,WAChC,SAAC,EAAAC,KAAI,GAAmB3U,QAAS,WAAM,OAAAgT,EAAe,GAAf,GAAkB,UACtDjW,IADO,mBAKc,KAAzBsW,GAA+C,KAAhBtW,MAC9BkW,aAAgB,EAAhBA,EAAkB3V,YAClB6V,aAAc,EAAdA,EAAgB7V,WAClB,SAAC,EAAAmM,OAAM,GAACpJ,UAAWzE,EAAQwB,aAAc4C,QAAS5C,EAAciE,QAAQ,OAAO4N,UAAQ,yCAQnG,C,w+DC9PA,WAeA,WACA,WACA,WAKA,WACA,WACA,WACA,cACA,cACA,WAOA,aACA,WACA,WACA,cACA,WAMA,WACA,cACA,WAEMK,EAAQ,EAAAC,yBAAyBxU,MAEjCL,GAAY,IAAAC,iBAAgB,CAChC+I,YAAa,CACXC,WAAY,OACZC,MAAO,EAAAC,iBAAiB9I,OAE1B+I,iBAAkB,CAChB,UAAW,CACTC,WAAY,mBAGhBC,aAAc,CACZ7I,SAAU,CAAC,qBACX8I,OAAQ,UACRC,aAAc,iBACd,OAAQ,CACNN,MAAO,EAAAO,kBAAkBpJ,MAAQ,aACjCQ,QAAS,oBAEX,QAAS,CACP6I,KAAM,EAAAD,kBAAkBpJ,MAAQ,aAChCQ,QAAS,KAGb8I,UAAW,CACT,OAAQ,CACN,qBAAsB,CAAEJ,OAAQ,WAChC1I,QAAS,qBAGb+I,eAAgB,CACdnJ,SAAU,CAAC,qBACXI,QAAS,gCAEXgJ,aAAc,CACZpJ,SAAU,CAAC,qBACX,WAAY,CACVI,QAAS,QAGbmJ,WAAY,CACVC,YAAa,OACbC,WAAY,mBAEdE,iBAAkB,CAChBvJ,QAAS,4BAifb,UA7eyB,SAAC,G,IAAE+E,EAAM,SAAEC,EAAI,OAAEC,EAAS,YACjD,IAAKD,EAAM,OAAO,wBACV,IAAA+E,GAA4B,IAAA3M,iBAAe,wBAC7CoN,GAAgB,IAAA6O,0BAAyBtU,GACzC,GAAsC,IAAApE,WAAS,GAA9CuJ,EAAc,KAAEC,EAAiB,KAClC,GAA8B,IAAAxJ,UAClC6J,EAAcnE,KAAI,SAAC,GAAe,OAAP,QAAO,KAD7B+D,EAAU,KAAEC,EAAa,KAG1BhK,EAAUlB,IACVd,GAAc,IAAAiC,kBACdgK,GAAS,IAAAC,WAAU,CACvBC,cAAeA,EACfC,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,IAAAC,wBAClBC,eAAgB9F,EAAOsB,KAAI,WAAM,OAAGlC,MAAM,EAAM8C,KAAK,EAApB,IACjC6D,SAAU,WAAM,IAGZwO,GAAoB,IAAA1a,UACxB,WAAM,QAAC,IAAA0S,SAAQ9G,EAAeF,EAAOvF,OAA/B,GACN,CAACyF,EAAeF,EAAOvF,SAGnBgG,EAAe,SAACxE,EAAe/G,GACnC2K,GAAkB,GAClB,IAAMa,EAAW,KAAsBZ,GAAU,GACjDY,EAAYzE,GAAS/G,EACrB6K,EAAcW,EAChB,EAEQC,GAAgB,IAAAC,kBAAgB,YAElCC,GAAsB,aAAYf,EAAY,KAuC9C,EACJ/L,EAAY+M,aAAuC,EAAAC,wBAA0B,CAAC,EADxE,IAAA/I,oBAAqBE,OAAU,IAAG,KAAE,EAAE,IAAAH,sBAAuBE,OAAY,IAAG,KAAE,GAGtF,IAAA/E,YAAU,WAxCe,IAAO8N,IAyCbH,EAzCgC,mC,wDAC7B,SAAMI,QAAQC,IAChC,KAAIlB,EAAOvF,QAAM,GAAEsB,KAAI,SAAOtB,EAAQwB,GAAK,0C,yEACnCkF,EAAcH,EAAK/E,IACrB,IAAAmF,YAAWD,GACE,GAAMR,EAAYQ,IAD/B,M,OAGF,IAFME,EAAS,YAEAF,EAEb,OADAV,EAAaxE,EAAOoF,GACb,CAAP,WACK5G,GAAM,CACT0E,OAAQkC,KACH5B,GAA6C,KAAlBhF,EAAO0E,QAAmBgC,EACtD,CACE7B,wBACgC,QAA5B,EAAuB,QAAvB,EAAAgC,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,6BAEpC,CAAC,I,iBAKX,MAAO,CAAP,WACK9G,GAAM,CACT0E,OAAQgC,KACH1B,GAA6C,KAAlBhF,EAAO0E,QAAmBgC,EACtD,CACE7B,wBAAoD,QAA5B,EAAuB,QAAvB,EAAAgC,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,6BAExD,CAAC,I,0BA5BLb,EAAc,SAiCpBV,EAAOwB,UAAUd,G,UAQnB,GAAG,CAACG,IAEE,OAA+C,IAAAvM,UAAQ,WAC3D,IAAMmN,EAAqB,CAAC,EACtBC,EAAuB,CAAC,EAG9B,OAFAxJ,EAAWyJ,SAAQ,SAAC,G,IAAE9H,EAAI,OAAED,EAAK,QAAO,OAAC6H,EAAmB5H,GAAQD,CAA5B,IACxC3B,EAAa0J,SAAQ,SAAC,G,IAAE9H,EAAI,OAAED,EAAK,QAAO,OAAC8H,EAAqB7H,GAAQD,CAA9B,IACnC,CAAE6H,mBAAkB,EAAEC,qBAAoB,EACnD,GAAG,CAACxJ,EAAYD,IANRwJ,EAAkB,qBAAEC,EAAoB,uBAQ1CE,EAAa,WACjBjH,IACAqF,EAAO8B,YACP/B,EAAc,CAAC,IACjB,EAEM,GAAqD,IAAAkP,qBACzDlb,GACA,IAAAmb,0BAAyBlP,EAAOvF,SAFb0U,EAAW,cAAaC,GAAS,YAKhDjN,GAA+C,IAAzBnC,EAAOvF,OAAOhD,OAEpC2K,IAAepC,EAAOvF,OAAO4H,MAAK,SAAC,GAAiB,OAAP,UAAO,IAMpDC,GAAiB,SAACrG,EAAesG,GACrC1C,GAAkB,GAClB,IAAMa,EAAc,EAAH,GAAOV,EAAOvF,QAAM,GACrCiG,EAAYzE,GAAS,EAAH,KAAQyE,EAAYzE,IAAWsG,GACjDvC,EAAOwB,UAAUd,EACnB,EAEM+B,GAAqB,SACzBxG,EACAyG,G,UAEM2M,GAAgB,IAAArI,SAA4B,QAApB,EAAA9G,EAAcjE,UAAM,eAAGyG,GAA4B,QAApB,EAAA1C,EAAOvF,OAAOwB,UAAM,eAAGyG,IAEpF,QAAQ,GACN,OAFmC,QAApB,EAAA1C,EAAO2C,OAAO1G,UAAM,eAAGyG,IAGpC,MAAO,QACT,KAAK2M,EACH,MAAO,UACT,KAAMA,EACJ,MAAO,UACT,QACE,MAAO,UAEb,EAEMrM,IAAkB,aAAYhD,EAAOvF,QAErC,IAA6D,IAAAwI,0BAA9CC,GAAmB,eAAQ5B,GAAc,SAE9D,IAAApO,YAAU,WACJwH,GACFwI,GACEF,GAAgBjH,KAAI,SAAC,GAAsD,OACzElC,KADyB,OAEzB8C,IAF8B,MAG9BwG,QAHsC,SAItCC,sBAJ4D,uBAK5DhJ,KALkE,OAAO,KAO3E5G,MAAK,SAAO6P,GAAc,0C,0DACL,SAAMrD,EAAOsD,aAAaN,K,cAAzCO,EAAe,SACfC,GAAkB,IAAAC,mBAAkBJ,EAAgBE,GAC1DvD,EAAO0D,UAAUF,GACjB3D,GAAkB,G,aAExB,GAAG,CAACmD,GAAiBvI,EAAQC,IAE7B,IAAMiJ,GAAW,SAAC1H,G,OACQ,QAApB,EAAA+D,EAAOvF,OAAOwB,UAAM,eAAEoD,UACxBiD,GAAerG,EAAO,EAAF,KAAO+D,EAAOvF,OAAOwB,IAAM,CAAEoD,UAAU,KACtDiD,GAAerG,EAAO,EAAF,KAAO+D,EAAOvF,OAAOwB,IAAM,CAAEoD,UAAU,IACpE,EAiDA,OACE,SAAC,EAAAwE,MAAK,GACJC,SAAS,MACTtI,QAAS,EAAAuI,aAAaC,OACtB9J,MAAM,yBACN0B,OAAO,yBACPqI,MACE,SAAC,EAAAC,QAAO,GACNC,eAAe,oDACfC,aAAa,0FAAsE,WAEnF,SAAC,EAAAR,OAAM,GAACpI,QAAQ,QAAO,aAAY,QAAM,WACvC,SAAC,EAAA6I,2BAA0B,UAIjCxG,aACE,gBAAGrD,UAAWzE,EAAQ8H,aAAW,0FAInCyG,OAAQ5J,EACR6J,QAAS3C,EACT4C,QACE,SAAC,EAAAC,MAAK,WACJ,UAAC,EAAAC,UAAS,YACR,SAAC,EAAAd,OAAM,GACLpJ,UAAWzE,EAAQ8I,WAEnBjD,OAAO,kBACPJ,QAAQ,UACRlD,UAAW8W,GACX/U,YACGuF,IACAI,EAAO2E,SACRyK,KACCJ,KACA,IAAAhI,SAAQhH,EAAOvF,OAAQuI,IAE1B7I,QAAS,WACPgV,IAAc3b,KAAKoO,EACrB,GAAC,UAEAoN,EAAoB,eAAiB,eAflC,YAiBN,SAAC,EAAApL,OAAM,GAAcpI,QAAQ,OAAOrB,QAASyH,EAAYhG,OAAO,qBAAmB,qBAAvE,gBAIR,WAGV,UAAC,EAAAD,gBAAe,gBAAY,uBAAuBC,OAAO,oBAAkB,YAC1E,SAAC,UAAI,GAACd,KAAMqH,IAAmB,WAC7B,SAAC,EAAAzF,MAAK,GAAC6I,WAAYnD,IAAW,WAC5B,UAAC,EAAAtG,GAAE,GAAC3B,QA/JU,WACtB6F,EAAOwB,UAAU,EAAD,GAAKxB,EAAOvF,OAAOsB,KAAI,SAAC6I,GAAS,cAAMA,GAAI,CAAEvF,UAAW+C,IAAvB,KAAsC,GACzF,EA6JwC5H,UAAWzE,EAAQoI,cAAY,YAC3D,SAAC,EAAApB,GAAE,CACDvC,UAAWzE,EAAQ2I,aACnBtB,cAAY,EACZoI,OAAQ,CACNC,SAAU,EACVF,WAAYnD,OAGhB,SAAC,EAAArF,GAAE,GAAC2I,UAAU,mBAAiB,UAAEtD,GAAc,eAAiB,0BAIrEpC,EAAOvF,OAAOsB,KACb,SACE,EACAE,G,sBADEoD,EAAQ,WAAExF,EAAI,OAAE8C,EAAG,MAAEjD,EAAI,OAAEyF,EAAM,SAAEhI,EAAQ,WAAEiI,EAAU,aAAEE,EAAoB,uBAE5E,OACH,UAAC,EAAA5C,MAAK,GAAa6I,WAAYpD,QAAsBwD,EAAYtG,GAAQ,YACvE,SAAC,UAAI,GAACvE,KAAMqH,IAAmB,WAC7B,UAAC,EAAArG,GAAE,GAACtB,UAAWzE,EAAQyI,WAAS,YAC9B,SAAC,EAAAzB,GAAE,CACD5C,QAAS,WAAM,OAAAwJ,GAAS1H,EAAT,EACfzB,UAAWzE,EAAQ2I,aACnBtB,cAAY,EACZoI,OAAQ,CACNC,SAAUxJ,EACVsJ,WAAYlG,MAGhB,SAAC,EAAAtC,GAAE,GAAC6I,MAAO,GAAIzL,QAAS,WAAM,OAAAwJ,GAAS1H,EAAT,EAAiByJ,UAAW7L,GAAI,UAC3DA,GAAQ,kBAEX,SAAC,EAAAkD,GAAE,GAAC5C,QAAS,WAAM,OAAAwJ,GAAS1H,EAAT,EAAiByJ,UAAU,YAAU,WACtD,SAAC,UAAe,CACd9C,QAAS5C,EAAO4C,QAAQ3G,GACxB0G,OAAQ3C,EAAO2C,OAAO1G,gBAK9B,SAAC,EAAAH,GAAE,GAACyJ,WAAYpD,QAAsBwD,EAAYtG,GAAQ,WACxD,SAAC,EAAAtC,GAAE,GACDmJ,QAAS,EACT1L,UACE2H,GAAsBpM,EAAQkJ,iBAAmBlJ,EAAQ0I,gBAAc,WAGzE,UAAC,EAAA0H,KAAI,YACH,SAAC,EAAAC,UAAS,GACRxM,MAAM,OACNyM,YAAU,EACVC,QAAQ,YACRC,UAAW9D,GAAmBxG,EAAO,QACrCuK,kBAAuC,QAApB,EAAAxG,EAAO2C,OAAO1G,UAAM,eAAEpC,MAAI,WAE7C,SAAC,EAAA4M,UAAS,CACRJ,YAAU,EACVrL,GAAG,OACHnB,KAAK,OACLD,MAAM,OACNgC,OAAO,aACP8K,KAAK,OACLH,UAAW9D,GAAmBxG,EAAO,QACrC0K,SAAU,SAACzR,GACToN,GAAerG,EAAO,CAAEpC,KAAM3E,GAChC,EACAA,MAAO2E,GAAQ,GACf+M,YAAY,mBAGhB,SAAC,EAAAR,UAAS,GACRxM,MAAM,MACNyM,YAAU,EACVC,QAAQ,MACRC,UAAW9D,GAAmBxG,EAAO,OACrCuK,kBAAuC,QAApB,EAAAxG,EAAO2C,OAAO1G,UAAM,eAAEU,KAAG,WAE5C,SAAC,EAAA8J,UAAS,CACRJ,YAAU,EACVK,KAAK,MACLH,UAAW9D,GAAmBxG,EAAO,OACrC4K,OAAQ,WAAM,OA3JlB,SAAC5K,IA7BU,SAACA,G,0BACtBU,EAA0B,QAApB,EAAAqD,EAAOvF,OAAOwB,UAAM,eAAEU,IAClC,IACE,IAAAyE,YAAWzE,KACqB,SAAX,QAApB,EAAAqD,EAAOvF,OAAOwB,UAAM,eAAEvC,OAAuD,QAArCsG,EAAOvF,OAAOwB,GAAO9E,SAAS,IACvE,CACA,IAAMuC,EAC4B,SAAX,QAApB,EAAAsG,EAAOvF,OAAOwB,UAAM,eAAEvC,QAAsC,QAApB,EAAAsG,EAAOvF,OAAOwB,UAAM,eAAEvC,QACgB,QAA/E,EAAAxB,EAAWyB,MAAK,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIO,SAASrD,IAAS8C,EAAIO,SAAStD,EAAnC,WAA0C,eAAEA,QACjF,MAEEzC,EAA0B,GAC9B,IAAkC,QAA9B,EAAoB,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAE9E,gBAAQ,eAAEM,SAA+C,QAArCuI,EAAOvF,OAAOwB,GAAO9E,SAAS,GAC1EA,EAA+B,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAE9E,aAC5B,CACL,IAAM2P,EAEL,QAFkB,EAAA7O,EAAa0B,MAC9B,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIO,SAASrD,IAAS8C,EAAIO,SAAS,IAAMtD,EAAzC,WACtB,eAAEA,MACCkN,IAAY3P,EAAW,CAAC2P,KACxB,IAAAC,SAAQ5P,KAAWA,EAAW,CAAC,O,CAErC,IAAwB,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAEvC,QAASA,KAAS,IAAAsN,SAAQ7P,EAA8B,QAApB,EAAA6I,EAAOvF,OAAOwB,UAAM,eAAEvC,MAAO,CACzF,IAAMgH,EAAc,EAAH,GAAOV,EAAOvF,QAAM,GACrCiG,EAAYzE,GAAS,EAAH,KAAQyE,EAAYzE,IAAW,CAAEvC,KAAI,EAAEvC,SAAQ,IACjE6I,EAAOwB,UAAUd,E,EAGvB,CAGEuG,CAAqBhL,EACvB,CAyJoCqT,CAAUrT,EAAV,EACd0K,SAAU,SAACzR,GACLyH,IAAQzH,GACVoN,GAAerG,EAAO,CAAEU,IAAKzH,GAEjC,EACAA,MAAOyH,GAAO,GACdiK,YAAY,WACZ5L,GAAG,MACHnB,KAAK,MACLD,MAAM,MACNgC,OAAO,kBAGX,SAAC,EAAAwK,UAAS,GACRxM,MAAM,wBAAuB,aAClB,2BACXsN,WACE,SAAC,EAAAC,QAAO,GAAC9J,QAAQ,2DAAyD,WACxE,SAAC,EAAAgH,2BAA0B,CACzB7J,UAAU,aACVuD,MAAO,EAAAC,iBAAiB9I,WAI9BoR,QAAQ,QAAM,WAEd,SAAC,UAAc,CACb1K,OAAO,2BACP2K,UAAW9D,GAAmBxG,EAAO,QACrCmL,aAAcC,SAASC,KACvBC,SAAU,gBAAkBtL,EAC5BuL,QAASC,OAAOvC,KAAKzD,GACrBjG,QAAS,EAAAkM,cAAcC,OACvBC,aAAcH,OAAOvC,KAAKzD,GAAoB9H,MAC5C,SAACkO,GAAgB,OAAAnO,IAAS+H,EAAmBoG,EAA5B,IAEnBC,YAAa,SAAC5S,GACZ,OAAAoN,GAAerG,EAAO,CAAEvC,KAAM+H,EAAmBvM,IAAjD,QAIN,SAAC,EAAAkR,UAAS,GACRxM,MAAM,sBAAqB,aAChB,yBACXsN,WACE,SAAC,EAAAC,QAAO,GAAC9J,QAAQ,yDAAuD,WACtE,SAAC,EAAAgH,2BAA0B,CACzB7J,UAAU,aACVuD,MAAO,EAAAC,iBAAiB9I,WAI9BoR,QAAQ,WAAS,WAEjB,SAAC,UAAc,CACb1K,OAAO,yBACP2K,UAAW9D,GAAmBxG,EAAO,YACrCmL,aAAcC,SAASC,KACvBC,SAAU,mBAAqBtL,EAC/BuL,QAASC,OAAOvC,KAAKxD,GACrBlG,QAAS,EAAAkM,cAAcK,eACvBH,aAAcH,OAAOvC,KAAKxD,GAAsBzE,QAAO,SAAC4K,GACtD,OAAA1Q,aAAQ,EAARA,EAAU+F,SAASwE,EAAqBmG,GAAxC,IAEFG,iBAAiB7Q,aAAQ,EAARA,EAAUM,QAAS,GAAK,cACzCqQ,YAAa,SAAC5S,GAAU,OAzNnB,SAACA,EAAiB+G,GAC3C,IAAIgM,EAAgB/S,EAAM6G,KAAI,SAACmM,GAAQ,OAAAxG,EAAqBwG,EAArB,IAClB,IAAjBhT,EAAMuC,QAAoD,QAApCwQ,EAAc/S,EAAMuC,OAAS,KACrDwQ,EAAgB,CAAC,QAEfA,EAAcxQ,OAAS,GAAKwQ,EAAc/K,SAAS,SACrD+K,EAAgBA,EAAchL,QAAO,SAACiL,GAAQ,MAAQ,QAARA,CAAA,KAGhD5F,GAAerG,EAAO,CACpB9E,SAAU8Q,GAEd,CA6M8CE,CAAmBjT,EAAO+G,EAA1B,QAG5B,SAAC,EAAAmK,UAAS,GACRxM,MAAM,UACNsN,WACE,SAAC,EAAAC,QAAO,GAAC9J,QAAQ,qCAAmC,WAClD,SAAC,EAAAgH,2BAA0B,CACzB7J,UAAU,aACVuD,MAAO,EAAAC,iBAAiB9I,WAI9BoR,QAAQ,SACRC,UAAW9D,GAAmBxG,EAAO,UACrCuK,kBAAuC,QAApB,EAAAxG,EAAO2C,OAAO1G,UAAM,eAAEkD,QAAM,WAE/C,SAAC,EAAAiJ,WAAU,CACT7B,UAAW9D,GAAmBxG,EAAO,UACrCjB,GAAG,kBAAiB,aACT,wBACX0L,KAAK,OACL2B,oBAAoB,iCACpBC,oBAAoB,4BACpBpT,MAAO4K,EAAW7D,GAClB3D,UAAW8G,EACXmJ,YAAY,EACZC,aAAc,SAACtT,GAAU,OAAAuL,EAAaxE,EAAO/G,EAApB,EACzBuT,aAAc,SAACvT,GAAU,OAAAuL,EAAaxE,EAAO/G,EAApB,EACzBwT,aAAc,WAAM,OAAAjI,EAAaxE,EAAO,GAApB,EACpB0M,cAAe,CACbC,OAAQ,OACRC,QAAS,KACTC,eAAgB,SAACC,GAAM,OAAAC,QAAQC,IAAI,iBAAkBF,EAA9B,GAEzBG,0BAAwB,EACxBC,iBAAiB,eAGrB,SAAC,UAAI,GAACrO,KAAM2E,IAA4BN,GAAM,WAC5C,UAAC,EAAAiH,UAAS,GAACE,QAAQ,uBAAuB1M,MAAM,kBAAkBwP,UAAQ,eACxE,SAAC,EAAAC,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAiH,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,4BAEhCvG,GAAG,4BACHnB,KAAK,4BACLD,MAAM,4BACN0P,WAAYhK,EACZqH,SAAU,WAAM,OAAArE,GAAerG,EAAO,CAAEqD,sBAAsB,GAA9C,KAElB,SAAC,UAAkB,GACjBhC,MAAmE,KAAjC,QAA5B,EAAuB,QAAvB,EAAAgE,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,4BACpClE,QAAQ,oFAAkF,WAE1F,SAAC,EAAAgM,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAiH,cAAc,EAAdA,GAAiBrF,UAAM,eAAEU,WAAG,eAAE4E,4BAEhCvG,GAAG,oCACHnB,KAAK,sCACLD,MAAM,oCACN0P,UAAWhK,EACXqH,SAAU,WAAM,OAAArE,GAAerG,EAAO,CAAEqD,sBAAsB,GAA9C,QAGpB,SAAC,UAAI,GACHxE,KAA4D,YAAtD2H,GAAmBxG,EAAO,yBAAqC,WAErE,SAAC,EAAAoO,gBAAe,CAACkF,iBAAe,EAACxR,MAAO0L,0BAvM1CxN,E,UAoNxB,C,8HC1jBa,EAAAiT,yBAA2B,SAACvE,GACvC,OAAAA,EAAa5O,KAAI,SAAC,G,IAAElC,EAAI,OAAE8C,EAAG,MAAEjD,EAAI,OAAEvC,EAAQ,WAAEgI,EAAM,SAAEG,EAAoB,uBAAa,OACtFlF,KAD+E,OAE/EP,KAAI,EACJ8C,IAAG,EACHC,kBAAmBlD,EACnB3B,sBAAuBZ,EACvBgM,QAAShE,EACTiE,sBAAuB9D,EAP+D,GAAxF,EAUW,EAAAyP,yBAA2B,SAACtU,GACvC,OAAAA,EAAOsB,KACL,SACE,EASAE,G,IAREpC,EAAI,OACJ8C,EAAG,MACgBjD,EAAI,oBACAvC,EAAQ,wBAC/BiD,EAAI,OAKH,OACHP,KAAI,EACJ8C,IAAG,EACHjD,KAAI,EACJvC,SAAQ,EACRgI,OATiB,UAUjBC,YAAY,EACZE,qBAV6C,wBAW7CD,SAAUpD,EAAQ,IAAMxB,EAAOhD,OAC/B2C,KAAI,EATD,GAZP,C,gZC/BF,WAQA,WACA,WACA,cAEMvF,GAAY,IAAAC,iBAAgB,CAChC0a,oBAAqB,CACnBra,QAAS,OACTsa,SAAU,GAEZC,cAAe,CACb9Q,aAAc,UAmClB,UA1BwB,SAAC,G,IAAEpH,EAAW,cAAED,EAAY,eAC5CxB,EAAUlB,IAChB,OACE,UAAC,EAAA8a,WAAU,GAACnU,QAAS,EAAAoU,kBAAkBC,KAAMrV,UAAWzE,EAAQyZ,qBAAmB,YACjF,SAAC,EAAAM,eAAc,CAACjL,KAAMrN,EAAc,EAAAsN,eAAiB,EAAA0J,cACrD,SAAC,EAAAuB,MAAK,GAACC,aAAa,KAAKpc,KAAK,KAAKgI,OAAO,sBAAoB,UAC3DpE,EACG,yBACA,uDAEN,SAAC,EAAAyY,eAAc,GAACzV,UAAWzE,EAAQ2Z,eAAa,UAC7ClY,EACG,6CACA,4CAELA,GACC,SAAC,UAAU,KAEX,SAAC,EAAAoM,OAAM,GAAChI,OAAO,gBAAgBJ,QAAQ,OAAOrB,QAAS5C,GAAY,oCAM3E,C,iZCnDA,WACA,WACA,WACA,WACA,cAEA,cAEM1C,GAAY,IAAAC,iBAAgB,CAChCob,KAAM,CACJnS,MAAO,EAAAoS,0BAA0Bjb,MACjC0Q,MAAO,eAETwK,KAAM,CACJ1a,QAAS,KA6Cb,UArCqB,SAAC,G,IAAEuE,EAAO,UACvBlE,EAAUlB,IACV,GAA4B,IAAAwB,WAAS,GAApCga,EAAS,KAAEC,EAAY,KAE9B,OAAKrW,EAAQsW,eAAoC,YAAnBtW,EAAQ4C,OAQf,YAAnB5C,EAAQ4C,QAER,SAAC,EAAAsK,QAAO,GAACqJ,sBAAoB,EAACnT,QAAQ,0BAAwB,WAC5D,SAAC,EAAAoT,KAAI,GAACjW,UAAWzE,EAAQma,MAAI,uBAMjC,iCACE,SAAC,UAAI,GAACpV,MAAOuV,GAAS,WACpB,SAAC,UAAY,CAACpW,QAASA,EAAS2H,WAAY,WAAM,OAAA0O,GAAa,EAAb,QAEpD,SAAC,EAAA1M,OAAM,GACLhI,OAAO,uBACPJ,QAAQ,OACRrB,QAAS,WAAM,OAAAmW,GAAa,EAAb,EACf9V,UAAWzE,EAAQqa,MAAI,UAEtBnW,EAAQsW,qBAzBX,SAAC,EAAApJ,QAAO,GAACqJ,sBAAoB,EAACnT,QAAQ,4CAA0C,WAC9E,SAAC,EAAAoT,KAAI,GAACjW,UAAWzE,EAAQma,MAAI,qBA4BrC,C,iZCzDA,WAaA,WAWA,WAKA,WACA,WACA,WACA,cAEA,WACA,WACA,cACA,cAEMrb,GAAY,IAAAC,iBAAgB,CAChC+I,YAAa,CACXC,WAAY,OACZ4S,cAAe,MACf3S,MAAO,EAAAC,iBAAiB9I,OAE1BH,cAAe,CACbC,gBAAiB,EAAAC,2BAA2BC,MAC5CC,QAAS,OACTC,cAAe,SACfO,OAAQ,QAEVH,aAAc,CACZC,eAAgB,gBAChBC,QAAS,YACTC,OAAQ,eAEVC,gBAAiB,CACfH,eAAgB,gBAChBE,OAAQ,eAEV2W,YAAa,CACXC,aAAc,OACdzN,YAAa,SAEf0N,WAAY,CACVzO,MAAO,EAAA0O,2BAA2BvX,MAClC4O,SAAU,WACV4I,IAAK,MACLC,KAAM,OACNC,cAAe,UASnB,mBAAqC,G,IACnC,IAAA3S,QAAWJ,EAAI,OAAEO,EAAI,OAAiBuW,EAAY,gBAClD/O,EAAU,aAEJ7L,EAAUlB,IACVoB,EAAgBC,OAAOC,aAAaC,QAAQ,oBAAsB,GAClE,GAAkB,IAAAC,UAAS,GAA1BC,EAAI,KAAEC,EAAO,KACd,GAAwB,IAAAF,UAASJ,GAAhCO,EAAO,KAAEC,EAAU,KACpB,GAAgC,IAAAJ,UAAS,IAAxCa,EAAW,KAAEiW,EAAc,KAC5B,GAAwC,IAAA9W,UAAiB,GAAxDS,EAAe,KAAEC,EAAkB,KACpC,GAAgD,IAAAV,UAAyB,OAAxEW,EAAmB,KAAEC,EAAsB,KAE5CuC,EAAgB,CAAC,OAAQ,UAAW,UAAW,QAE/CrB,EAAuB,CAAC,OAAQ,UAAW,UAAW,QAEtDC,GAAa,IAAA9D,UACjB,WAAM,OAAA6D,EAAqBrB,GAAmB,IAAME,CAA9C,GACN,CAACF,EAAiBE,IAGdwW,GAAuB,aAAYtW,IAEzC,IAAAhE,YAAU,WACRqD,EAAQ,EACV,GAAG,CAACiX,EAAsBpV,IAEpB,OAMF,IAAAwY,qBAAoBxW,EAAMuW,EAAcra,EAAME,EAASgX,EAAsBpV,GAL/EE,EAAS,YACTG,EAAU,aACVF,EAAK,QACLC,EAAO,UACP,IAAAV,KAAAA,OAAI,IAAG,GAAEA,KAAM,GAAIY,KAAM,CAAEC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAAK,EAGzDI,EAAuB,SAACC,EAAGC,GAAY,OAAA5C,EAAQ4C,EAAR,EAEvCC,EAAmC,SAACF,EAAGG,EAAYF,GAGvD1C,EAAW4C,GACX9C,EAAQ4C,GACRhD,aAAamD,QAAQ,iBAAkBD,EAAWE,WACpD,EAEMsX,EAAa,SAACzU,EAAqB/B,GACvC,IAAIA,EACJ,MAAO,CACLgC,OAAQ,CACNJ,MAAOnF,EACPwF,UAAWtF,EACXuF,iBAAkB,OAEpBC,OAAQ,SAACC,EAAQR,EAAOK,GACtBvF,EAAmBkF,GACnBhF,EAAuBqF,EACzB,EACAF,YAAW,EAEf,EAGA,GAAI5D,EAAS,MAAMD,EAGjB,MAEET,EAAI,KAFAgZ,OAAW,IAAG,KAAE,EACd,EACNhZ,EAAI,WADEa,OAAK,IAAG,IAAC,EAGboY,EAAoBtY,GAAcH,EAElC0Y,IAAuBD,IAAsBpY,EAEnD,OACE,SAAC,EAAAkL,MAAK,GAEJC,SAAS,MACTmN,kBAAgB,eACL,oBACXrV,OAAO,oBACPJ,QAAS,EAAAuI,aAAaC,OACtB9J,MAAM,WACN2D,aACE,iBAAGrD,UAAWzE,EAAQ8H,aAAW,yCACL,uBAAIhE,QAGlCyK,QAAM,EACNC,QAAS3C,EACT4C,QACE,SAAC,EAAAZ,OAAM,GAAapI,QAAQ,YAAYrB,QAASyH,GAAU,oBAA/C,UAEH,WAGX,SAAC,EAAAsP,qBAAoB,WACnB,UAAC,EAAA3W,KAAI,GAACC,UAAWzE,EAAQhB,eAAa,YACpC,UAAC,EAAA6F,KAAI,GAACJ,UAAWzE,EAAQP,cAAY,YACnC,UAAC,EAAAoF,KAAI,YACH,SAAC,EAAA6L,UAAS,CACRzL,GAAG,SACHY,OAAO,cACPgL,YAAY,iBACZ1R,MAAOgC,EACPyP,SAAU,SAACzR,GAAU,OAAAiY,EAAejY,EAAf,EACrBsF,UAAWzE,EAAQuW,eAErB,SAAC,EAAAkC,WAAU,CAAC5a,KAAK,KAAK4G,UAAWzE,EAAQyW,iBAE3C,SAAC,EAAA3R,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMkW,IAAmB,WAC7B,SAAC,EAAAjW,WAAU,CACTC,GAAG,oBACHC,SAAS,wBACTC,iBAAiB,SACjBC,UAAWxC,EACXnC,QAASA,EACTF,KAAMA,EACN2C,UAAWA,EACXmC,WAAS,EACThC,gBAAiBA,cAKzB,SAAC,UAAI,GAAC0B,MAAOiW,GAAiB,WAC5B,SAAC,EAAAxW,KAAI,GAACC,UAAWzE,EAAQhB,eAAa,WACpC,SAAC,EAAAsG,cAAa,CACZC,QAAS9E,EACT+E,QAAS/B,EAAc/B,OACvB+D,QAAS,EAAAC,aAAaC,iBAI5B,SAAC,UAAI,GAACZ,KAAMiW,GAAiB,WAC3B,UAAC,EAAApV,gBAAe,gBACH,4BACXC,OAAO,iBACPJ,QAAQ,WAAS,YAEjB,SAAC,EAAAK,MAAK,WACJ,SAAC,EAAAC,GAAE,UACAtC,EAAcuC,KAAI,SAACC,EAAcC,GAAU,OAC1C,SAAC,EAAAC,GAAE,GAEDC,KAAM0U,EAAW5U,EAAO+U,KAAoB,UAE3ChV,IAHIA,EAAe,UAFoB,SAUhD,UAAC,EAAAU,MAAK,WACHoU,EAAY/U,KAAI,SAAC,EAA+CE,G,IAA7CpC,EAAI,OAAEuU,EAAO,UAAE+C,EAAO,UAAEzX,EAAI,OAAmC,OACjF,UAAC,EAAAoC,GAAE,YACD,SAAC,EAAAiB,GAAE,UAAElD,KACL,SAAC,EAAAkD,GAAE,UAAEqR,KACL,SAAC,EAAArR,GAAE,UAAEoU,KACL,SAAC,EAAApU,GAAE,UAAErD,MAJEG,EAAOoC,EADiE,KAQnF,SAAC,UAAI,GAACnB,MAAOkW,IAAmB,WAC9B,SAAC,UAAiB,CAACI,YAAa,WAAM,OAAAjE,EAAe,GAAf,kBAK9C,UAAC,EAAAvS,KAAI,GAACJ,UAAWzE,EAAQH,iBAAe,YACtC,SAAC,EAAAiF,SAAQ,KACT,SAAC,EAAAA,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMkW,IAAmB,WAC7B,SAAC,EAAAjW,WAAU,CACTC,GAAG,uBACHC,SAAS,2BACTC,iBAAiB,SACjBC,UAAWxC,EACXnC,QAASA,EACTF,KAAMA,EACN2C,UAAWA,EACXuC,QAAS,EAAAmC,kBAAkBC,OAC3BxE,gBAAiBA,qBAzGxBgB,EAkHX,C,iUC3QA,WASA,WACA,WAGMvF,GAAY,EAFlB,SAEkBC,iBAAgB,CAChC0a,oBAAqB,CACnBra,QAAS,OACTsa,SAAU,EACV4B,OAAQ,UAQZ,mBAA0C,G,IAAED,EAAW,cAC/Crb,EAAUlB,IAChB,OACE,SAAC,EAAAiH,GAAE,WACD,SAAC,EAAAiB,GAAE,GAACmJ,QAAS,GAAC,WACZ,SAAC,EAAAxS,SAAQ,WACP,UAAC,EAAAic,WAAU,GAACnU,QAAS,EAAAoU,kBAAkBC,KAAMrV,UAAWzE,EAAQyZ,qBAAmB,YACjF,SAAC,EAAAM,eAAc,CAACjL,KAAM,EAAA2J,cACtB,SAAC,EAAAuB,MAAK,GAACC,aAAa,KAAKpc,KAAK,MAAI,sDAGlC,SAAC,EAAAqc,eAAc,8DACf,SAAC,EAAArM,OAAM,GAAChI,OAAO,gBAAgBJ,QAAQ,OAAOrB,QAASiX,GAAW,sCAQ9E,C,iZC7CA,WAMA,WACA,cACA,WAOM7H,EAAM,EAAAC,wBAAwBtU,MAC9BuU,EAAQ,EAAAC,yBAAyBxU,MACjCoc,EAAO,EAAAC,yBAAyBrc,MAChCsc,EAAO,EAAAC,sBAAsBvc,MAgEnC,UAzDmB,SAAC,G,IAAE2H,EAAM,SAAEtE,EAAK,QACjC,OAAQsE,GACN,IAAK,QACH,OACE,UAAC,EAAAjC,KAAI,GAACsP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAAtP,SAAQ,GAACuP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAE,gBAAe,CAACtM,MAAO0L,QAE1B,SAAC,EAAA5O,SAAQ,WACP,SAAC,UAAU,GAACkD,MAAM,SAAO,2BAIjC,IAAK,UACH,OACE,SAAC,EAAAoJ,QAAO,GAACrD,SAAS,YAAYzG,QAAS9E,GAAK,WAC1C,UAAC,EAAAqC,KAAI,GAACsP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAAtP,SAAQ,GAACuP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAG,sBAAqB,CAACvM,MAAOwL,QAEhC,SAAC,EAAA1O,SAAQ,WACP,SAAC,UAAU,GAACkD,MAAM,OAAK,gCAKjC,IAAK,cACH,OACE,SAAC,EAAAoJ,QAAO,GAACrD,SAAS,YAAYzG,QAAS9E,GAAK,WAC1C,UAAC,EAAAqC,KAAI,GAACsP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAAtP,SAAQ,GAACuP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAuH,wBAAuB,CAAC3T,MAAOuT,QAElC,SAAC,EAAAzW,SAAQ,WACP,SAAC,UAAU,GAACkD,MAAM,QAAM,oCAKlC,IAAK,UACH,OACE,SAAC,EAAAoJ,QAAO,GAACrD,SAAS,YAAYzG,QAAQ,4CAA0C,WAC9E,UAAC,EAAAzC,KAAI,GAACsP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAAtP,SAAQ,GAACuP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAwH,eAAc,CAAC5T,MAAOyT,QAEzB,SAAC,EAAA3W,SAAQ,WACP,SAAC,UAAU,GAACkD,MAAM,QAAM,gCAKlC,QACE,OAAO,wBAEb,C,iUChFA,WACA,WAOMwL,EAAM,EAAAqI,wBAAwB1c,MAC9BuU,EAAQ,EAAAoI,yBAAyB3c,MACjCoc,EAAO,EAAAQ,yBAAyB5c,MAChCsc,EAAO,EAAAO,sBAAsB7c,MAE7BL,GAAY,IAAAC,iBAAgB,CAChCyU,IAAK,CAAExL,MAAOwL,EAAKI,WAAY,OAAQC,SAAU,QACjDH,MAAO,CAAE1L,MAAO0L,EAAOE,WAAY,OAAQC,SAAU,QACrD0H,KAAM,CAAEvT,MAAOuT,EAAM3H,WAAY,OAAQC,SAAU,QACnD4H,KAAM,CAAEzT,MAAOyT,EAAM7H,WAAY,OAAQC,SAAU,UAcrD,UANmB,SAAC,G,IAAE7L,EAAK,QAAEiU,EAAQ,WAC7Bjc,EAAUlB,IAEhB,OAAO,mBAAM2F,UAAWzE,EAAQgI,IAAM,UAAGiU,IAC3C,C,6mBC7BA,WAaA,WACA,WAKA,WACA,WACA,WAEA,WAOA,cACA,WACA,WACA,cACA,cACA,WACA,cACA,cAEMnd,GAAY,IAAAC,iBAAgB,CAChCC,cAAe,CACbC,gBAAiB,EAAAC,2BAA2BC,MAC5CC,QAAS,OACTC,cAAe,UAEjBC,uBAAwB,CACtBC,SAAU,CAAC,kBACXC,UAAW,QAEbC,aAAc,CACZC,eAAgB,gBAChBC,QAAS,YACTC,OAAQ,eAEVC,gBAAiB,CACfH,eAAgB,gBAChBE,OAAQ,eAEVE,UAAW,CACTC,QAAS,GAEXwW,YAAa,CACXC,aAAc,OACdzN,YAAa,SAEf0N,WAAY,CACVzO,MAAO,EAAA0O,2BAA2BvX,MAClC4O,SAAU,WACV6I,KAAM,OACNC,cAAe,QAEjBqF,sBAAuB,CACrB5F,WAAY,QAEd6F,iBAAkB,CAChBC,SAAU,kBAEZC,SAAU,CACRrU,MAAO,EAAAoS,0BAA0Bjb,SA6VrC,UAzViC,W,MACzBa,EAAUlB,IACVd,GAAc,IAAAiC,kBACZjD,GAAS,IAAAD,iBAAe,KAC1B,GAAgD,IAAAuD,UAAoB,IAAnEgc,EAAmB,KAAEC,EAAsB,KAC5C,GAAkC,IAAAjc,UAA+B,IAAhEkc,EAAY,KAAEC,EAAe,KAC9B,GAAkC,IAAAnc,UAAiB,IAAlDoc,EAAY,KAAEC,EAAe,KAE9Bzc,EAAgBC,OAAOC,aAAaC,QAAQ,aAAe,GAC3D,GAAkB,IAAAC,UAAS,GAA1BC,EAAI,KAAEC,EAAO,KACd,GAAgC,IAAAF,UAAS,IAAxCsc,EAAW,KAAEC,EAAc,KAC5BC,GAAuB,aAAYF,GACnC,GAAwB,IAAAtc,UAASJ,GAAhCO,EAAO,KAAEC,EAAU,KAEpB,GAMF,IAAAqc,6BAA4Bxc,EAAME,EAAS,CAAEU,YAAa2b,IAL5Dva,EAAS,YACTC,EAAK,QACLC,EAAO,UACPC,EAAU,aACV,IAAAX,KAAAA,OAAI,IAAG,GAAEA,KAAM,GAAIY,KAAM,CAAEC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAAK,EAGzDka,GAAmB,IAAAze,UAAQ,WAAM,OAAAwD,EAAKA,KAAKiS,OAAM,SAAC,GAAa,QAAP,MAAO,GAA9B,GAAuC,CAACjS,IAEzEkb,GAAwB,IAAA1e,UAC5B,WAAM,OAAA+d,EAAoBhQ,MAAK,SAAC6F,GAAQ,OAAAA,CAAA,GAAlC,GACN,CAACmK,IAGGY,GAAsB,IAAA3e,UAC1B,WACE,OAACye,GAAoBjb,EAAKA,KAAKiS,OAAM,SAAC,EAAUlC,GAAQ,QAAZ,QAAsBwK,EAAoBxK,EAA9B,GAAxD,GACF,CAAC/P,EAAMua,EAAqBU,IAGxB,GAQF,IAAArb,uBAPSC,EAAuB,YAC3BC,EAAqB,QACnBC,GAAuB,UAChC,KAAAC,KAAA,eAAiF,CAC/EC,sBAAuB,GACvBC,oBAAqB,IACtB,GAH8BC,GAAY,yBAAuBC,GAAU,uBAMxE,IAAwD,IAAA6J,oBAC5DhO,EACAwe,GAFmBW,GAAe,eAAahR,GAAQ,cAKzD,IAAAhP,YAAU,WACHuF,IACH+Z,EAAgB,IAChBE,EAAgB,IAChBJ,EAAuBxa,EAAKA,KAAKiE,KAAI,WAAM,aAE/C,GAAG,CAACtD,KAEJ,IAAAvF,YAAU,W,OACM,QAAV,EAAA4E,aAAI,EAAJA,EAAMA,YAAI,eAAEL,QAAS,GAAoC,IAA/B4a,EAAoB5a,QAChD6a,EAAuBxa,EAAKA,KAAKiE,KAAI,WAAM,YAE/C,GAAG,CAAW,QAAV,EAAAjE,aAAI,EAAJA,EAAMA,YAAI,eAAEL,UAEhB,IAAAvE,YAAU,WACmB,GAAvBqf,EAAa9a,QACfyb,KAAkB1f,UAAKmS,GAAW,WAAM,OAAA6M,EAAgB,GAAhB,GAE5C,GAAG,CAACD,KAEJ,IAAArf,YAAU,WACJuf,GACF1Z,GAAW0Z,GAAcjf,UAAKmS,GAAW,WAAM,OAAA+M,EAAgB,GAAhB,GAEnD,GAAG,CAACD,IAEJ,IASMhZ,GAAgB,SAACC,GAAY,MAAK,OAA8C,QAA9C,EAAAxB,GAAWyB,MAAK,SAAC,G,IAAEC,EAAK,QAAO,OAAAF,IAASE,CAAT,WAAe,eAAEC,IAAI,EAQtF,IAAqD,IAAAf,4BACzD/E,EACAuC,EACAE,GAHmBuC,GAAU,eAOzBC,GAPgD,cAOdP,GAAcd,GAA2BuK,GAE3EjJ,GAAuB,SAACC,EAAGC,GAAY,OAAA5C,EAAQ4C,EAAR,EAEvCC,GAAmC,SAACF,EAAGG,EAAYF,GAEvDhD,aAAamD,QAAQ,UAAWD,EAAWE,YAC3C9C,EAAW4C,GACX9C,EAAQ4C,EACV,EA4BMK,GAAgB,CAAC,OAAQ,eAAgB,YAG/C,GAAIhB,EAAS,MAAMD,EACnB,GAAIV,GAAyB,MAAMD,EAGjC,OAEEE,EAAI,KAFAqb,QAAW,IAAG,MAAE,GACd,GACNrb,EAAI,WADEa,QAAK,IAAG,KAAC,GAGnB,OACE,UAAC,EAAA4B,KAAI,GAACC,UAAWzE,EAAQhB,eAAa,YACpC,UAAC,EAAA6F,KAAI,GAACJ,UAAWzE,EAAQP,cAAY,YACnC,SAAC,EAAAqF,SAAQ,WACP,UAAC,EAAAwT,WAAU,YACT,UAAC,EAAAxT,SAAQ,YACP,SAAC,EAAA4L,UAAS,CACRpM,WAAY/B,EACZ0C,GAAG,SACHY,OAAO,wBACPgL,YAAY,qBACZ1R,MAAOyd,EACPhM,SAAUiM,EACVpY,UAAWzE,EAAQuW,eAErB,SAAC,EAAAkC,WAAU,CAAC5a,KAAK,KAAK4G,UAAWzE,EAAQyW,iBAE3C,SAAC,EAAA3R,SAAQ,WACP,SAAC,UAAkB,GACjBwC,QAAQ,mEACRC,OAAOvK,aAAI,EAAJA,EAAMwK,OACbC,aAAW,cAEX,SAAC,EAAAoG,OAAM,GACLzJ,QA7DI,WAClB,IAAMiZ,EAAgC,GACtCf,EAAoB1Q,SAAQ,SAAC0R,EAASpX,GACpC,GAAIoX,IAAWvb,aAAI,EAAJA,EAAMA,KAAKmE,MAAWnE,EAAKA,KAAKmE,GAAO7B,KAAM,CACpD,MAOFtC,EAAKA,KAAKmE,GANZqX,EAAc,iBACd3W,EAAG,MACH5E,EAAqB,wBACrB6E,EAAiB,oBACjBuG,EAAO,UACPC,EAAqB,wBAGvBgQ,EAAQpF,KAAK,CACXnU,KAAMyZ,EACN3W,IAAG,EACH5E,sBAAqB,EACrB6E,kBAAiB,EACjBuG,QAAO,EACPC,sBAAqB,G,CAG3B,IACAoP,EAAgBY,EAClB,EAsCgB5Y,UAAWzE,EAAQkc,sBACnB5X,YAAa2Y,EACbpX,OAAO,qBAAmB,2CAQpC,SAAC,EAAAf,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMxC,GAAS,WACnB,SAAC,EAAAyC,WAAU,CACTC,GAAG,oBACHC,SAAS,wBACTC,iBAAiB,SACjBb,WAAY/B,EACZ6C,UAAWxC,GACXnC,QAASA,EACTF,KAAMA,EACN2C,UAAWA,GACXmC,WAAS,EACThC,gBAAiBA,eAKzB,SAAC,UAAI,GAAC0B,MAAOxC,GAAS,WACpB,SAAC,EAAAiC,KAAI,GAACC,UAAWzE,EAAQV,wBAAsB,WAC7C,SAAC,EAAAgG,cAAa,CACZC,QAAS9E,EACT+E,QAAS/B,GAAc/B,OACvB+D,QAAS,EAAAC,aAAaC,iBAI5B,SAAC,UAAI,GAACZ,KAAMxC,GAAS,WACnB,iCACE,UAAC,EAAAqD,gBAAe,gBACH,6BACXC,OAAO,sBACPJ,QAAQ,WAAS,YAEjB,SAAC,EAAAK,MAAK,WACJ,UAAC,EAAAC,GAAE,YACD,SAAC,UAAI,GAAChB,OAAO/H,aAAI,EAAJA,EAAMwK,QAAK,WACtB,SAAC,EAAArB,GAAE,CACD1B,UAAWzE,EAAQmc,iBACnBqB,OAAQ,CACNC,SA5IG,SAACta,EAAGma,GACzB,OAAAf,EAAuBxa,EAAKA,KAAKiE,KAAI,WAAM,OAAAsX,CAAA,IAA3C,EA4IkBI,WAAYR,EACZS,uBAAwBX,QAI7BvZ,GAAcuC,KAAI,SAACC,GAAiB,OACnC,SAAC,EAAAE,GAAE,UAAgCF,GAA1BA,EAAe,SADW,KAGrC,SAAC,EAAAE,GAAE,WACD,SAAC,EAAAvI,QAAO,CAACC,KAAK,KAAK4G,UAAWxB,GAAoB,GAAKjD,EAAQF,oBAIrE,SAAC,EAAA6G,MAAK,UACHyW,GAAYpX,KACX,SACE,EAUA8L,G,MAlKQ1Q,EAyJNiD,EAAI,OACJuZ,EAAa,gBACbL,EAAc,iBACd3W,EAAG,MACHC,EAAiB,oBACjB7E,EAAqB,wBACrBoL,EAAO,UACPC,EAAqB,wBAGpB,OACH,UAAC,EAAAtH,GAAE,YACD,SAAC,UAAI,GAAChB,OAAO/H,aAAI,EAAJA,EAAMwK,QAAK,WACtB,SAAC,EAAAR,GAAE,CACDwW,OAAQ,CACN9N,SAAUoC,EACV2L,SAAU,SAAC/W,EAAQmX,GAAgB,OApLtB1e,EAoLwC0e,GAnLrErR,EAAW8P,GAmLqDxK,GAlLpD3S,OAClBod,EAAuB,EAAD,GAAK/P,GAAQ,IAHhB,IAAgBrN,EAC7BqN,CAmLmD,EACnCkR,YAAYrZ,GAAeiY,EAAoBxK,GAC/CgM,UAAWzZ,SAIjB,SAAC,EAAA2C,GAAE,WACD,iCACE,UAAC,EAAAnC,KAAI,GAAC0B,UAAW,CAAE6N,QAAS,QAAO,YACjC,UAAC,EAAAtP,SAAQ,eAAGyY,KACXK,GAAiBL,IAAmBK,IACnC,UAAC,EAAA9Y,SAAQ,GAACL,UAAWzE,EAAQqc,UAAQ,4BACpBuB,WAIrB,SAAC,UAAmB,CAAC3W,KAAML,UAG/B,SAAC,EAAAI,GAAE,UAAEtD,GAAcmD,MACnB,SAAC,EAAAG,GAAE,WA7LG5F,EA6LcY,EA5LpCE,GACGgF,QAAO,SAAC,G,IAAErD,EAAK,QAAO,OAAAzC,aAAQ,EAARA,EAAU+F,SAAStD,EAAnB,IACtBmC,KAAI,SAAC,GAAa,OAAP,MAAO,IAClBoB,KAAK,UA0LQ,SAAC,EAAAJ,GAAE,GAAC6I,MAAO,IAAE,WACX,SAAC,UAAkB,GACjBvI,QAAQ,mEACRC,OAAOvK,aAAI,EAAJA,EAAMwK,OACbC,aAAW,aAEVpD,GACC,SAAC,EAAAwJ,OAAM,GACLvJ,WAAYD,IAASqY,EACrBtY,QAAS,WAAM,OAAAuY,EAAgBtY,EAAhB,EACfoB,QAAQ,SACRI,OAAO,uBAAqB,uBAK9B,SAAC,EAAAgI,OAAM,GACLpI,QAAQ,YACRnB,YAA6B,QAAjB,EAAAkY,EAAa1K,UAAI,eAAElL,OAAQA,EACvCxC,QAAS,WACP,OAAAqY,EAAgB,CACd,CACE3Y,KAAMyZ,EACN3W,IAAG,EACH5E,sBAAqB,EACrB6E,kBAAiB,EACjBuG,QAAO,EACPC,sBAAqB,IAPzB,EAWFxH,OAAO,oBAAkB,2BAzD1B0X,EAAiBzL,E,WAqElC,UAAC,EAAAjN,KAAI,GAACJ,UAAWzE,EAAQH,iBAAe,YACtC,SAAC,EAAAiF,SAAQ,KACT,SAAC,EAAAA,SAAQ,WACP,SAAC,EAAAE,WAAU,CACTC,GAAG,uBACHC,SAAS,2BACTC,iBAAiB,SACjBC,UAAWxC,GACXnC,QAASA,EACTF,KAAMA,EACN2C,UAAWA,GACXuC,QAAS,EAAAmC,kBAAkBC,OAC3BxE,gBAAiBA,kBAM3B,SAAC,UAAI,GAAC0B,KAA2B,IAArBhD,EAAKA,KAAKL,QAAgBa,GAAS,WAC7C,SAAC,UAAe,CAACf,aAAc,WAAM,OAAAqb,EAAe,GAAf,UAI7C,C,iUCzaA,WAQA,WAGM/d,GAAY,EAFlB,SAEkBC,iBAAgB,CAChC0a,oBAAqB,CACnBra,QAAS,OACTsa,SAAU,GAEZC,cAAe,CACb9Q,aAAc,UA0BlB,UAlBwB,SAAC,G,IAAErH,EAAY,eAC/BxB,EAAUlB,IAChB,OACE,UAAC,EAAA8a,WAAU,GAACnU,QAAS,EAAAoU,kBAAkBC,KAAMrV,UAAWzE,EAAQyZ,qBAAmB,YACjF,SAAC,EAAAM,eAAc,CAACjL,KAAM,EAAA2J,cACtB,SAAC,EAAAuB,MAAK,GAACC,aAAa,KAAKpc,KAAK,MAAI,kEAGlC,SAAC,EAAAqc,eAAc,GAACzV,UAAWzE,EAAQ2Z,eAAa,uDAGhD,SAAC,EAAA9L,OAAM,GAAChI,OAAO,gBAAgBJ,QAAQ,OAAOrB,QAAS5C,GAAY,sCAKzE,C,qcCzCA,WACA,WACA,WACA,WACA,WAKA,WACA,WACA,cACA,cACA,WAGMuc,EAAa,aAKbjf,GAAY,IAAAC,iBAAgB,CAChCif,QAAS,CACPhW,MAAO,EAAAiW,iBAAiB9e,MACxB4I,WAAY,OAEdmW,KAAM,CACJjf,gBAAiB,EAAAC,2BAA2BC,OAE9Cgf,IAAK,CACH,WAAY,CACVxe,QAAS,IAGb0a,KAAM,CACJrS,MAAO,UACPoW,eAAgB,OAChBze,QAAS,WACT,kBAAmB,CACjB0e,cAAe,SAGnBC,gBAAiB,CACfhD,OAAQ,UAIC,EAAAiD,cAAgB,GAChB,EAAAC,2BAA6B,uBAE1C,IAAMC,EAAe,CACnB,CACEta,MAAO,oBACPua,MAAO,EAAAH,cACPI,QAAS,WAEX,CACExa,MAAO,uBACPua,MAAO,EAAAF,2BACPG,QAAS,YAIb,qBACE,IAAM3e,EAAUlB,IACV,GAAiC,IAAA8f,eAA/BC,EAAQ,WAAOC,EAAW,MAE5BC,GAAe,IAAAxgB,UAAQ,WAAM,WAAAygB,MAAKH,EAASI,MAAM,KAApB,GAA2B,CAACJ,IAC/D,OACE,iCACE,UAACd,EAAU,YACT,SAAC,EAAAmB,gBAAe,CAAC/a,MAAM,yBACvB,SAAC,EAAAuW,KAAI,GAACjW,UAAWzE,EAAQge,QAASnY,OAAO,mCAAiC,0EAI5E,SAAC,EAAAsZ,KAAI,GAAC1a,UAAWzE,EAAQke,KAAMrY,OAAO,cAAcuZ,UAAWL,GAAY,UACxEN,EAAazY,KAAI,SAAC,G,IAAE7B,EAAK,QAAEua,EAAK,QAAO,OACtC,SAAC,EAAAW,IAAG,CACF5a,UAAWzE,EAAQme,IACnBmB,UAAWZ,EAEXa,UAAW,EACXC,SAAUd,GAAS,UAAS,aAChBva,EACZ0B,OAAQ1B,EACRA,OACE,SAAC,EAAAsb,KAAI,GAAChb,UAAWzE,EAAQqa,KAAMqF,UAAWhB,EAAmBiB,GAAIjB,GAAK,WACpE,SAAC,EAAAkB,aAAY,UAAEzb,MADqCua,IANnDA,EAJ+B,QAiB1C,UAAC,EAAAmB,OAAM,WACJpB,EAAazY,KAAI,SAAC,EAAoB8L,G,IAAlB4M,EAAK,QAAEC,EAAO,UAAY,OAC7C,SAAC,EAAAmB,MAAK,CAEJjK,KAAM6I,EACNqB,SACE,SAAC,EAAAC,UAAS,WACR,SAAC,EAAAxb,KAAI,GAACC,UAAWzE,EAAQse,iBAAe,WACtC,SAACK,EAAO,UALT7M,EAAItO,WAFkC,KAa/C,SAAC,EAAAsc,MAAK,CAACjK,KAAK,IAAIkK,SAAS,SAAC,EAAAE,SAAQ,CAACN,GAAI,EAAApB,cAAe2B,SAAO,QAdlDpB,KAkBnB,C,gqBChHA,WACA,WAkBA,UAX2B,SAAC,GAAE,IAAAvX,EAAI,OAAE0U,EAAQ,WAAExU,EAAW,cAAKqN,EAAI,IAAtC,mCAC1B,OAAAvN,GACE,SAAC,EAAA6J,QAAO,KAAK0D,EAAI,WACf,yBACGmH,IAAY,IAAAkE,cAAalE,EAAUxU,EAAc,CAAEnD,WAAYmD,QAAgBmI,SAIpF,8BAAGqM,G,ggDChBP,WACA,cAqEA,UAzDuB,SAAC,GACtB,IAAAxK,EAAO,UACPhM,EAAO,UACPoM,EAAY,eACZE,EAAW,cACXwG,EAAU,aACVtG,EAAe,kBACf3N,EAAU,aACPwQ,EAAI,IARe,gGAUhBsL,EAAWnR,MAAMoR,QAAQxO,GAAgBA,EAAe,CAACA,GACzD,GAAsB,IAAAvR,WAAS,GAA9BiO,EAAM,KAAE+R,EAAS,KAGlBC,EAAa9O,EAAQzL,KAAI,SAACwa,EAAQta,GAAU,OAChD,SAAC,EAAAua,aAAY,CAAsBthB,MAAOqhB,GAAvBA,EAASta,EADoB,IAyBlD,OACE,SAAC,EAAAwa,OAAM,GACLpc,WAAYA,EACZmB,QAASA,EACTgY,SAzBa,SAAC/W,EAAQia,GACxB,OAAQlb,GACN,KAAK,EAAAkM,cAAcC,OACjBG,EAAY4O,GACZL,GAAU,GACV,MACF,KAAK,EAAA3O,cAAcK,eACnB,KAAK,EAAAL,cAAc+G,SACjB,GAAIzJ,MAAMoR,QAAQxO,GAAe,CAC/B,GAAIuO,EAASjZ,SAASwZ,GAAY,CAChC,IAAMC,EAAYR,EAASlZ,QAAO,SAAC2Z,GAAS,OAAAA,IAASF,CAAT,IAC5C5O,EAAY6O,GACZ,K,CAEF7O,EAAY,EAAD,KAAKqO,GAAU,GAAF,CAAEO,IAAS,IACnC,K,EAIR,EAOIG,WAAYV,EACZ7R,OAAQA,EACRX,SAlCa,SAACW,GAAW,OAAA+R,EAAU/R,EAAV,EAmCzB0D,gBAAiBA,EACjB8O,gCAA8B,EAC9BxI,WAAYA,GACRzD,EAAI,UAEPyL,IAGP,C,oVClEMS,EAFN,SAE0B,cAWb,EAAAhB,UAAY,SAAC,G,IAAE/D,EAAQ,WAAc,OAChD,SAAC+E,EAAiB,GAChBC,YAAY,kBACZC,WAAW,kBACXC,iBAAiB,sDAAoD,UAEpElF,IAN6C,C,kFCNlD,UAFa,SAAC,G,IAAElX,EAAI,OAAEkX,EAAQ,WAAc,OAAClX,GAAO,yBAAQ,8BAAGkX,GAAnB,C,4VCL5C,WAQA,WACA,WAMM8B,EAAa,aAIN,EAAAhgB,kBAA6C,WAAM,OAC9D,iCACE,SAACggB,EAAU,WACT,SAAC,EAAAmB,gBAAe,CAAC/a,MAAM,oBAEzB,SAAC,EAAAK,KAAI,GAAC4c,MAAO,CAAE9F,OAAQ,SAAQ,WAC7B,UAAC,EAAA1B,WAAU,GAACnU,QAAS,EAAAoU,kBAAkBC,MAAI,YACzC,SAAC,EAAAC,eAAc,CAACjL,KAAM,EAAAuS,YACtB,SAAC,EAAArH,MAAK,GAACC,aAAa,KAAKpc,KAAK,MAAI,uDAGlC,SAAC,EAAAqc,eAAc,wFAXyC,C,iUCnBhE,WAGMpb,GAAY,EAFlB,SAEkBC,iBAAgB,CAChCsb,KAAM,CACJiH,WAAY,SACZliB,QAAS,OACTyQ,MAAO,eAETf,KAAM,CACJwH,WAAY,SAiBhB,UAT4B,SAAC,G,IAAErP,EAAI,OAC3BjH,EAAUlB,IAChB,OACE,iBAAGmI,KAAMA,EAAMxC,UAAWzE,EAAQqa,KAAMkH,IAAI,aAAaC,OAAO,UAAQ,WACrEva,EAAI,KAAE,SAAC,EAAAwa,oBAAmB,CAAChd,UAAWzE,EAAQ8O,UAGrD,C,uXCzBA,WACA,UASa,EAAA4S,YAAa,IAAAC,eAAc,CAAC,GAE5B,EAAAhjB,gBAAkB,SAAC,G,IAAEsd,EAAQ,WAClC,GAAkB,IAAA3b,eAA2BsP,GAA5C5S,EAAI,KAAEC,EAAO,KACdyM,GAA0B,IAAAkY,SAAQ,+CAAgD,EAExF,OACE,SAAC,EAAAF,WAAWG,SAAQ,GAClB1iB,MAAO,CACLuK,wBAAuB,EACvBzM,QAAO,EACPD,KAAMA,EACF,CACEc,KAAMd,aAAI,EAAJA,EAAM8kB,cAAc,kBAAmB,eAAgB,QAC7Dta,MAAOxK,aAAI,EAAJA,EAAM8kB,cAAc,kBAAmB,eAAgB,eAEhElS,IACL,UAEAqM,IAGP,EAEa,EAAAlf,cAAgB,WAAM,WAAAglB,YAAW,EAAAL,WAAX,C,wtDClCnC,kBAmJa,EAAAM,uBAK+B,SAAOzhB,EAAMsC,EAAOvB,EAAYgF,GAAM,0C,gEAI/D,OAHXnF,EAAcG,aAAU,EAAVA,EAAYH,YAC1B8gB,EAAmC,QAApB,EAAA3gB,aAAU,EAAVA,EAAYF,gBAAQ,eAAEgG,KAAK,KAC1C8a,EAA8B,QAAlB,EAAA5gB,aAAU,EAAVA,EAAYD,cAAM,eAAE+F,KAAK,KAC1B,GAAM,UAAM+a,IAC3B,gEACG5hB,EAAO,GAAKsC,EAAK,kBACVA,EAAK,mBAAW1B,EAAW,oBAAY8gB,EAAY,iBAASC,EAAS,oBAAY5b,K,OAE7F,MAAO,CAAP,EALiB,SAIhB,M,QAIU,EAAA8b,eAKuB,SAAO7hB,EAAMsC,EAAOvB,EAAYgF,GAAM,0C,4DAIvD,OAHXnF,EAAcG,EAAWH,YACzB8gB,EAAe3gB,EAAWF,SAASgG,KAAK,KACxC8a,EAAY5gB,EAAWD,OAAO+F,KAAK,KACxB,GAAM,UAAM+a,IAC3B,wDACG5hB,EAAO,GAAKsC,EAAK,kBACVA,EAAK,mBAAW1B,EAAW,oBAAY8gB,EAAY,iBAASC,EAAS,oBAAY5b,K,OAE7F,MAAO,CAAP,EALiB,SAIhB,M,QAIU,EAAA+b,sBAAyD,SAAOhe,GAAY,0C,kDACtE,SAAM,UAAMie,OAAO,+CAAwCje,K,OAC5E,MAAO,CAAP,EADiB,SAAkE,M,QAIxE,EAAAke,oBAEgC,SAAOlF,GAAO,0C,kDACxC,SAAM,UAAMmF,KAAK,sDAAuDnF,I,OACzF,MAAO,CAAP,EADiB,SAAgF,M,QAItF,EAAAoF,oBAA0E,SACrFpF,GAAO,0C,kDAEU,SAAM,UAAMqF,MAC3B,iDAA0CrF,EAAQhZ,MAClDgZ,I,OAEF,MAAO,CAAP,EAJiB,SAGhB,M,QAIU,EAAAsF,oBAA+D,qD,kDACzD,SAAM,UAAMR,IAAI,mD,OACjC,MAAO,CAAP,EADiB,SAAiE,M,QAIvE,EAAAS,yBAEsB,SAAOvF,GAAO,0C,kDAC9B,SAAM,UAAMmF,KAC3B,4DACAnF,I,OAEF,MAAO,CAAP,EAJiB,SAGhB,M,QAIU,EAAAwF,UAAsD,SAAOjc,GAAW,0C,kDAClE,SAAM,UAAM4b,KAC3B,kEACA,CAAE5b,IAAG,K,OAEP,MAAO,CAAP,EAJiB,SAGhB,M,QAIU,EAAAkc,YAMoB,SAC/Bze,EACA9D,EACAsC,EACA1B,EACAmF,GAAc,0C,kDAEG,SAAM,UAAM6b,IAC3B,iDAA0C9d,EAAI,yBAC3C9D,EAAO,GAAKsC,EAAK,kBACVA,EAAK,mBAAW1B,EAAW,oBAAYmF,K,OAEnD,MAAO,CAAP,EALiB,SAIhB,M,utECnPH,eACA,WAEA,WACA,WAsBa,EAAAyc,iBAAmB,mBACnB,EAAAC,8BAAgC,gCAChC,EAAAhY,sBAAwB,wBACxB,EAAAiY,kBAAoB,oBACpB,EAAAC,aAAe,eAEf,EAAAnG,4BAA8B,SACzCxc,EACAsC,EACAvB,EACAgF,GAEA,WAAA6c,UAAQ,GACL,EAAAH,8BAA+BziB,EAAMsC,EAAOyD,GAAWoL,OAAOhN,OAAOpD,GAAc,CAAC,IAAE,IACvF,WAAM,WAAA0gB,wBAAuBzhB,EAAMsC,EAAOvB,EAAYgF,EAAhD,GACN,CACE8c,kBAAkB,EAClBC,UAAW,KALf,EASW,EAAA/gB,oBAAsB,SACjC/B,EACAsC,EACAvB,EACAgF,GAEA,WAAA6c,UAAQ,GACL,EAAAJ,iBAAkBxiB,EAAMsC,EAAOyD,GAAWoL,OAAOhN,OAAOpD,IAAW,IACpE,WAAM,WAAA8gB,gBAAe7hB,EAAMsC,EAAOvB,EAAYgF,EAAxC,GACN,CACE8c,kBAAkB,EAClBC,UAAW,KALf,EAUW,EAAArX,mBAAqB,SAAChO,EAA0Bqf,GACnD,IAAAiG,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAC,cAAY,WAAM,WAAAjB,qBAAoBlF,EAApB,GAA8B,CACrDoG,UAAW,SAAC1hB,G,MACJ2hB,EAAc3hB,EAAuBuK,MAAK,SAAC,GAAe,MAAW,YAAlB,QAAO,IAEhEgX,EAAO,CACL7d,QAAS,EAAAke,aAAaC,QACtBzf,OACEkZ,aAAO,EAAPA,EAAS3b,QAAS,EACd,UAAG2b,aAAO,EAAPA,EAAS3b,OAAM,8BAClB,6BAAkC,QAAZ,EAAA2b,aAAO,EAAPA,EAAU,UAAE,eAAEvZ,KAAI,WAC9CgE,YAAa4b,EACT,uCACA,oDAGN1lB,EAAY6lB,kBAAkB,EAAAd,kBAC9B/kB,EAAY6lB,kBAAkB,EAAAb,8BAChC,EACAc,QAAS,SAAC5O,G,cACJpN,EAAc,oBAElB,cAA4B,QAAb,EAAAoN,aAAG,EAAHA,EAAK6O,gBAAQ,eAAEhiB,OAC5B,IAAK,SACH+F,EAA2B,QAAb,EAAAoN,aAAG,EAAHA,EAAK6O,gBAAQ,eAAEhiB,KAC7B,MACF,IAAK,SAOD,QALF,EAA0B,QAA1B,EAAa,QAAb,EAAAmT,aAAG,EAAHA,EAAK6O,gBAAQ,eAAEhiB,KAAK6K,cAAM,eAAEhJ,MAAK,SAAC,G,IAAEogB,EAAM,SACxC,GAAIA,EAEF,OADAlc,EAAckc,GACP,CAEX,WAAE,SAAEA,OAMRV,EAAO,CACL7d,QAAS,EAAAke,aAAaM,OACtB9f,MAAO,qCACP2D,YAAW,GAEf,GAEJ,EAEa,EAAAoR,oBAAsB,SAAClb,EAA0Bqf,GACpD,IAAAiG,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAC,cAAY,WAAM,WAAAf,qBAAoBpF,EAAQ,GAA5B,GAAiC,CACxDoG,UAAW,WACTH,EAAO,CACL7d,QAAS,EAAAke,aAAaC,QACtBzf,MAAO,8BAAuBkZ,EAAQ3b,OAAM,YAAI2b,EAAQ3b,OAAS,EAAI,QAAU,UAEjF1D,EAAY6lB,kBAAkB,EAAAd,kBAC9B/kB,EAAY6lB,kBAAkB,EAAAb,8BAChC,EACAc,QAAS,SAAC5O,G,cACJpN,EAAc,oBAElB,cAA4B,QAAb,EAAAoN,aAAG,EAAHA,EAAK6O,gBAAQ,eAAEhiB,OAC5B,IAAK,SACH+F,EAA2B,QAAb,EAAAoN,aAAG,EAAHA,EAAK6O,gBAAQ,eAAEhiB,KAC7B,MACF,IAAK,SAOD,QALF,EAA0B,QAA1B,EAAa,QAAb,EAAAmT,aAAG,EAAHA,EAAK6O,gBAAQ,eAAEhiB,KAAK6K,cAAM,eAAEhJ,MAAK,SAAC,G,IAAEogB,EAAM,SACxC,GAAIA,EAEF,OADAlc,EAAckc,GACP,CAEX,WAAE,SAAEA,OAMRV,EAAO,CACL7d,QAAS,EAAAke,aAAaM,OACtB9f,MAAO,sCACP2D,YAAW,GAEf,GAEJ,EAEa,EAAAoF,uBAAyB,WAC5B,IAAAoW,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAC,cAAY,SAACnG,GAAkC,WAAAuF,0BAAyBvF,EAAzB,GAAmC,CACvFyG,QAAS,SAAC5O,GACR,IAAM1S,EAAQ0S,EACdoO,EAAO,CACL7d,QAAS,EAAAke,aAAaM,OACtB9f,MAAO,+BACP2D,YAAatF,aAAK,EAALA,EAAO+S,SAExB,GAEJ,EAEa,EAAAxS,2BAA6B,SACxC/E,EACAuC,EACAE,EACAa,EACAe,GAEA,IAAM6hB,EAAsB,EAAH,GACvB,EAAAnB,iBACAxiB,EACAE,GACGiR,OAAOhN,OAAOpD,GAAc,CAAC,IAAE,IAClCe,I,GAEMihB,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAC,aAAY,EAAAnB,sBAAuB,CACxC8B,SAAU,SAAO9f,GAAY,0C,wDAE3B,SAAMrG,EAAYomB,cAAcF,I,OAiBhC,OAjBA,SAEMG,EACJrmB,EAAY+M,aAAamZ,IAAwB,CAAC,EAGpDlmB,EAAYsmB,aAAaJ,GAAqB,W,MAAM,cAC/CG,GAAY,CACftiB,KAAuB,QAAjB,EAAAsiB,EAAatiB,YAAI,eAAEmF,QAAO,SAACnF,GAAS,OAAAsC,IAAStC,EAAKsC,IAAd,IAC1C1B,KAAM0hB,EAAa1hB,KACf,EAAD,KACM0hB,EAAa1hB,MAAI,CACpBC,MAAOyhB,EAAa1hB,KAAKC,MAAQyhB,EAAa1hB,KAAKC,MAAQ,EAAI,SAEjEgN,G,IAGC,CAAP,EAAO,CAAEyU,aAAY,EAAErmB,YAAW,I,QAEpCylB,UAAW,SAACc,EAAOC,EAAYC,GAErB,IAAAJ,EAAiBI,EAExB,aACDzmB,EAAY0mB,eAAe,EAAA3B,kBAAkB,SAAChhB,G,QAK5C,YAL4C,IAAAA,IAAAA,EAAA,KAC9B,QAAV,EAAAA,aAAI,EAAJA,EAAMY,YAAI,eAAEC,SACdb,EAAKY,KAAKC,OAA0B,QAAlB,EAAAyhB,aAAY,EAAZA,EAAc1hB,YAAI,eAAEC,OAAQ,GAGzCb,CACT,IACA/D,EAAY6lB,kBAAkB,EAAAd,kBAC9B/kB,EAAY6lB,kBAAkB,EAAAb,8BAChC,EAEAc,QAAS,SAAC5O,EAAKyP,EAAUF,GACvB,GAAIA,EAAS,CACH,IAAAJ,EAAiBI,EAExB,aACDzmB,EAAYsmB,aAAaJ,EAAqBG,GAC9C,IAAM7hB,EAAQ0S,EACdoO,EAAO,CACL7d,QAAS,EAAAke,aAAaM,OACtB9f,MAAO,wCACP2D,YAAatF,aAAK,EAALA,EAAO+S,S,CAG1B,GAEJ,EAEa,EAAA5T,oBAAsB,WACjC,WAAAwhB,UAAmC,EAAAnY,sBAAuB,EAAA2X,oBAAqB,CAC7ES,kBAAkB,EAClBC,UAAWuB,KAFb,EAKW,EAAA/Z,eAAiB,WACpB,IAAAyY,GAAW,IAAAC,mBAAiB,OAmBpC,MAAO,CAAE3Y,YAjBW,SAAOhE,GAAW,uBAAGsE,SAAO,W,gEAC1CkC,EAAUxG,E,iBAEC,O,sBAAA,IAAM,IAAAic,WAAUjc,I,cAAvB7E,EAAO,SACbqL,EAAUrL,EAAKqL,Q,+BACN,IAAA2W,SACDhiB,QADS,IAAG,GAAC,EAAC,GACyD,KACzE+F,EAA8B,iBAAT/F,EAAoBA,EAAOA,aAAI,EAAJA,EAAMwT,QAC5D+N,EAAO,CACL7d,QAAS,EAAAke,aAAaM,OACtB9f,MAAO,2CACP2D,YAAW,I,aAGf,MAAO,CAAP,EAAOsF,G,QAIX,EAEa,EAAAyN,oBAAsB,SACjCxW,EACAzB,EACArC,EACAsC,EACA1B,EACAmF,GAEA,WAAA6c,UACE,CAAC,EAAAD,aAAc7e,EAAM9D,EAAMsC,EAAO1B,EAAamF,EAAQ1D,IACvD,WAAM,WAAAkgB,aAAYze,EAAM9D,EAAMsC,EAAO1B,EAAamF,EAA5C,GACN,CACE8c,kBAAkB,EAClByB,mBAAmB,EACnBxB,UAAW,IACXS,QAAS,SAAC5O,GACA,IACF1S,EAAQ0S,GACdoO,GAFmB,IAAAC,mBAAiB,QAE7B,CACL9d,QAAS,EAAAke,aAAaM,OACtB9f,MAAO,8BACP2D,YAAatF,aAAK,EAALA,EAAO+S,SAExB,GAfJ,C,4FChRF,eACA,WASa,EAAAgO,gBAAkB,WAC7B,IAAMuB,GAAW,IAAAC,eAGjB,MAAO,CAAEzB,OAFM,SAAC0B,GAAiC,OAAAF,GAAS,IAAAG,iBAAgBD,GAAzB,EAGnD,C,mEChBA,eAgBA,UAdA,SAAwB7lB,EAAU+lB,GAC1B,OAAsC,IAAA5kB,UAAYnB,GAAjDgmB,EAAc,KAAEC,EAAiB,KAUxC,OARA,IAAAjoB,YAAU,WACR,IAAMkoB,EAAQC,YAAW,WAAM,OAAAF,EAAkBjmB,EAAlB,GAA0B+lB,GAAS,KAElE,OAAO,WACLK,aAAaF,EACf,CACF,GAAG,CAAClmB,EAAO+lB,IAEJC,CACT,C,2UCdA,eAGa,EAAA1mB,YAAc,W,IAAC,sDAAgC,SAAA+mB,UAAS,gBAAC,CAAC,EAAG,CAAC,GAAMC,GAAU,GAA/B,EAE/C,EAAAjnB,WAAa,WAAM,WAAAknB,eAAA,C","sources":["webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/Pages/ContentListTable/ContentListTable.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/AddContent.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/components/ContentValidity.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/helpers.ts","webpack:///./src/Pages/ContentListTable/components/ContentListFilters.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentModal.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/helpers.ts","webpack:///./src/Pages/ContentListTable/components/EmptyTableState.tsx","webpack:///./src/Pages/ContentListTable/components/PackageCount.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/PackageModal.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/components/EmptyPackageState.tsx","webpack:///./src/Pages/ContentListTable/components/StatusIcon.tsx","webpack:///./src/Pages/ContentListTable/components/StatusText.tsx","webpack:///./src/Pages/PopularRepositoriesTable/PopularRepositoriesTable.tsx","webpack:///./src/Pages/PopularRepositoriesTable/components/EmptyTableState.tsx","webpack:///./src/Routes.tsx","webpack:///./src/components/ConditionalTooltip/ConditionalTooltip.tsx","webpack:///./src/components/DropdownSelect/DropdownSelect.tsx","webpack:///./src/components/Error/ErrorPage.tsx","webpack:///./src/components/Hide/Hide.tsx","webpack:///./src/components/NoPermissionsPage/NoPermissionsPage.tsx","webpack:///./src/components/UrlWithLinkIcon/UrlWithLinkIcon.tsx","webpack:///./src/middleware/AppContext.tsx","webpack:///./src/services/Content/ContentApi.ts","webpack:///./src/services/Content/ContentQueries.ts","webpack:///./src/services/Notifications/Notifications.tsx","webpack:///./src/services/useDebounce.tsx","webpack:///./src/store/index.tsx"],"sourcesContent":["import '@redhat-cloud-services/frontend-components-utilities/styles/_all';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport Routes from './Routes';\nimport { useAppContext } from './middleware/AppContext';\nimport { NoPermissionsPage } from './components/NoPermissionsPage/NoPermissionsPage';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { insights } from '../package.json';\n\nimport { getRegistry as _getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { fetchRBAC } from '@redhat-cloud-services/insights-common-typescript';\nimport { useEffect } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst getRegistry = _getRegistry as unknown as () => { register: ({ notifications }) => void };\nconst { appname } = insights;\n\nexport default function App() {\n  const { rbac, setRbac } = useAppContext();\n  const chrome = useChrome();\n\n  useEffect(() => {\n    // Get chrome and register app\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n\n    if (chrome && !rbac) {\n      // Get permissions and store them in context\n      chrome.auth.getUser().then(async () => fetchRBAC(appname).then(setRbac));\n    }\n  }, [!!chrome]);\n\n  switch (true) {\n    case !rbac:\n      return (\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      );\n    case rbac?.read:\n      return (\n        <>\n          <NotificationsPortal />\n          <Routes />\n        </>\n      );\n\n    default:\n      return <NoPermissionsPage />;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport * as Redux from 'redux';\n\nimport App from './App';\nimport { ContextProvider } from './middleware/AppContext';\nimport { createStore, resetStore } from './store';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false, // TODO: Have a conversation about this\n    },\n  },\n});\n\ninterface AppEntryProps {\n  logger?: Redux.Middleware;\n}\n\nexport default function AppEntry({ logger }: AppEntryProps) {\n  const store = React.useMemo(() => {\n    resetStore();\n    if (logger) {\n      return createStore(logger).store;\n    }\n    return createStore().store;\n  }, [logger]);\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('view-list-page');\n  }, []);\n\n  return (\n    <ReduxProvider store={store}>\n      <ContextProvider>\n        <QueryClientProvider client={queryClient}>\n          <App />\n        </QueryClientProvider>\n      </ContextProvider>\n    </ReduxProvider>\n  );\n}\n","import {\n  Bullseye,\n  Flex,\n  FlexItem,\n  Grid,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  ActionsColumn,\n  IAction,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ContentItem, FilterData } from '../../services/Content/ContentApi';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  useContentListQuery,\n  useDeleteContentItemMutate,\n  useRepositoryParams,\n} from '../../services/Content/ContentQueries';\nimport ContentListFilters from './components/ContentListFilters';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from './components/EmptyTableState';\nimport { useQueryClient } from 'react-query';\nimport EditContentModal from './components/EditContentModal/EditContentModal';\nimport StatusIcon from './components/StatusIcon';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport PackageCount from './components/PackageCount';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nconst ContentListTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editValues, setEditValues] = useState<ContentItem[]>([]);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const [filterData, setFilterData] = useState<FilterData>({\n    searchQuery: '',\n    versions: [],\n    arches: [],\n  });\n\n  const clearFilters = () => setFilterData({ searchQuery: '', versions: [], arches: [] });\n\n  const notFiltered =\n    !filterData.arches?.length && filterData.searchQuery === '' && !filterData.versions?.length;\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const columnSortAttributes = [\n    'name',\n    'distribution_arch',\n    'distribution_versions',\n    'package_count',\n    'status',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useContentListQuery(page, perPage, filterData, sortString());\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions', 'Packages', 'Status'];\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: contentList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const rowActions = useCallback(\n    (rowData: ContentItem): IAction[] => [\n      {\n        title: 'Delete',\n        onClick: () =>\n          deleteItem(rowData?.uuid).then(() => {\n            // If this is the last item on a page, go to previous page.\n            if (page > 1 && count / perPage + 1 >= page && (count - 1) % perPage === 0) {\n              setPage(page - 1);\n            }\n          }),\n      },\n      {\n        isDisabled: actionTakingPlace,\n        title: 'Edit',\n        onClick: () => {\n          setEditValues([rowData]);\n          setEditModalOpen(true);\n        },\n      },\n    ],\n    [actionTakingPlace],\n  );\n\n  const countIsZero = count === 0;\n\n  if (countIsZero && notFiltered && !isLoading)\n    return (\n      <Bullseye>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Bullseye>\n    );\n\n  return (\n    <Grid className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}>\n      <EditContentModal\n        values={editValues}\n        open={editModalOpen}\n        setClosed={() => {\n          setEditModalOpen(false);\n          setEditValues([]);\n        }}\n      />\n      <Flex className={classes.topContainer}>\n        <ContentListFilters\n          isLoading={isLoading}\n          setFilterData={(values) => {\n            setFilterData(values);\n            setPage(1);\n          }}\n          filterData={filterData}\n        />\n        <FlexItem>\n          <Hide hide={countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer100Height}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={countIsZero || isLoading}>\n        <>\n          <TableComposable\n            aria-label='Custom repositories table'\n            ouiaId='custom_repositories_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                {columnHeaders.map((columnHeader, index) => (\n                  <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                    {columnHeader}\n                  </Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {contentList.map((rowData: ContentItem) => {\n                const {\n                  uuid,\n                  name,\n                  url,\n                  distribution_arch,\n                  distribution_versions,\n                  status,\n                  last_introspection_error,\n                } = rowData;\n                return (\n                  <Tr key={uuid}>\n                    <Td>\n                      {name}\n                      <br />\n                      <UrlWithExternalIcon href={url} />\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td>\n                      <PackageCount rowData={rowData} />\n                    </Td>\n                    <Td>\n                      <StatusIcon status={status} error={last_introspection_error} />\n                    </Td>\n                    <Td isActionCell>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        <ActionsColumn items={rowActions(rowData)} />\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero || isLoading}>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default ContentListTable;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  PlusCircleIcon,\n  MinusCircleIcon,\n} from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport { global_Color_200, global_link_Color } from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  isValidURL,\n  mapFormikToAPIValues,\n  mapValidationData,\n  makeValidationSchema,\n  magicURLList,\n  FormikValues,\n} from './helpers';\nimport useDebounce from '../../../../services/useDebounce';\nimport ContentValidity from './components/ContentValidity';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useAddContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../../middleware/AppContext';\nimport { isEmpty, isEqual } from 'lodash';\n\ninterface Props {\n  isDisabled?: boolean;\n}\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '8px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '8px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  addRepositoryButton: {\n    marginBottom: '24px',\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  removeButton: {\n    display: 'flex!important',\n    justifyContent: 'flex-end',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n});\n\nconst defaultValues: FormikValues = {\n  name: '',\n  url: '',\n  gpgKey: '',\n  arch: 'any',\n  versions: ['any'],\n  gpgLoading: false,\n  expanded: true,\n  metadataVerification: false,\n};\n\nconst defaultTouchedState = { name: false, url: false, gpgKey: false };\n\nconst AddContent = ({ isDisabled: isButtonDisabled }: Props) => {\n  const { hidePackageVerification, rbac } = useAppContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(['']);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: [defaultValues],\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: [defaultTouchedState],\n    onSubmit: () => undefined,\n  });\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n\n  const { fetchGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const handleModalToggle = () => setIsModalOpen(!isModalOpen);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    formik.setTouched([defaultTouchedState]);\n    formik.resetForm();\n    setGpgKeyList(['']);\n  };\n\n  const { mutateAsync: addContent, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    mapFormikToAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n    setTouchedOnLastItemIfUntouchedAndCollapsed();\n  };\n\n  const updateVariable = (index: number, newValue, callback?: () => void) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData).then(callback);\n  };\n\n  const addRepository = () => {\n    formik.setTouched([...formik.touched, defaultTouchedState]);\n    formik.setValues([\n      ...formik.values.map((vals) => ({ ...vals, expanded: false })),\n      defaultValues,\n    ]);\n    setChangeVerified(false);\n  };\n\n  const removeRepository = (index: number) => {\n    const newValues = formik.values;\n    newValues.splice(index, 1);\n\n    const newTouched = formik.touched;\n    newTouched.splice(index, 1);\n\n    const newErrors = formik.errors;\n    newErrors.splice(index, 1);\n\n    formik.setTouched(newTouched);\n    formik.setErrors(newErrors);\n    formik.setValues(newValues);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikValues,\n  ): 'default' | 'success' | 'error' => {\n    const value = !!formik.values[index]?.[field];\n    const errors = !!formik.errors[index]?.[field];\n    const touched = formik.touched[index]?.[field];\n    switch (true) {\n      case errors && touched:\n        return 'error';\n      case value && touched:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  // The below sets the item as touched if the user closes the expansion without touching any fields\n  // This is to ensure that the user understands that the item needs attention (and is in error)\n  const setTouchedOnLastItemIfUntouchedAndCollapsed = () => {\n    const lastItem = formik.touched?.length - 1 || 0;\n    const { name, url } = formik.touched[lastItem] || {};\n    if (!name && !url) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[lastItem] = { ...updatedTouched[lastItem], name: true, url: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  let debouncedValues = useDebounce(formik.values) || []; // Initial value of []\n\n  const { mutateAsync: validateContentList, data: validationList } = useValidateContentList();\n\n  useEffect(() => {\n    // If validate is getting called to often, we could useDeepCompare\n    if (isModalOpen) {\n      if (debouncedValues.length !== formik.values.length) debouncedValues = formik.values;\n      const newTouchedValues = [...formik.touched];\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification }, index) => {\n          if (!newTouchedValues[index]?.name && name) {\n            newTouchedValues[index] = { ...newTouchedValues[index], name: true };\n          }\n          if (!newTouchedValues[index]?.url && url) {\n            newTouchedValues[index] = { ...newTouchedValues[index], url: true };\n          }\n          if (!newTouchedValues[index]?.gpgKey && gpgKey) {\n            newTouchedValues[index] = { ...newTouchedValues[index], gpgKey: true };\n          }\n          return {\n            name,\n            url,\n            gpg_key: gpgKey,\n            metadata_verification: metadataVerification,\n          };\n        }),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n        setChangeVerified(true);\n        formik.setTouched(newTouchedValues);\n      });\n    }\n  }, [debouncedValues, debouncedValues.length, isModalOpen]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n      setTouchedOnLastItemIfUntouchedAndCollapsed();\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const magicButtonThatWillBeDeletedAtSomePoint = () => {\n    const baseArray = Array.from(Array(20).keys());\n    const newValues = baseArray.map((index) => ({\n      name: (Math.random() + 1).toString(36).substring(7),\n      url: magicURLList[index],\n      gpgKey: '',\n      arch: !(index % 3) ? 'x86_64' : 'any',\n      versions: !(index % 2) ? ['7'] : ['any'],\n      gpgLoading: false,\n      expanded: false,\n      metadataVerification: false,\n    }));\n    formik.setValues(newValues);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  return (\n    <>\n      <ConditionalTooltip\n        content='You do not have the required permissions to perform this action.'\n        show={!rbac?.write}\n        setDisabled\n      >\n        <Button\n          id='createContentSourceButton'\n          ouiaId='create_content_source'\n          variant='primary'\n          isDisabled={isButtonDisabled}\n          onClick={handleModalToggle}\n        >\n          Add repositories\n        </Button>\n      </ConditionalTooltip>\n      {isModalOpen ? (\n        <Modal\n          position='top'\n          variant={ModalVariant.medium}\n          title='Add custom repositories'\n          ouiaId='add_custom_repository'\n          help={\n            <Popover\n              headerContent={<div>Add a custom repository</div>}\n              bodyContent={<div>Use this form to enter the values for a new repository.</div>}\n            >\n              <Button variant='plain' aria-label='Help'>\n                <OutlinedQuestionCircleIcon />\n              </Button>\n            </Popover>\n          }\n          description={\n            <p className={classes.description}>\n              Add by completing the form. Default values may be provided automatically.\n            </p>\n          }\n          isOpen\n          onClose={closeModal}\n          footer={\n            <Stack>\n              <StackItem>\n                <Button\n                  isDisabled={!formik.isValid || formik.values.length > 19}\n                  className={classes.addRepositoryButton}\n                  variant='link'\n                  onClick={addRepository}\n                  icon={<PlusCircleIcon />}\n                  ouiaId='add_row'\n                >\n                  Add another repository\n                </Button>\n              </StackItem>\n              <StackItem>\n                <Button\n                  className={classes.saveButton}\n                  key='confirm'\n                  ouiaId='modal_save'\n                  variant='primary'\n                  isLoading={isAdding}\n                  isDisabled={\n                    !changeVerified ||\n                    !formik.isValid ||\n                    isAdding ||\n                    formik.values?.length !== debouncedValues?.length\n                  }\n                  onClick={() => addContent().then(closeModal)}\n                >\n                  Save\n                </Button>\n                <Button key='cancel' variant='link' onClick={closeModal} ouiaId='modal_cancel'>\n                  Cancel\n                </Button>\n                <Button\n                  key='magic'\n                  variant='link'\n                  isDisabled={formik.values.length > 19}\n                  color='green'\n                  onClick={magicButtonThatWillBeDeletedAtSomePoint}\n                >\n                  Add 20\n                </Button>\n              </StackItem>\n            </Stack>\n          }\n        >\n          <TableComposable aria-label='Table for repo add modal' ouiaId='add_modal_table'>\n            <Hide hide={createDataLengthOf1}>\n              <Tbody isExpanded={allExpanded}>\n                <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n                  <Td\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: 0,\n                      isExpanded: allExpanded,\n                    }}\n                  />\n                  <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n                </Tr>\n              </Tbody>\n            </Hide>\n            {formik.values.map(\n              (\n                { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n                index,\n              ) => (\n                <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                  <Hide hide={createDataLengthOf1}>\n                    <Tr className={classes.colHeader}>\n                      <Td\n                        onClick={() => onToggle(index)}\n                        className={classes.toggleAction}\n                        isActionCell\n                        expand={{\n                          rowIndex: index,\n                          isExpanded: expanded,\n                        }}\n                      />\n                      <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                        {name || 'New content'}\n                      </Td>\n                      <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                        <ContentValidity\n                          touched={formik.touched[index]}\n                          errors={formik.errors[index]}\n                        />\n                      </Td>\n                      <Td dataLabel='removeButton' className={classes.removeButton}>\n                        <Hide hide={formik.values.length === 1}>\n                          <Button\n                            onClick={() => removeRepository(index)}\n                            variant='link'\n                            icon={<MinusCircleIcon />}\n                          >\n                            Remove\n                          </Button>\n                        </Hide>\n                      </Td>\n                    </Tr>\n                  </Hide>\n                  <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                    <Td\n                      colSpan={4}\n                      className={\n                        createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                      }\n                    >\n                      <Form>\n                        <FormGroup\n                          label='Name'\n                          isRequired\n                          fieldId='namegroup'\n                          validated={getFieldValidation(index, 'name')}\n                          helperTextInvalid={formik.errors[index]?.name}\n                        >\n                          <TextInput\n                            isRequired\n                            id='name'\n                            name='name'\n                            label='Name'\n                            ouiaId='input_name'\n                            type='text'\n                            validated={getFieldValidation(index, 'name')}\n                            onChange={(value) => {\n                              updateVariable(index, { name: value });\n                            }}\n                            value={name || ''}\n                            placeholder='Enter name'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='URL'\n                          isRequired\n                          fieldId='url'\n                          validated={getFieldValidation(index, 'url')}\n                          helperTextInvalid={formik.errors[index]?.url}\n                        >\n                          <TextInput\n                            isRequired\n                            type='url'\n                            validated={getFieldValidation(index, 'url')}\n                            onBlur={() => updateArchAndVersion(index)}\n                            onChange={(value) => {\n                              if (url !== value) {\n                                updateVariable(index, { url: value });\n                              }\n                            }}\n                            value={url || ''}\n                            placeholder='https://'\n                            id='url'\n                            name='url'\n                            label='Url'\n                            ouiaId='input_url'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict architecture'\n                          aria-label='restrict_to_architecture'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package architecture'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='arch'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_architecture'\n                            menuAppendTo={document.body}\n                            toggleId={'archSelection' + index}\n                            options={Object.keys(distributionArches)}\n                            variant={SelectVariant.single}\n                            selectedProp={Object.keys(distributionArches).find(\n                              (key: string) => arch === distributionArches[key],\n                            )}\n                            setSelected={(value) =>\n                              updateVariable(index, { arch: distributionArches[value] })\n                            }\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict OS version'\n                          aria-label='restrict_to_os_version'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package OS version'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='version'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_os_version'\n                            menuAppendTo={document.body}\n                            toggleId={'versionSelection' + index}\n                            options={Object.keys(distributionVersions)}\n                            variant={SelectVariant.typeaheadMulti}\n                            selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                              versions?.includes(distributionVersions[key]),\n                            )}\n                            placeholderText={versions?.length ? '' : 'Any version'}\n                            setSelected={(value) => setVersionSelected(value, index)}\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='GPG key'\n                          labelIcon={\n                            <Tooltip content='Optional: Add GPG Key file or URL'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='gpgKey'\n                          validated={getFieldValidation(index, 'gpgKey')}\n                          helperTextInvalid={formik.errors[index]?.gpgKey}\n                        >\n                          <FileUpload\n                            validated={getFieldValidation(index, 'gpgKey')}\n                            id='gpgKey-uploader'\n                            aria-label='gpgkey_file_to_upload'\n                            type='text'\n                            filenamePlaceholder='Drag a file here or upload one'\n                            textAreaPlaceholder='Paste GPG key or URL here'\n                            value={gpgKeyList[index]}\n                            isLoading={gpgLoading}\n                            spellCheck={false}\n                            onDataChange={(value) => updateGpgKey(index, value)}\n                            onTextChange={(value) => updateGpgKey(index, value)}\n                            onClearClick={() => updateGpgKey(index, '')}\n                            dropzoneProps={{\n                              accept: '.txt',\n                              maxSize: 4096,\n                              onDropRejected: (e) => console.log('onDropRejected', e),\n                            }}\n                            allowEditingUploadedText\n                            browseButtonText='Upload'\n                          />\n                        </FormGroup>\n                        <Hide hide={hidePackageVerification || !gpgKey}>\n                          <FormGroup\n                            fieldId='metadataVerification'\n                            label='Use GPG key for'\n                            isInline\n                          >\n                            <Radio\n                              isDisabled={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              id='package-verification-only'\n                              name='package-verification-only'\n                              label='Package verification only'\n                              isChecked={!metadataVerification}\n                              onChange={() =>\n                                updateVariable(index, { metadataVerification: false })\n                              }\n                            />\n                            <ConditionalTooltip\n                              show={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                            >\n                              <Radio\n                                isDisabled={\n                                  validationList?.[index]?.url?.metadata_signature_present !== true\n                                }\n                                id='package-and-repository-verification'\n                                name='package-and-repository-verification'\n                                label='Package and metadata verification'\n                                isChecked={metadataVerification}\n                                onChange={() =>\n                                  updateVariable(index, { metadataVerification: true })\n                                }\n                              />\n                            </ConditionalTooltip>\n                          </FormGroup>\n                        </Hide>\n                      </Form>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              ),\n            )}\n          </TableComposable>\n        </Modal>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default AddContent;\n","import { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { global_success_color_100, global_danger_color_100 } from '@patternfly/react-tokens';\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  touched?: FormikTouched<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  errors?: FormikErrors<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  loading?: boolean;\n}\n\nconst ContentValidity = ({ touched, errors, loading }: Props) => {\n  const classes = useStyles();\n  const required = ['name', 'url'];\n  const allTouched = required.every((val) => touched?.[val]);\n  const noErrors = Object.values(errors || {}).every((val) => !val);\n  const hasTouchedError = Object.keys(touched || {})\n    .filter((key) => !!touched?.[key])\n    .some((key) => errors?.[key]);\n\n  switch (true) {\n    case loading:\n      return <Spinner size='md' />;\n    case allTouched && noErrors:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.green}>Valid</span>\n          </FlexItem>\n        </Flex>\n      );\n    case hasTouchedError:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.red}>Invalid</span>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ContentValidity;\n","import { isEmpty } from 'lodash';\nimport * as Yup from 'yup';\nimport { FormikErrors } from 'formik';\nimport { ValidationResponse } from '../../../../services/Content/ContentApi';\nimport ERROR_CODE from './httpErrorCodes.json';\n\nexport interface FormikValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  metadataVerification: boolean;\n  expanded: boolean;\n}\n\nexport const REGEX_URL =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nexport const isValidURL = (val: string) => {\n  if (!val) return false;\n  const regex = new RegExp(REGEX_URL);\n  return val.match(regex);\n};\n\nexport const mapFormikToAPIValues = (formikValues: FormikValues[]) =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification }) => ({\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nconst mapNoMetaDataError = (validationData: ValidationResponse) =>\n  validationData.map(({ url, ...rest }) => ({\n    ...rest,\n    url: {\n      ...url,\n      error:\n        !url?.error && !url?.metadata_present\n          ? `Unable to retrieve YUM Metadata, Recieved HTTP ${url?.http_code}: ${\n              url ? ERROR_CODE[url.http_code] : ''\n            }`\n          : url?.error,\n    },\n  }));\n\nexport const mapValidationData = (\n  validationData: ValidationResponse,\n  formikErrors: FormikErrors<FormikValues | undefined>[],\n) => {\n  const updatedValidationData = mapNoMetaDataError(validationData);\n  const errors = updatedValidationData.map(({ name, url, gpg_key: gpgKey }, index: number) => ({\n    // First apply the errors found in the ValidationAPI\n    ...(name?.error ? { name: name?.error } : {}),\n    ...(url?.error ? { url: url?.error } : {}),\n    ...(gpgKey?.error ? { gpgKey: gpgKey?.error } : {}),\n    // Overwrite any errors with errors found within the UI itself\n    ...formikErrors[index],\n  }));\n\n  if (errors.every((err) => isEmpty(err))) {\n    return [];\n  }\n\n  return errors;\n};\n\nexport const makeValidationSchema = () => {\n  // This adds the uniqueProperty function to the below schema validation\n  Yup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n      if (\n        this.parent.filter((v) => v !== value).some((v) => v[propertyName] === value[propertyName])\n      ) {\n        throw this.createError({\n          path: `${this.path}.${propertyName}`,\n        });\n      }\n\n      return true;\n    });\n  });\n\n  return Yup.array(\n    Yup.object()\n      .shape({\n        name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n        url: Yup.string().url('Invalid URL').required('Required'),\n      })\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore-next-line\n      .uniqueProperty('name', 'Names must be unique')\n      .uniqueProperty('url', 'Url\\'s must be unique'),\n  );\n};\n\nexport const magicURLList = [\n  'http://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/',\n  'http://mirror.stream.centos.org/SIGs/9/kmods/x86_64/packages-main/',\n  'http://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/',\n  'https://mirror.linux.duke.edu/pub/centos/8-stream/BaseOS/x86_64/os/',\n  'https://download-i2.fedoraproject.org/pub/epel/7/x86_64/',\n  'https://download-i2.fedoraproject.org/pub/epel/8/Everything/x86_64/',\n  'https://download-i2.fedoraproject.org/pub/epel/9/Everything/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el7/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el8/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el9/x86_64/',\n  'http://yum.theforeman.org/katello/4.6/katello/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el9/x86_64/',\n  'http://yum.theforeman.org/releases/3.4/el8/x86_64/',\n  'https://dl.google.com/linux/chrome/rpm/stable/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el9/x86_64/',\n  'http://yum.theforeman.org/client/3.2/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.2/el8/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/7/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/8/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/9/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/7/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/8/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/9/x86_64/',\n  'https://rpms.remirepo.net/enterprise/7/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/8/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/9/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/7/remi/x86_64/',\n  'https://rpms.remirepo.net/enterprise/8/remi/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.9/el7/x86_64/',\n  'http://yum.theforeman.org/katello/nightly/katello/el8/x86_64/',\n];\n","import { ReactElement, useEffect, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100, global_secondary_color_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport { FilterData, RepositoryParamsResponse } from '../../../services/Content/ContentApi';\nimport { useQueryClient } from 'react-query';\nimport { REPOSITORY_PARAMS_KEY } from '../../../services/Content/ContentQueries';\nimport useDebounce from '../../../services/useDebounce';\nimport AddContent from './AddContent/AddContent';\nimport { createUseStyles } from 'react-jss';\nimport { isEmpty } from 'lodash';\nimport { useAppContext } from '../../../middleware/AppContext';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: FilterData) => void;\n  filterData: FilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nexport type Filters = 'Name/URL' | 'Version' | 'Architecture';\n\nconst ContentListFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const { rbac } = useAppContext();\n  const queryClient = useQueryClient();\n  const filters = ['Name/URL', 'Version', 'Architecture'];\n  const [filterType, setFilterType] = useState<Filters>('Name/URL');\n  const [versionNamesLabels, setVersionNamesLabels] = useState({});\n  const [archNamesLabels, setArchNamesLabels] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedVersions, setSelectedVersions] = useState<string[]>([]);\n  const [selectedArches, setSelectedArches] = useState<string[]>([]);\n\n  const { distribution_arches = [], distribution_versions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setSelectedVersions([]);\n    setSelectedArches([]);\n    setFilterData({ searchQuery: '', versions: [], arches: [] });\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.arches.length === 0 &&\n      filterData.versions.length === 0 &&\n      filterData.searchQuery === '' &&\n      (searchQuery !== '' || selectedArches.length !== 0 || selectedVersions.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    searchQuery: debouncedSearchQuery,\n    selectedVersions: debouncedSelectedVersions,\n    selectedArches: debouncedSelectedArches,\n  } = useDebounce({\n    searchQuery,\n    selectedVersions,\n    selectedArches,\n  });\n\n  const getLabels = (type: string, names: Array<string>) => {\n    const namesLabels = type === 'arch' ? distribution_arches : distribution_versions;\n    const labels: Array<string> = [];\n    names.forEach((name) => {\n      const found = namesLabels.find((v) => v.name === name);\n      if (found) {\n        labels.push(found.label);\n      }\n    });\n    return labels;\n  };\n\n  useEffect(() => {\n    setFilterData({\n      searchQuery: debouncedSearchQuery,\n      versions: getLabels('version', debouncedSelectedVersions),\n      arches: getLabels('arch', debouncedSelectedArches),\n    });\n  }, [debouncedSearchQuery, debouncedSelectedVersions, debouncedSelectedArches]);\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    if (\n      isEmpty(versionNamesLabels) &&\n      isEmpty(archNamesLabels) &&\n      distribution_arches.length !== 0 &&\n      distribution_versions.length !== 0\n    ) {\n      const arches = {};\n      const versions = {};\n      distribution_arches.forEach((arch) => (arches[arch.name] = arch.label));\n      distribution_versions.forEach((version) => (versions[version.name] = version.label));\n      setVersionNamesLabels(versions);\n      setArchNamesLabels(arches);\n    }\n  }, [distribution_arches, distribution_versions]);\n\n  const getSelectionByType = (): ReactElement => {\n    switch (filterType) {\n      case 'Name/URL':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='search'\n              ouiaId='filter_search'\n              placeholder='Filter by name/url'\n              value={searchQuery}\n              onChange={(value) => setSearchQuery(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Version':\n        return (\n          <DropdownSelect\n            toggleId='versionSelect'\n            ouiaId='filter_version'\n            isDisabled={isLoading}\n            options={Object.keys(versionNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedVersions}\n            setSelected={setSelectedVersions}\n            placeholderText='Filter by version'\n          />\n        );\n      case 'Architecture':\n        return (\n          <DropdownSelect\n            toggleId='archSelect'\n            ouiaId='filter_arch'\n            isDisabled={isLoading}\n            options={Object.keys(archNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedArches}\n            setSelected={setSelectedArches}\n            placeholderText='Filter by architecture'\n          />\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <FlexItem>\n            <DropdownSelect\n              toggleId='filterSelectionDropdown'\n              ouiaId='filter_type'\n              isDisabled={isLoading}\n              options={filters}\n              variant={SelectVariant.single}\n              selectedProp={filterType}\n              setSelected={setFilterType}\n              placeholderText='filter'\n              toggleIcon={<FilterIcon />}\n            />\n          </FlexItem>\n          <FlexItem>{getSelectionByType()}</FlexItem>\n        </InputGroup>\n      </FlexItem>\n      <FlexItem>\n        <ConditionalTooltip\n          content='You do not have the required permissions to perform this action.'\n          show={!rbac?.write}\n          setDisabled\n        >\n          <AddContent isDisabled={isLoading} />\n        </ConditionalTooltip>\n      </FlexItem>\n      <Hide hide={!(selectedVersions.length || selectedArches.length || searchQuery != '')}>\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Version'>\n            {selectedVersions.map((version) => (\n              <Chip\n                key={version}\n                onClick={() => deleteItem(version, selectedVersions, setSelectedVersions)}\n              >\n                {version}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Architecture'>\n            {selectedArches.map((arch) => (\n              <Chip key={arch} onClick={() => deleteItem(arch, selectedArches, setSelectedArches)}>\n                {arch}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {searchQuery !== '' && (\n            <ChipGroup categoryName='Name/URL'>\n              <Chip key='search_chip' onClick={() => setSearchQuery('')}>\n                {searchQuery}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedSearchQuery !== '' && searchQuery !== '') ||\n            !!selectedVersions?.length ||\n            !!selectedArches?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default ContentListFilters;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport {\n  global_Color_200,\n  global_success_color_100,\n  global_link_Color,\n} from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport useDebounce from '../../../../services/useDebounce';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useEditContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport { isValidURL, makeValidationSchema, mapValidationData } from '../AddContent/helpers';\nimport ContentValidity from '../AddContent/components/ContentValidity';\nimport {\n  EditContentProps,\n  FormikEditValues,\n  mapFormikToEditAPIValues,\n  mapToDefaultFormikValues,\n} from './helpers';\nimport { isEmpty, isEqual } from 'lodash';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../../middleware/AppContext';\n\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '12px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '12px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n});\n\nconst EditContentModal = ({ values, open, setClosed }: EditContentProps) => {\n  if (!open) return <></>;\n  const { hidePackageVerification } = useAppContext();\n  const initialValues = mapToDefaultFormikValues(values);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(\n    initialValues.map(({ gpgKey }) => gpgKey),\n  );\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: values.map(() => ({ name: true, url: true })),\n    onSubmit: () => undefined,\n  });\n\n  const valuesHaveChanged = useMemo(\n    () => !isEqual(initialValues, formik.values),\n    [initialValues, formik.values],\n  );\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n\n  const { fetchGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const closeModal = () => {\n    setClosed();\n    formik.resetForm();\n    setGpgKeyList(['']);\n  };\n\n  const { mutateAsync: editContent, isLoading: isEditing } = useEditContentQuery(\n    queryClient,\n    mapFormikToEditAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikEditValues,\n  ): 'default' | 'success' | 'error' => {\n    const hasNotChanged = isEqual(initialValues[index]?.[field], formik.values[index]?.[field]);\n    const errors = !!formik.errors[index]?.[field];\n    switch (true) {\n      case errors:\n        return 'error';\n      case hasNotChanged:\n        return 'default';\n      case !hasNotChanged:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const debouncedValues = useDebounce(formik.values);\n\n  const { mutateAsync: validateContentList, data: validationList } = useValidateContentList();\n\n  useEffect(() => {\n    if (open)\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification, uuid }) => ({\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n          uuid,\n        })),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n        setChangeVerified(true);\n      });\n  }, [debouncedValues, values, open]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateArchAndVersion(index);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Edit custom repository'\n      ouiaId='edit_custom_repository'\n      help={\n        <Popover\n          headerContent={<div>Edit custom repository</div>}\n          bodyContent={<div>Use this form to edit the values of an existing repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Edit by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen={open}\n      onClose={closeModal}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='edit_modal_save'\n              variant='primary'\n              isLoading={isEditing}\n              isDisabled={\n                !changeVerified ||\n                !formik.isValid ||\n                isEditing ||\n                !valuesHaveChanged ||\n                !isEqual(formik.values, debouncedValues)\n              }\n              onClick={() => {\n                editContent().then(closeModal);\n              }}\n            >\n              {valuesHaveChanged ? 'Save changes' : 'No changes'}\n            </Button>\n            <Button key='cancel' variant='link' onClick={closeModal} ouiaId='edit_modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <TableComposable aria-label='Table for edit modal' ouiaId='edit_modal_table'>\n        <Hide hide={createDataLengthOf1}>\n          <Tbody isExpanded={allExpanded}>\n            <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n              <Td\n                className={classes.toggleAction}\n                isActionCell\n                expand={{\n                  rowIndex: 0,\n                  isExpanded: allExpanded,\n                }}\n              />\n              <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n            </Tr>\n          </Tbody>\n        </Hide>\n        {formik.values.map(\n          (\n            { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n            index,\n          ) => (\n            <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Hide hide={createDataLengthOf1}>\n                <Tr className={classes.colHeader}>\n                  <Td\n                    onClick={() => onToggle(index)}\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: index,\n                      isExpanded: expanded,\n                    }}\n                  />\n                  <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                    {name || 'New content'}\n                  </Td>\n                  <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                    <ContentValidity\n                      touched={formik.touched[index]}\n                      errors={formik.errors[index]}\n                    />\n                  </Td>\n                </Tr>\n              </Hide>\n              <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                <Td\n                  colSpan={4}\n                  className={\n                    createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                  }\n                >\n                  <Form>\n                    <FormGroup\n                      label='Name'\n                      isRequired\n                      fieldId='namegroup'\n                      validated={getFieldValidation(index, 'name')}\n                      helperTextInvalid={formik.errors[index]?.name}\n                    >\n                      <TextInput\n                        isRequired\n                        id='name'\n                        name='name'\n                        label='Name'\n                        ouiaId='input_name'\n                        type='text'\n                        validated={getFieldValidation(index, 'name')}\n                        onChange={(value) => {\n                          updateVariable(index, { name: value });\n                        }}\n                        value={name || ''}\n                        placeholder='Enter name'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='URL'\n                      isRequired\n                      fieldId='url'\n                      validated={getFieldValidation(index, 'url')}\n                      helperTextInvalid={formik.errors[index]?.url}\n                    >\n                      <TextInput\n                        isRequired\n                        type='url'\n                        validated={getFieldValidation(index, 'url')}\n                        onBlur={() => urlOnBlur(index)}\n                        onChange={(value) => {\n                          if (url !== value) {\n                            updateVariable(index, { url: value });\n                          }\n                        }}\n                        value={url || ''}\n                        placeholder='https://'\n                        id='url'\n                        name='url'\n                        label='Url'\n                        ouiaId='input_url'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict architecture'\n                      aria-label='restrict_to_architecture'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package architecture'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='arch'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_architecture'\n                        validated={getFieldValidation(index, 'arch')}\n                        menuAppendTo={document.body}\n                        toggleId={'archSelection' + index}\n                        options={Object.keys(distributionArches)}\n                        variant={SelectVariant.single}\n                        selectedProp={Object.keys(distributionArches).find(\n                          (key: string) => arch === distributionArches[key],\n                        )}\n                        setSelected={(value) =>\n                          updateVariable(index, { arch: distributionArches[value] })\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict OS version'\n                      aria-label='restrict_to_os_version'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package OS version'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='version'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_os_version'\n                        validated={getFieldValidation(index, 'versions')}\n                        menuAppendTo={document.body}\n                        toggleId={'versionSelection' + index}\n                        options={Object.keys(distributionVersions)}\n                        variant={SelectVariant.typeaheadMulti}\n                        selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                          versions?.includes(distributionVersions[key]),\n                        )}\n                        placeholderText={versions?.length ? '' : 'Any version'}\n                        setSelected={(value) => setVersionSelected(value, index)}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='GPG key'\n                      labelIcon={\n                        <Tooltip content='Optional: Add GPG Key file or URL'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='gpgKey'\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      helperTextInvalid={formik.errors[index]?.gpgKey}\n                    >\n                      <FileUpload\n                        validated={getFieldValidation(index, 'gpgKey')}\n                        id='gpgKey-uploader'\n                        aria-label='gpgkey_file_to_upload'\n                        type='text'\n                        filenamePlaceholder='Drag a file here or upload one'\n                        textAreaPlaceholder='Paste GPG key or URL here'\n                        value={gpgKeyList[index]}\n                        isLoading={gpgLoading}\n                        spellCheck={false}\n                        onDataChange={(value) => updateGpgKey(index, value)}\n                        onTextChange={(value) => updateGpgKey(index, value)}\n                        onClearClick={() => updateGpgKey(index, '')}\n                        dropzoneProps={{\n                          accept: '.txt',\n                          maxSize: 4096,\n                          onDropRejected: (e) => console.log('onDropRejected', e),\n                        }}\n                        allowEditingUploadedText\n                        browseButtonText='Upload'\n                      />\n                    </FormGroup>\n                    <Hide hide={hidePackageVerification || !gpgKey}>\n                      <FormGroup fieldId='metadataVerification' label='Use GPG key for' isInline>\n                        <Radio\n                          isDisabled={\n                            validationList?.[index]?.url?.metadata_signature_present !== true\n                          }\n                          id='package verification only'\n                          name='package-verification-only'\n                          label='Package verification only'\n                          isChecked={!metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: false })}\n                        />\n                        <ConditionalTooltip\n                          show={validationList?.[index]?.url?.metadata_signature_present !== true}\n                          content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                        >\n                          <Radio\n                            isDisabled={\n                              validationList?.[index]?.url?.metadata_signature_present !== true\n                            }\n                            id='Package and metadata verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                        </ConditionalTooltip>\n                        <Hide\n                          hide={getFieldValidation(index, 'metadataVerification') !== 'success'}\n                        >\n                          <CheckCircleIcon noVerticalAlign color={green} />\n                        </Hide>\n                      </FormGroup>\n                    </Hide>\n                  </Form>\n                </Td>\n              </Tr>\n            </Tbody>\n          ),\n        )}\n      </TableComposable>\n    </Modal>\n  );\n};\n\nexport default EditContentModal;\n","import { ContentItem, EditContentRequest } from '../../../../services/Content/ContentApi';\nexport interface EditContentProps {\n  setClosed: () => void;\n  open: boolean;\n  values: ContentItem[];\n}\n\nexport interface FormikEditValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  metadataVerification: boolean;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  expanded: boolean;\n  uuid: string;\n}\n\nexport const mapFormikToEditAPIValues = (formikValues: FormikEditValues[]): EditContentRequest =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification, uuid }) => ({\n    uuid,\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nexport const mapToDefaultFormikValues = (values: EditContentProps['values']): FormikEditValues[] =>\n  values.map(\n    (\n      {\n        name,\n        url,\n        distribution_arch: arch,\n        distribution_versions: versions,\n        uuid,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n      },\n      index,\n    ) => ({\n      name,\n      url,\n      arch,\n      versions,\n      gpgKey,\n      gpgLoading: false,\n      metadataVerification,\n      expanded: index + 1 === values.length,\n      uuid,\n    }),\n  );\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon, PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\nimport AddContent from './AddContent/AddContent';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  notFiltered?: boolean;\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ notFiltered, clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={notFiltered ? PlusCircleIcon : SearchIcon} />\n      <Title headingLevel='h2' size='lg' ouiaId='empty_custom_title'>\n        {notFiltered\n          ? 'No custom repositories'\n          : 'No custom repositories match the filter criteria'}\n      </Title>\n      <EmptyStateBody className={classes.emptStateBody}>\n        {notFiltered\n          ? 'To get started, create a custom repository'\n          : 'Clear all filters to show more results'}\n      </EmptyStateBody>\n      {notFiltered ? (\n        <AddContent />\n      ) : (\n        <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n          Clear all filters\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { Button, Text, Tooltip } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { global_disabled_color_100 } from '@patternfly/react-tokens';\nimport { useState } from 'react';\nimport Hide from '../../../components/Hide/Hide';\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport PackageModal from './PackageModal/PackageModal';\n\nconst useStyles = createUseStyles({\n  text: {\n    color: global_disabled_color_100.value,\n    width: 'fit-content',\n  },\n  link: {\n    padding: 0,\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n}\n\nconst PackageCount = ({ rowData }: Props) => {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  if (!rowData.package_count && rowData.status === 'Pending') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository has not been introspected yet'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  if (rowData.status === 'Invalid') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository is invalid.'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <>\n      <Hide hide={!modalOpen}>\n        <PackageModal rowData={rowData} closeModal={() => setModalOpen(false)} />\n      </Hide>\n      <Button\n        ouiaId='package_count_button'\n        variant='link'\n        onClick={() => setModalOpen(true)}\n        className={classes.link}\n      >\n        {rowData.package_count}\n      </Button>\n    </>\n  );\n};\n\nexport default PackageCount;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Modal,\n  ModalVariant,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_Color_200,\n} from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../../components/Hide/Hide';\nimport { ContentItem, PackageItem } from '../../../../services/Content/ContentApi';\nimport { useGetPackagesQuery } from '../../../../services/Content/ContentQueries';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../../../services/useDebounce';\nimport EmptyPackageState from './components/EmptyPackageState';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    paddingBottom: '8px',\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  closeModal: () => void;\n}\n\nexport default function PackageModal({\n  rowData: { name, uuid, package_count: packageCount },\n  closeModal,\n}: Props) {\n  const classes = useStyles();\n  const storedPerPage = Number(localStorage.getItem('packagePerPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Name', 'Version', 'Release', 'Arch'];\n\n  const columnSortAttributes = ['name', 'version', 'release', 'arch'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    error,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetPackagesQuery(uuid, packageCount, page, perPage, debouncedSearchQuery, sortString);\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem('packagePerPage', newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n\n  const {\n    data: packageList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const notLoadingZeroCount = !fetchingOrLoading && !count;\n\n  return (\n    <Modal\n      key={uuid}\n      position='top'\n      hasNoBodyWrapper\n      aria-label='RPM package modal'\n      ouiaId='rpm_package_modal'\n      variant={ModalVariant.medium}\n      title='Packages'\n      description={\n        <p className={classes.description}>\n          View list of packages for <b>{name}</b>\n        </p>\n      }\n      isOpen\n      onClose={closeModal}\n      footer={\n        <Button key='close' variant='secondary' onClick={closeModal}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <Flex className={classes.topContainer}>\n            <Flex>\n              <TextInput\n                id='search'\n                ouiaId='name_search'\n                placeholder='Filter by name'\n                value={searchQuery}\n                onChange={(value) => setSearchQuery(value)}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </Flex>\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rowSize={perPage}\n                colSize={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <TableComposable\n              aria-label='Custom repositories table'\n              ouiaId='packages_table'\n              variant='compact'\n            >\n              <Thead>\n                <Tr>\n                  {columnHeaders.map((columnHeader, index) => (\n                    <Th\n                      key={columnHeader + '_column'}\n                      sort={sortParams(index, notLoadingZeroCount)}\n                    >\n                      {columnHeader}\n                    </Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {packageList.map(({ name, version, release, arch }: PackageItem, index: number) => (\n                  <Tr key={name + index}>\n                    <Td>{name}</Td>\n                    <Td>{version}</Td>\n                    <Td>{release}</Td>\n                    <Td>{arch}</Td>\n                  </Tr>\n                ))}\n                <Hide hide={!notLoadingZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </TableComposable>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { Td, Tr } from '@patternfly/react-table';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    margin: 'auto',\n  },\n});\n\ninterface Props {\n  clearSearch: () => void;\n}\n\nexport default function EmptyPackageState({ clearSearch }: Props) {\n  const classes = useStyles();\n  return (\n    <Tr>\n      <Td colSpan={4}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title headingLevel='h2' size='lg'>\n              No packages match the search criteria\n            </Title>\n            <EmptyStateBody>Clear your current search to show more results</EmptyStateBody>\n            <Button ouiaId='clear_filters' variant='link' onClick={clearSearch}>\n              Clear search\n            </Button>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n}\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\nimport { Flex, FlexItem, Tooltip } from '@patternfly/react-core';\nimport StatusText from './StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n  global_info_color_100,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\nconst blue = global_info_color_100.value;\n\ninterface Props {\n  status?: string;\n  error?: string;\n}\n\nconst StatusIcon = ({ status, error }: Props) => {\n  switch (status) {\n    case 'Valid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Valid</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Invalid':\n      return (\n        <Tooltip position='top-start' content={error}>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <ExclamationCircleIcon color={red} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='red'>Invalid</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    case 'Unavailable':\n      return (\n        <Tooltip position='top-start' content={error}>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <ExclamationTriangleIcon color={gold} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='gold'>Unavailable</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    case 'Pending':\n      return (\n        <Tooltip position='top-start' content='Repository has not been introspected yet'>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <InfoCircleIcon color={blue} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='blue'>Pending</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import { createUseStyles } from 'react-jss';\nimport {\n  global_danger_color_200,\n  global_info_color_200,\n  global_success_color_200,\n  global_warning_color_200,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_200.value;\nconst green = global_success_color_200.value;\nconst gold = global_warning_color_200.value;\nconst blue = global_info_color_200.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n  gold: { color: gold, fontWeight: 'bold', fontSize: '14px' },\n  blue: { color: blue, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  color: 'red' | 'green' | 'gold' | 'blue';\n  children?: React.ReactNode;\n}\n\nconst StatusText = ({ color, children }: Props) => {\n  const classes = useStyles();\n\n  return <span className={classes[color]}>{children}</span>;\n};\n\nexport default StatusText;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_disabled_color_100,\n} from '@patternfly/react-tokens';\nimport { useEffect, useState, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  usePopularRepositoriesQuery,\n  useDeleteContentItemMutate,\n  useRepositoryParams,\n  useAddContentQuery,\n} from '../../services/Content/ContentQueries';\nimport { CreateContentRequest } from '../../services/Content/ContentApi';\nimport Hide from '../../components/Hide/Hide';\nimport { useQueryClient } from 'react-query';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../services/useDebounce';\nimport EmptyTableState from './components/EmptyTableState';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n  addRepositoriesButton: {\n    marginLeft: '16px',\n  },\n  checkboxMinWidth: {\n    minWidth: '45px!important',\n  },\n  disabled: {\n    color: global_disabled_color_100.value,\n  },\n});\n\nconst PopularRepositoriesTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const [checkedRepositories, setCheckedRepositories] = useState<boolean[]>([]);\n  const [selectedData, setSelectedData] = useState<CreateContentRequest>([]);\n  const [selectedUUID, setSelectedUUID] = useState<string>('');\n\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('');\n  const debouncedSearchValue = useDebounce(searchValue);\n  const [perPage, setPerPage] = useState(storedPerPage);\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = usePopularRepositoriesQuery(page, perPage, { searchQuery: debouncedSearchValue });\n\n  const areAllReposAdded = useMemo(() => data.data.every(({ uuid }) => !!uuid), [data]);\n\n  const atLeastOneRepoChecked = useMemo(\n    () => checkedRepositories.some((val) => val),\n    [checkedRepositories],\n  );\n\n  const areAllReposSelected = useMemo(\n    () =>\n      !areAllReposAdded && data.data.every(({ uuid }, key) => !!uuid || checkedRepositories[key]),\n    [data, checkedRepositories, areAllReposAdded],\n  );\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const { mutateAsync: addContentQuery, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    selectedData,\n  );\n\n  useEffect(() => {\n    if (!isFetching) {\n      setSelectedData([]);\n      setSelectedUUID('');\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [isFetching]);\n\n  useEffect(() => {\n    if (data?.data?.length > 0 && checkedRepositories.length === 0) {\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [data?.data?.length]);\n\n  useEffect(() => {\n    if (selectedData.length != 0) {\n      addContentQuery().then(undefined, () => setSelectedData([]));\n    }\n  }, [selectedData]);\n\n  useEffect(() => {\n    if (selectedUUID) {\n      deleteItem(selectedUUID).then(undefined, () => setSelectedUUID(''));\n    }\n  }, [selectedUUID]);\n\n  const onSelectRepo = (index: number, value: boolean) => {\n    const newValue = checkedRepositories;\n    newValue[index] = value;\n    setCheckedRepositories([...newValue]);\n  };\n\n  const selectAllRepos = (_, checked: boolean) =>\n    setCheckedRepositories(data.data.map(() => checked));\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading || isAdding;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const addSelected = () => {\n    const request: CreateContentRequest = [];\n    checkedRepositories.forEach((checked, index) => {\n      if (checked && data?.data[index] && !data.data[index].uuid) {\n        const {\n          suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        } = data.data[index];\n\n        request.push({\n          name: suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        });\n      }\n    });\n    setSelectedData(request);\n  };\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: popularData = [],\n    meta: { count = 0 },\n  } = data;\n\n  return (\n    <Grid className={classes.mainContainer}>\n      <Flex className={classes.topContainer}>\n        <FlexItem>\n          <InputGroup>\n            <FlexItem>\n              <TextInput\n                isDisabled={isLoading}\n                id='search'\n                ouiaId='popular_filter_search'\n                placeholder='Filter by name/url'\n                value={searchValue}\n                onChange={setSearchValue}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </FlexItem>\n            <FlexItem>\n              <ConditionalTooltip\n                content='You do not have the required permissions to perform this action.'\n                show={!rbac?.write}\n                setDisabled\n              >\n                <Button\n                  onClick={addSelected}\n                  className={classes.addRepositoriesButton}\n                  isDisabled={!atLeastOneRepoChecked}\n                  ouiaId='add_checked_repos'\n                >\n                  Add repositories\n                </Button>\n              </ConditionalTooltip>\n            </FlexItem>\n          </InputGroup>\n        </FlexItem>\n        <FlexItem>\n          <Hide hide={isLoading}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer100Height}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={isLoading}>\n        <>\n          <TableComposable\n            aria-label='Popular repositories table'\n            ouiaId='popular_repos_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                <Hide hide={!rbac?.write}>\n                  <Th\n                    className={classes.checkboxMinWidth}\n                    select={{\n                      onSelect: selectAllRepos,\n                      isSelected: areAllReposSelected,\n                      isHeaderSelectDisabled: areAllReposAdded,\n                    }}\n                  />\n                </Hide>\n                {columnHeaders.map((columnHeader) => (\n                  <Th key={columnHeader + 'column'}>{columnHeader}</Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {popularData.map(\n                (\n                  {\n                    uuid,\n                    existing_name,\n                    suggested_name,\n                    url,\n                    distribution_arch,\n                    distribution_versions,\n                    gpg_key,\n                    metadata_verification,\n                  },\n                  key,\n                ) => (\n                  <Tr key={suggested_name + key}>\n                    <Hide hide={!rbac?.write}>\n                      <Td\n                        select={{\n                          rowIndex: key,\n                          onSelect: (_event, isSelecting) => onSelectRepo(key, isSelecting),\n                          isSelected: uuid ? false : checkedRepositories[key],\n                          disable: !!uuid,\n                        }}\n                      />\n                    </Hide>\n                    <Td>\n                      <>\n                        <Flex direction={{ default: 'row' }}>\n                          <FlexItem> {suggested_name}</FlexItem>\n                          {existing_name && suggested_name !== existing_name && (\n                            <FlexItem className={classes.disabled}>\n                              Current name: {existing_name}\n                            </FlexItem>\n                          )}\n                        </Flex>\n                        <UrlWithExternalIcon href={url} />\n                      </>\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td width={10}>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        {uuid ? (\n                          <Button\n                            isDisabled={uuid === selectedUUID}\n                            onClick={() => setSelectedUUID(uuid)}\n                            variant='danger'\n                            ouiaId='remove_popular_repo'\n                          >\n                            Remove\n                          </Button>\n                        ) : (\n                          <Button\n                            variant='secondary'\n                            isDisabled={selectedData[key]?.url === url}\n                            onClick={() =>\n                              setSelectedData([\n                                {\n                                  name: suggested_name,\n                                  url,\n                                  distribution_versions,\n                                  distribution_arch,\n                                  gpg_key,\n                                  metadata_verification,\n                                },\n                              ])\n                            }\n                            ouiaId='add_popular_repo'\n                          >\n                            Add\n                          </Button>\n                        )}\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                ),\n              )}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={data.data.length !== 0 || isLoading}>\n        <EmptyTableState clearFilters={() => setSearchValue('')} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default PopularRepositoriesTable;\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        No popular repositories match the filter criteria\n      </Title>\n      <EmptyStateBody className={classes.emptStateBody}>\n        Clear all filters to show more results\n      </EmptyStateBody>\n      <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n        Clear search filter\n      </Button>\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { Grid, Tab, Tabs, TabTitleText, Text } from '@patternfly/react-core';\nimport { Routes, Route, Navigate, useLocation, Link } from 'react-router-dom';\nimport { global_Color_100, global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { PageHeaderProps as _PageHeaderProps } from '@redhat-cloud-services/frontend-components/PageHeader/PageHeader';\nimport { createUseStyles } from 'react-jss';\nimport { ErrorPage } from './components/Error/ErrorPage';\nimport ContentListTable from './Pages/ContentListTable/ContentListTable';\nimport PopularRepositoriesTable from './Pages/PopularRepositoriesTable/PopularRepositoriesTable';\nimport { last } from 'lodash';\n\n// Example of how to extend inaccurately typed imports\nconst PageHeader = _PageHeader as FunctionComponent<PageHeaderProps>;\ninterface PageHeaderProps extends _PageHeaderProps {\n  children?: ReactElement | Array<ReactElement>;\n}\n\nconst useStyles = createUseStyles({\n  subtext: {\n    color: global_Color_100.value,\n    paddingTop: '8px',\n  },\n  tabs: {\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  tab: {\n    '& button': {\n      padding: 0, // Remove the default button padding\n    },\n  },\n  link: {\n    color: 'inherit', // Receives parent \"Tab\" components color\n    textDecoration: 'none',\n    padding: '8px 16px', // Add it back so that the entire clickable area works\n    '&:focus-visible': {\n      outlineOffset: '-6px',\n    },\n  },\n  containerMargin: {\n    margin: '24px',\n  },\n});\n\nexport const DEFAULT_ROUTE = '';\nexport const POPULAR_REPOSITORIES_ROUTE = 'popular-repositories';\n\nconst tabbedRoutes = [\n  {\n    title: 'Your repositories',\n    route: DEFAULT_ROUTE,\n    Element: ContentListTable,\n  },\n  {\n    title: 'Popular repositories',\n    route: POPULAR_REPOSITORIES_ROUTE,\n    Element: PopularRepositoriesTable,\n  },\n];\n\nexport default function MainRoutes() {\n  const classes = useStyles();\n  const { pathname, key: locationKey } = useLocation();\n\n  const currentRoute = useMemo(() => last(pathname.split('/')), [pathname]);\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title='Custom Repositories' />\n        <Text className={classes.subtext} ouiaId='custom_repositories_description'>\n          View all custom repositories within your organization.\n        </Text>\n      </PageHeader>\n      <Tabs className={classes.tabs} ouiaId='routed-tabs' activeKey={currentRoute}>\n        {tabbedRoutes.map(({ title, route }) => (\n          <Tab\n            className={classes.tab}\n            keyParams={route}\n            key={route}\n            tabIndex={-1} // This prevents the tab from being targetable by accessibility features.\n            eventKey={route || 'content'} // the current route will be \"content\" when there is no route specified (root)\n            aria-label={title}\n            ouiaId={title}\n            title={\n              <Link className={classes.link} accessKey={route} key={route} to={route}>\n                <TabTitleText>{title}</TabTitleText>\n              </Link>\n            }\n          />\n        ))}\n      </Tabs>\n      <Routes key={locationKey}>\n        {tabbedRoutes.map(({ route, Element }, key) => (\n          <Route\n            key={key.toString()}\n            path={route}\n            element={\n              <ErrorPage>\n                <Grid className={classes.containerMargin}>\n                  <Element />\n                </Grid>\n              </ErrorPage>\n            }\n          />\n        ))}\n        <Route path='*' element={<Navigate to={DEFAULT_ROUTE} replace />} />\n      </Routes>\n    </>\n  );\n}\n","import { Tooltip, TooltipProps } from '@patternfly/react-core';\nimport { cloneElement } from 'react';\n\ninterface Props extends TooltipProps {\n  show: boolean;\n  setDisabled?: boolean;\n}\n\nconst ConditionalTooltip = ({ show, children, setDisabled, ...rest }: Props) =>\n  show ? (\n    <Tooltip {...rest}>\n      <div>\n        {children && cloneElement(children, setDisabled ? { isDisabled: setDisabled } : undefined)}\n      </div>\n    </Tooltip>\n  ) : (\n    <>{children}</>\n  );\n\nexport default ConditionalTooltip;\n","import { Select, SelectOption, SelectProps, SelectVariant } from '@patternfly/react-core';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n\ninterface DropdownSelectProps extends Partial<SelectProps> {\n  options: Array<string>;\n  variant: SelectVariant.single | SelectVariant.checkbox | SelectVariant.typeaheadMulti;\n  selectedProp: any; // eslint-disable-line\n  setSelected: Dispatch<SetStateAction<any>>; // eslint-disable-line\n  toggleIcon?: React.ReactElement;\n  placeholderText?: string | React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst DropdownSelect = ({\n  options,\n  variant,\n  selectedProp,\n  setSelected,\n  toggleIcon,\n  placeholderText,\n  isDisabled,\n  ...rest\n}: DropdownSelectProps) => {\n  const selected = Array.isArray(selectedProp) ? selectedProp : [selectedProp];\n  const [isOpen, setIsOpen] = useState(false);\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const selectFrom = options.map((option, index) => (\n    <SelectOption key={option + index} value={option} />\n  ));\n\n  const onSelect = (_event, selection) => {\n    switch (variant) {\n      case SelectVariant.single:\n        setSelected(selection);\n        setIsOpen(false);\n        break;\n      case SelectVariant.typeaheadMulti:\n      case SelectVariant.checkbox:\n        if (Array.isArray(selectedProp)) {\n          if (selected.includes(selection)) {\n            const remaining = selected.filter((item) => item !== selection);\n            setSelected(remaining);\n            break;\n          }\n          setSelected([...selected, selection]);\n          break;\n        }\n        break;\n    }\n  };\n\n  return (\n    <Select\n      isDisabled={isDisabled}\n      variant={variant}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      placeholderText={placeholderText}\n      isCheckboxSelectionBadgeHidden\n      toggleIcon={toggleIcon}\n      {...rest}\n    >\n      {selectFrom}\n    </Select>\n  );\n};\n\nexport default DropdownSelect;\n","import { ErrorBoundary as _ErrorBoundaryPage } from '@redhat-cloud-services/frontend-components';\n\nconst ErrorBoundaryPage = _ErrorBoundaryPage as unknown as React.FunctionComponent<{\n  children?: React.ReactNode;\n  headerTitle: string;\n  errorTitle?: string;\n  errorDescription?: string;\n}>;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const ErrorPage = ({ children }: Props) => (\n  <ErrorBoundaryPage\n    headerTitle='Content Sources'\n    errorTitle='Unhandled error'\n    errorDescription='There was a problem trying to process your request'\n  >\n    {children}\n  </ErrorBoundaryPage>\n);\n","interface Props {\n  hide: boolean;\n  children?: React.ReactNode;\n}\n\nconst Hide = ({ hide, children }: Props) => (hide ? <></> : <>{children}</>);\n\nexport default Hide;\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Grid,\n  Title,\n} from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { FunctionComponent } from 'react';\n\nconst PageHeader = _PageHeader as unknown as FunctionComponent<{\n  children: React.ReactNode;\n}>;\n\nexport const NoPermissionsPage: React.FunctionComponent = () => (\n  <>\n    <PageHeader>\n      <PageHeaderTitle title='Repositories' />\n    </PageHeader>\n    <Grid style={{ margin: '24px' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={LockIcon} />\n        <Title headingLevel='h5' size='lg'>\n          You do not have access to Repositories\n        </Title>\n        <EmptyStateBody>\n          Contact your organization administrator(s) for more information.\n        </EmptyStateBody>\n      </EmptyState>\n    </Grid>\n  </>\n);\n","import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  link: {\n    alignItems: 'center',\n    display: 'flex',\n    width: 'fit-content', // Prevents overflow of clickable area beyond visible content\n  },\n  icon: {\n    marginLeft: '5px',\n  },\n});\n\ninterface Props {\n  href: string;\n}\n\nconst UrlWithExternalIcon = ({ href }: Props) => {\n  const classes = useStyles();\n  return (\n    <a href={href} className={classes.link} rel='noreferrer' target='_blank'>\n      {href} <ExternalLinkAltIcon className={classes.icon} />\n    </a>\n  );\n};\n\nexport default UrlWithExternalIcon;\n","import { createContext, ReactNode, useContext, useState } from 'react';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { Rbac } from '@redhat-cloud-services/insights-common-typescript';\n\nexport interface AppContextInterface {\n  hidePackageVerification: boolean;\n  rbac?: { read: boolean; write: boolean };\n  setRbac: (rbac?: Rbac) => void;\n}\n\nexport const AppContext = createContext({} as AppContextInterface);\n\nexport const ContextProvider = ({ children }: { children: ReactNode }) => {\n  const [rbac, setRbac] = useState<Rbac | undefined>(undefined);\n  const hidePackageVerification = useFlag('content-sources.hide-package-verification') || false;\n\n  return (\n    <AppContext.Provider\n      value={{\n        hidePackageVerification,\n        setRbac,\n        rbac: rbac\n          ? {\n              read: rbac?.hasPermission('content-sources', 'repositories', 'read'),\n              write: rbac?.hasPermission('content-sources', 'repositories', 'write'),\n            }\n          : undefined,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n","import axios from 'axios';\n\nexport interface ContentItem {\n  uuid: string;\n  name: string;\n  package_count: number;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  account_id: string;\n  org_id: string;\n  status: string;\n  last_introspection_error: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface PopularRepositories {\n  uuid: string;\n  existing_name: string;\n  suggested_name: string;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface CreateContentRequestItem {\n  name: string;\n  url: string;\n  distribution_versions?: Array<string>;\n  distribution_arch?: string;\n  gpg_key?: string;\n  metadata_verification?: boolean;\n}\n\nexport interface ErrorItem {\n  status: number;\n  title?: string;\n  detail?: string;\n}\n\nexport interface ErrorResponse {\n  errors: ErrorItem[];\n}\n\nexport type CreateContentRequestResponse = ContentItem[] | ErrorResponse;\n\nexport type CreateContentRequest = Array<CreateContentRequestItem>;\n\nexport interface EditContentRequestItem {\n  uuid: string;\n  name: string;\n  url: string;\n  distribution_arch: string;\n  distribution_versions: string[];\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport type EditContentRequest = Array<EditContentRequestItem>;\n\nexport type ContentList = Array<ContentItem>;\n\nexport type Links = {\n  first: string;\n  last: string;\n  next: string;\n  prev: string;\n};\n\nexport type Meta = {\n  count: number;\n  limit: number;\n  offset: number;\n};\n\nexport interface ContentListResponse {\n  data: ContentList;\n  links: Links;\n  meta: Meta;\n}\n\nexport interface PopularRepositoriesResponse {\n  data: PopularRepositories[];\n  links: Links;\n  meta: Meta;\n}\n\nexport interface RepositoryParamsResponse {\n  distribution_versions: Array<NameLabel>;\n  distribution_arches: Array<NameLabel>;\n}\n\nexport interface GpgKeyResponse {\n  gpg_key: string;\n}\n\nexport type NameLabel = {\n  name: string;\n  label: string;\n};\n\nexport type FilterData = {\n  searchQuery: string;\n  versions: Array<string>;\n  arches: Array<string>;\n};\n\nexport type ValidateItem = {\n  skipped: boolean;\n  valid: boolean;\n  error: string;\n};\n\nexport interface ValidationUrl extends ValidateItem {\n  http_code: number;\n  metadata_present: boolean;\n  metadata_signature_present: boolean;\n}\n\nexport type ValidationResponse = {\n  name?: ValidateItem;\n  url?: ValidationUrl;\n  distribution_versions?: ValidateItem;\n  distribution_arch?: ValidateItem;\n  gpg_key?: ValidateItem;\n}[];\n\nexport interface PackageItem {\n  arch: string;\n  checksum: string;\n  epoch: number;\n  name: string;\n  release: string;\n  summary: string;\n  uuid: string;\n  version: string;\n}\n\nexport type PackagesResponse = {\n  data: PackageItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport const getPopularRepositories: (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => Promise<PopularRepositoriesResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData?.searchQuery;\n  const versionParam = filterData?.versions?.join(',');\n  const archParam = filterData?.arches?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/popular_repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getContentList: (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => Promise<ContentListResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData.searchQuery;\n  const versionParam = filterData.versions.join(',');\n  const archParam = filterData.arches.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const deleteContentListItem: (uuid: string) => Promise<void> = async (uuid: string) => {\n  const { data } = await axios.delete(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const AddContentListItems: (\n  request: CreateContentRequest,\n) => Promise<CreateContentRequestResponse> = async (request) => {\n  const { data } = await axios.post('/api/content-sources/v1.0/repositories/bulk_create/', request);\n  return data;\n};\n\nexport const EditContentListItem: (request: EditContentRequestItem) => Promise<void> = async (\n  request,\n) => {\n  const { data } = await axios.patch(\n    `/api/content-sources/v1.0/repositories/${request.uuid}`,\n    request,\n  );\n  return data;\n};\n\nexport const getRepositoryParams: () => Promise<RepositoryParamsResponse> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/repository_parameters/');\n  return data;\n};\n\nexport const validateContentListItems: (\n  request: CreateContentRequest,\n) => Promise<ValidationResponse> = async (request) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1.0/repository_parameters/validate/',\n    request,\n  );\n  return data;\n};\n\nexport const getGpgKey: (url: string) => Promise<GpgKeyResponse> = async (url: string) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1/repository_parameters/external_gpg_key/',\n    { url },\n  );\n  return data;\n};\n\nexport const getPackages: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<PackagesResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/rpms?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { QueryClient, useMutation, useQuery } from 'react-query';\n\nimport { useNotification } from './../Notifications/Notifications';\nimport {\n  ContentListResponse,\n  deleteContentListItem,\n  getContentList,\n  RepositoryParamsResponse,\n  getRepositoryParams,\n  AddContentListItems,\n  CreateContentRequest,\n  FilterData,\n  validateContentListItems,\n  EditContentListItem,\n  EditContentRequest,\n  getGpgKey,\n  PackagesResponse,\n  getPackages,\n  ErrorResponse,\n  getPopularRepositories,\n  PopularRepositoriesResponse,\n  CreateContentRequestResponse,\n  ContentItem,\n} from './ContentApi';\n\nexport const CONTENT_LIST_KEY = 'CONTENT_LIST_KEY';\nexport const POPULAR_REPOSITORIES_LIST_KEY = 'POPULAR_REPOSITORIES_LIST_KEY';\nexport const REPOSITORY_PARAMS_KEY = 'REPOSITORY_PARAMS_KEY';\nexport const CREATE_PARAMS_KEY = 'CREATE_PARAMS_KEY';\nexport const PACKAGES_KEY = 'PACKAGES_KEY';\n\nexport const usePopularRepositoriesQuery = (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) =>\n  useQuery<PopularRepositoriesResponse>(\n    [POPULAR_REPOSITORIES_LIST_KEY, page, limit, sortBy, ...Object.values(filterData || {})], // NOTE: Update this if larger list!!!!\n    () => getPopularRepositories(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n\nexport const useContentListQuery = (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) =>\n  useQuery<ContentListResponse>(\n    [CONTENT_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getContentList(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n      //   optimisticResults: true,\n    },\n  );\n\nexport const useAddContentQuery = (queryClient: QueryClient, request: CreateContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => AddContentListItems(request), {\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n\n      notify({\n        variant: AlertVariant.success,\n        title:\n          request?.length > 1\n            ? `${request?.length} custom repositories added`\n            : `Custom repository \"${request?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err: { response?: { data: ErrorResponse } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.errors?.find(({ detail }) => {\n            if (detail) {\n              description = detail;\n              return true;\n            }\n          })?.detail;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error adding items to content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useEditContentQuery = (queryClient: QueryClient, request: EditContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => EditContentListItem(request[0]), {\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: `Successfully edited ${request.length} ${request.length > 1 ? 'items' : 'item'}`,\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err: { response?: { data: ErrorResponse } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.errors?.find(({ detail }) => {\n            if (detail) {\n              description = detail;\n              return true;\n            }\n          })?.detail;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error editing items on content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useValidateContentList = () => {\n  const { notify } = useNotification();\n  return useMutation((request: CreateContentRequest) => validateContentListItems(request), {\n    onError: (err) => {\n      const error = err as Error; // Forced Type\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error validating form fields',\n        description: error?.message,\n      });\n    },\n  });\n};\n\nexport const useDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    ...Object.values(filterData || {}),\n    sortString,\n  ];\n  const { notify } = useNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => uuid !== data.uuid),\n        meta: previousData.meta\n          ? {\n              ...previousData.meta,\n              count: previousData.meta.count ? previousData.meta.count - 1 : 1,\n            }\n          : undefined,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { previousData } = context as {\n        previousData: ContentListResponse;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = previousData?.meta?.count - 1;\n        }\n\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error deleting item from content list',\n          description: error?.message,\n        });\n      }\n    },\n  });\n};\n\nexport const useRepositoryParams = () =>\n  useQuery<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY, getRepositoryParams, {\n    keepPreviousData: true,\n    staleTime: Infinity,\n  });\n\nexport const useFetchGpgKey = () => {\n  const { notify } = useNotification();\n\n  const fetchGpgKey = async (url: string): Promise<string> => {\n    let gpg_key = url;\n    try {\n      const data = await getGpgKey(url);\n      gpg_key = data.gpg_key;\n    } catch ({ response = {} }) {\n      const { data } = response as { data: { message: string | undefined } | string };\n      const description = typeof data === 'string' ? data : data?.message;\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error fetching GPG key from provided URL',\n        description,\n      });\n    }\n    return gpg_key;\n  };\n\n  return { fetchGpgKey };\n};\n\nexport const useGetPackagesQuery = (\n  uuid: string,\n  count: number,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) =>\n  useQuery<PackagesResponse>(\n    [PACKAGES_KEY, uuid, page, limit, searchQuery, sortBy, count],\n    () => getPackages(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      onError: (err) => {\n        const { notify } = useNotification();\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error fetching rpm packages',\n          description: error?.message,\n        });\n      },\n    },\n  );\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\n\ninterface NotificationPayload {\n  title: React.ReactNode | string;\n  variant: AlertVariant;\n  description?: React.ReactNode | string;\n  dismissable?: boolean;\n}\n\nexport const useNotification = () => {\n  const dispatch = useDispatch();\n  const notify = (payload: NotificationPayload) => dispatch(addNotification(payload));\n\n  return { notify };\n};\n","import { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { initStore, restoreStore } from '@redhat-cloud-services/insights-common-typescript';\nimport { Middleware } from 'redux';\n\nexport const createStore = (...middleware: Middleware[]) => initStore({}, {}, ...middleware);\n\nexport const resetStore = () => restoreStore();\n"],"names":["getRegistry","appname","insights","useAppContext","rbac","setRbac","chrome","useEffect","register","notifications","notificationsReducer","auth","getUser","then","fetchRBAC","Bullseye","Spinner","size","read","NoPermissionsPage","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","logger","store","useMemo","resetStore","createStore","appAction","ContextProvider","QueryClientProvider","client","useStyles","createUseStyles","mainContainer","backgroundColor","global_BackgroundColor_100","value","display","flexDirection","mainContainer100Height","composes","minHeight","topContainer","justifyContent","padding","height","bottomContainer","invisible","opacity","classes","useQueryClient","storedPerPage","Number","localStorage","getItem","useState","page","setPage","perPage","setPerPage","editModalOpen","setEditModalOpen","editValues","setEditValues","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","searchQuery","versions","arches","filterData","setFilterData","clearFilters","notFiltered","length","useRepositoryParams","repositoryParamsLoading","repositoryParamsError","repositoryParamsIsError","data","distribution_versions","distribution_arches","distVersions","distArches","columnSortAttributes","sortString","useContentListQuery","isLoading","error","isError","isFetching","meta","count","limit","offset","useDeleteContentItemMutate","deleteItem","actionTakingPlace","onSetPage","_","newPage","onPerPageSelect","newPerPage","setItem","toString","columnHeaders","archesDisplay","arch","find","label","name","contentList","rowActions","useCallback","rowData","title","onClick","uuid","isDisabled","countIsZero","Grid","className","values","open","setClosed","Flex","FlexItem","hide","Pagination","id","widgetId","perPageComponent","itemCount","isCompact","SkeletonTable","rowSize","colSize","variant","TableVariant","compact","TableComposable","ouiaId","Thead","Tr","map","columnHeader","index","Th","sort","columnIndex","sortBy","direction","defaultDirection","onSort","_event","Tbody","url","distribution_arch","status","last_introspection_error","Td","href","filter","includes","join","isActionCell","content","show","write","setDisabled","ActionsColumn","items","PaginationVariant","bottom","description","paddingTop","color","global_Color_200","removeSideBorder","borderLeft","toggleAllRow","cursor","borderBottom","global_link_Color","fill","colHeader","mainContentCol","toggleAction","addRepositoryButton","marginBottom","saveButton","marginRight","transition","removeButton","singleContentCol","defaultValues","gpgKey","gpgLoading","expanded","metadataVerification","defaultTouchedState","isButtonDisabled","hidePackageVerification","isModalOpen","setIsModalOpen","changeVerified","setChangeVerified","gpgKeyList","setGpgKeyList","formik","useFormik","initialValues","validateOnBlur","validateOnChange","validationSchema","makeValidationSchema","initialTouched","onSubmit","updateGpgKey","updatedData","fetchGpgKey","useFetchGpgKey","debouncedGpgKeyList","getQueryData","REPOSITORY_PARAMS_KEY","list","Promise","all","updateValue","isValidURL","result","validationList","metadata_signature_present","setValues","distributionArches","distributionVersions","forEach","closeModal","setTouched","resetForm","useAddContentQuery","mapFormikToAPIValues","addContent","isAdding","createDataLengthOf1","allExpanded","some","updateVariable","newValue","callback","getFieldValidation","field","errors","touched","setTouchedOnLastItemIfUntouchedAndCollapsed","lastItem","updatedTouched","debouncedValues","useValidateContentList","validateContentList","gpg_key","metadata_verification","validationData","validateForm","formikErrors","mappedErrorData","mapValidationData","setErrors","onToggle","Button","Modal","position","ModalVariant","medium","help","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","isOpen","onClose","footer","Stack","StackItem","isValid","vals","icon","PlusCircleIcon","newValues","Array","from","keys","Math","random","substring","magicURLList","isExpanded","expand","rowIndex","dataLabel","undefined","width","splice","newTouched","newErrors","removeRepository","MinusCircleIcon","colSpan","Form","FormGroup","isRequired","fieldId","validated","helperTextInvalid","TextInput","type","onChange","placeholder","onBlur","newVersion","isEmpty","isEqual","updateArchAndVersion","labelIcon","Tooltip","menuAppendTo","document","body","toggleId","options","Object","SelectVariant","single","selectedProp","key","setSelected","typeaheadMulti","placeholderText","valueToUpdate","val","setVersionSelected","FileUpload","filenamePlaceholder","textAreaPlaceholder","spellCheck","onDataChange","onTextChange","onClearClick","dropzoneProps","accept","maxSize","onDropRejected","e","console","log","allowEditingUploadedText","browseButtonText","isInline","Radio","isChecked","red","global_danger_color_100","green","global_success_color_100","fontWeight","fontSize","loading","allTouched","every","noErrors","hasTouchedError","alignContent","default","spacer","CheckCircleIcon","ExclamationCircleIcon","REGEX_URL","regex","RegExp","match","formikValues","updatedValidationData","rest","metadata_present","http_code","mapNoMetaDataError","err","Yup","addMethod","object","propertyName","message","this","test","parent","v","createError","path","array","shape","string","min","max","required","uniqueProperty","chipsContainer","marginLeft","searchInput","paddingRight","searchIcon","global_secondary_color_100","top","left","pointerEvents","filterType","setFilterType","versionNamesLabels","setVersionNamesLabels","archNamesLabels","setArchNamesLabels","setSearchQuery","selectedVersions","setSelectedVersions","selectedArches","setSelectedArches","debouncedSearchQuery","debouncedSelectedVersions","debouncedSelectedArches","getLabels","names","namesLabels","labels","found","push","chips","setChips","chip","version","InputGroup","toggleIcon","FilterIcon","SearchIcon","checkbox","getSelectionByType","fullWidth","ChipGroup","categoryName","Chip","mapToDefaultFormikValues","valuesHaveChanged","useEditContentQuery","mapFormikToEditAPIValues","editContent","isEditing","hasNotChanged","urlOnBlur","noVerticalAlign","emptyStateContainer","flexGrow","emptStateBody","EmptyState","EmptyStateVariant","full","EmptyStateIcon","Title","headingLevel","EmptyStateBody","text","global_disabled_color_100","link","modalOpen","setModalOpen","package_count","isContentLeftAligned","Text","paddingBottom","packageCount","useGetPackagesQuery","sortParams","packageList","fetchingOrLoading","notLoadingZeroCount","hasNoBodyWrapper","InnerScrollContainer","release","clearSearch","margin","gold","global_warning_color_100","blue","global_info_color_100","ExclamationTriangleIcon","InfoCircleIcon","global_danger_color_200","global_success_color_200","global_warning_color_200","global_info_color_200","children","addRepositoriesButton","checkboxMinWidth","minWidth","disabled","checkedRepositories","setCheckedRepositories","selectedData","setSelectedData","selectedUUID","setSelectedUUID","searchValue","setSearchValue","debouncedSearchValue","usePopularRepositoriesQuery","areAllReposAdded","atLeastOneRepoChecked","areAllReposSelected","addContentQuery","popularData","request","checked","suggested_name","select","onSelect","isSelected","isHeaderSelectDisabled","existing_name","isSelecting","disable","PageHeader","subtext","global_Color_100","tabs","tab","textDecoration","outlineOffset","containerMargin","DEFAULT_ROUTE","POPULAR_REPOSITORIES_ROUTE","tabbedRoutes","route","Element","useLocation","pathname","locationKey","currentRoute","last","split","PageHeaderTitle","Tabs","activeKey","Tab","keyParams","tabIndex","eventKey","Link","accessKey","to","TabTitleText","Routes","Route","element","ErrorPage","Navigate","replace","cloneElement","selected","isArray","setIsOpen","selectFrom","option","SelectOption","Select","selection","remaining","item","selections","isCheckboxSelectionBadgeHidden","ErrorBoundaryPage","headerTitle","errorTitle","errorDescription","style","LockIcon","alignItems","rel","target","ExternalLinkAltIcon","AppContext","createContext","useFlag","Provider","hasPermission","useContext","getPopularRepositories","versionParam","archParam","get","getContentList","deleteContentListItem","delete","AddContentListItems","post","EditContentListItem","patch","getRepositoryParams","validateContentListItems","getGpgKey","getPackages","CONTENT_LIST_KEY","POPULAR_REPOSITORIES_LIST_KEY","CREATE_PARAMS_KEY","PACKAGES_KEY","useQuery","keepPreviousData","staleTime","notify","useNotification","useMutation","onSuccess","hasPending","AlertVariant","success","invalidateQueries","onError","response","detail","danger","contentListKeyArray","onMutate","cancelQueries","previousData","setQueryData","_data","_variables","context","setQueriesData","_newData","Infinity","optimisticResults","dispatch","useDispatch","payload","addNotification","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","initStore","middleware","restoreStore"],"sourceRoot":""}