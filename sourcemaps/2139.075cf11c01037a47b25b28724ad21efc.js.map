{"version":3,"file":"js/2139.1666791935786.563e0632ee567f51874e.js","mappings":"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","sources":["webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/Routes.tsx","webpack:///./src/components/ContentListTable/ContentListTable.tsx","webpack:///./src/components/ContentListTable/components/AddContent/AddContent.tsx","webpack:///./src/components/ContentListTable/components/AddContent/components/ContentValidity.tsx","webpack:///./src/components/ContentListTable/components/AddContent/helpers.ts","webpack:///./src/components/ContentListTable/components/ContentListFilters.tsx","webpack:///./src/components/ContentListTable/components/EditContentModal/EditContentModal.tsx","webpack:///./src/components/ContentListTable/components/EditContentModal/helpers.ts","webpack:///./src/components/ContentListTable/components/EmptyTableState.tsx","webpack:///./src/components/ContentListTable/components/PackageCount.tsx","webpack:///./src/components/ContentListTable/components/PackageModal/PackageModal.tsx","webpack:///./src/components/ContentListTable/components/PackageModal/components/EmptyPackageState.tsx","webpack:///./src/components/ContentListTable/components/StatusIcon.tsx","webpack:///./src/components/ContentListTable/components/StatusText.tsx","webpack:///./src/components/ContentListTable/components/UrlWithLinkIcon/UrlWithLinkIcon.tsx","webpack:///./src/components/DropdownSelect/DropdownSelect.tsx","webpack:///./src/components/Error/ErrorPage.tsx","webpack:///./src/components/Hide/Hide.tsx","webpack:///./src/components/OptionalTooltip/OptionalTooltip.tsx","webpack:///./src/pages/ContentPage/ContentPage.tsx","webpack:///./src/services/Content/ContentApi.ts","webpack:///./src/services/Content/ContentQueries.ts","webpack:///./src/services/Notifications/Notifications.tsx","webpack:///./src/services/useDebounce.tsx","webpack:///./src/store/index.tsx"],"sourcesContent":["import '@redhat-cloud-services/frontend-components-utilities/styles/_all';\n\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getRegistry as _getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport pckg from '../package.json';\nimport { Routes } from './Routes';\n\n// Example of how to re-implement inaccurately typed imports\nconst getRegistry = _getRegistry as unknown as () => { register: ({ notifications }) => void };\n\nconst App = () => {\n  const history = useHistory();\n  const chrome = useChrome();\n\n  useEffect(() => {\n    let unregister;\n    if (chrome) {\n      const registry = getRegistry();\n      registry.register({ notifications: notificationsReducer });\n      const { updateDocumentTitle, on: onChromeEvent } = chrome.init();\n      // You can use directly the name of your app\n      updateDocumentTitle(pckg.insights.appname);\n      unregister = onChromeEvent('APP_NAVIGATION', (event) => history.push(`/${event.navId}`));\n    }\n\n    return () => {\n      unregister();\n    };\n  }, [chrome, history]);\n\n  return (\n    <>\n      <NotificationsPortal />\n      <Routes />\n    </>\n  );\n};\n\nexport default App;\n","import { getBaseName } from '@redhat-cloud-services/insights-common-typescript';\nimport React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as Redux from 'redux';\n\nimport App from './App';\nimport { createStore, resetStore } from './store';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false, // TODO: Have a conversation about this\n    },\n  },\n});\n\ninterface AppEntryProps {\n  logger?: Redux.Middleware;\n}\n\nconst AppEntry: React.FunctionComponent<AppEntryProps> = ({ logger }) => {\n  const store = React.useMemo(() => {\n    resetStore();\n    if (logger) {\n      return createStore(logger).store;\n    } else {\n      return createStore().store;\n    }\n  }, [logger]);\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('view-list-page');\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <Router basename={getBaseName(window.location.pathname)}>\n          <App />\n        </Router>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\nexport default AppEntry;\n","import { Bullseye, Spinner } from '@patternfly/react-core';\nimport React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { ErrorPage } from './components/Error/ErrorPage';\nimport ContentPage from './pages/ContentPage/ContentPage';\n\ninterface Path {\n  path: string;\n  component: React.ComponentType;\n}\n\nexport const pathRoutes: Path[] = [\n  {\n    path: '/content',\n    component: ContentPage,\n  },\n];\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <Switch>\n      {pathRoutes.map(({ path, component: Component }) => (\n        <Route\n          key={path}\n          path={path}\n          component={() => (\n            <ErrorPage>\n              <Component />\n            </ErrorPage>\n          )}\n        />\n      ))}\n      <Route>\n        <Redirect exact to='/content' />\n      </Route>\n    </Switch>\n  </Suspense>\n);\n","import {\n  Bullseye,\n  Flex,\n  FlexItem,\n  Grid,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  ActionsColumn,\n  IAction,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ContentItem, FilterData } from '../../services/Content/ContentApi';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  useContentListQuery,\n  useDeleteContentItemMutate,\n  useRepositoryParams,\n} from '../../services/Content/ContentQueries';\nimport ContentListFilters from './components/ContentListFilters';\nimport Hide from '../Hide/Hide';\nimport EmptyTableState from './components/EmptyTableState';\nimport { useQueryClient } from 'react-query';\nimport EditContentModal from './components/EditContentModal/EditContentModal';\nimport StatusIcon from './components/StatusIcon';\nimport UrlWithExternalIcon from './components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport PackageCount from './components/PackageCount';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nconst ContentListTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editValues, setEditValues] = useState<ContentItem[]>([]);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const [filterData, setFilterData] = useState<FilterData>({\n    searchQuery: '',\n    versions: [],\n    arches: [],\n  });\n\n  const clearFilters = () => setFilterData({ searchQuery: '', versions: [], arches: [] });\n\n  const notFiltered =\n    !filterData.arches?.length && filterData.searchQuery === '' && !filterData.versions?.length;\n\n  const hasActionPermissions = true; // TODO: Incorporate permissions here later.\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const columnSortAttributes = [\n    'name',\n    'distribution_arch',\n    'distribution_versions',\n    'status',\n    'package_count',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useContentListQuery(page, perPage, filterData, sortString());\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions', 'Packages', 'Status'];\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: contentList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const rowActions = useCallback(\n    (rowData: ContentItem): IAction[] => [\n      {\n        isDisabled: actionTakingPlace || !rowData?.uuid,\n        title: 'Delete',\n        onClick: () =>\n          deleteItem(rowData?.uuid).then(() => {\n            // If this is the last item on a page, go to previous page.\n            if (page > 1 && count / perPage + 1 >= page && (count - 1) % perPage === 0) {\n              setPage(page - 1);\n            }\n          }),\n      },\n      {\n        isDisabled: actionTakingPlace,\n        title: 'Edit',\n        onClick: () => {\n          setEditValues([rowData]);\n          setEditModalOpen(true);\n        },\n      },\n    ],\n    [actionTakingPlace],\n  );\n\n  const countIsZero = count === 0;\n\n  if (countIsZero && notFiltered && !isLoading)\n    return (\n      <Bullseye>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Bullseye>\n    );\n\n  return (\n    <Grid className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}>\n      <EditContentModal\n        values={editValues}\n        open={editModalOpen}\n        setClosed={() => {\n          setEditModalOpen(false);\n          setEditValues([]);\n        }}\n      />\n      <Flex className={classes.topContainer}>\n        <ContentListFilters\n          isLoading={isLoading}\n          setFilterData={(values) => {\n            setFilterData(values);\n            setPage(1);\n          }}\n          filterData={filterData}\n        />\n        <FlexItem>\n          <Hide hide={countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer100Height}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={countIsZero || isLoading}>\n        <>\n          <TableComposable\n            aria-label='Custom repositories table'\n            ouiaId='content_sources_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                {columnHeaders.map((columnHeader, index) => (\n                  <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                    {columnHeader}\n                  </Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {contentList.map((rowData: ContentItem) => {\n                const {\n                  uuid,\n                  name,\n                  url,\n                  distribution_arch,\n                  distribution_versions,\n                  status,\n                  last_introspection_error,\n                } = rowData;\n                return (\n                  <Tr key={uuid}>\n                    <Td>\n                      {name}\n                      <br />\n                      <UrlWithExternalIcon href={url} />\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td>\n                      <PackageCount rowData={rowData} />\n                    </Td>\n                    <Td>\n                      <StatusIcon status={status} error={last_introspection_error} />\n                    </Td>\n                    <Td isActionCell>\n                      {hasActionPermissions ? <ActionsColumn items={rowActions(rowData)} /> : ''}\n                    </Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero || isLoading}>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default ContentListTable;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  PlusCircleIcon,\n  MinusCircleIcon,\n} from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport { global_Color_200, global_link_Color } from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../Hide/Hide';\nimport {\n  isValidURL,\n  mapFormikToAPIValues,\n  mapValidationData,\n  makeValidationSchema,\n  magicURLList,\n  FormikValues,\n} from './helpers';\nimport useDebounce from '../../../../services/useDebounce';\nimport ContentValidity from './components/ContentValidity';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useAddContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport OptionalTooltip from '../../../OptionalTooltip/OptionalTooltip';\n\ninterface Props {\n  isLoading?: boolean;\n}\n\nconst useStyles = createUseStyles({\n  description: {\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '8px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '8px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  addRepositoryButton: {\n    marginBottom: '24px',\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  removeButton: {\n    display: 'flex!important',\n    justifyContent: 'flex-end',\n  },\n});\n\nconst defaultValues: FormikValues = {\n  name: '',\n  url: '',\n  gpgKey: '',\n  arch: 'any',\n  versions: ['any'],\n  gpgLoading: false,\n  expanded: true,\n  metadataVerification: false,\n};\n\nconst AddContent = ({ isLoading }: Props) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: [defaultValues],\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: [{ name: false, url: false }],\n    onSubmit: () => undefined,\n  });\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const { fetchGpgKey } = useFetchGpgKey();\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const handleModalToggle = () => setIsModalOpen(!isModalOpen);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    formik.resetForm();\n  };\n\n  const { mutateAsync: addContent, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    mapFormikToAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n    setTouchedOnLastItemIfUntouchedAndCollapsed();\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const updateTouched = (index: number, field: 'name' | 'url' | 'gpgKey') => {\n    if (!formik.touched[index]?.[field]) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[index] = { ...updatedTouched[index], [field]: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  const addRepository = () => {\n    formik.setTouched([...formik.touched, { name: false, url: false }]);\n    formik.setValues([\n      ...formik.values.map((vals) => ({ ...vals, expanded: false })),\n      defaultValues,\n    ]);\n  };\n\n  const removeRepository = (index: number) => {\n    const newValues = formik.values;\n    newValues.splice(index, 1);\n\n    const newTouched = formik.touched;\n    newTouched.splice(index, 1);\n\n    const newErrors = formik.errors;\n    newErrors.splice(index, 1);\n\n    formik.setTouched(newTouched);\n    formik.setErrors(newErrors);\n    formik.setValues(newValues);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikValues,\n  ): 'default' | 'success' | 'error' => {\n    const value = !!formik.values[index]?.[field];\n    const errors = !!formik.errors[index]?.[field];\n    const touched = formik.touched[index]?.[field];\n    switch (true) {\n      case errors && touched:\n        return 'error';\n      case value && touched:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  // The below sets the item as touched if the user closes the expansion without touching any fields\n  // This is to ensure that the user understands that the item needs attention (and is in error)\n  const setTouchedOnLastItemIfUntouchedAndCollapsed = () => {\n    const lastItem = formik.touched?.length - 1 || 0;\n    const { name, url } = formik.touched[lastItem] || {};\n    if (!name && !url) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[lastItem] = { ...updatedTouched[lastItem], name: true, url: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  let debouncedValues = useDebounce(formik.values) || []; // Initial value of []\n\n  const { mutateAsync: validateContentList, data: validationList } = useValidateContentList();\n\n  useEffect(() => {\n    if (isModalOpen) {\n      if (debouncedValues.length !== formik.values.length) debouncedValues = formik.values;\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification }) => ({\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n        })),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n      });\n    }\n  }, [debouncedValues, debouncedValues.length, formik.touched, isModalOpen]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n      setTouchedOnLastItemIfUntouchedAndCollapsed();\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        '';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes(label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n      }\n      updateVariable(index, { arch, versions });\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateTouched(index, 'url');\n    updateArchAndVersion(index);\n  };\n\n  const magicButtonThatWillBeDeletedAtSomePoint = () => {\n    const baseArray = Array.from(Array(20).keys());\n    formik.setTouched(baseArray.map(() => ({ name: true, url: true })));\n    const newValues = baseArray.map((index) => ({\n      name: (Math.random() + 1).toString(36).substring(7),\n      url: magicURLList[index],\n      gpgKey: '',\n      arch: !(index % 3) ? 'x86_64' : 'any',\n      versions: !(index % 2) ? ['7'] : ['any'],\n      gpgLoading: false,\n      expanded: false,\n      metadataVerification: false,\n    }));\n    formik.setValues(newValues);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  return (\n    <>\n      <Button\n        id='createContentSourceButton'\n        ouiaId='create_content_source'\n        variant='primary'\n        isDisabled={isLoading}\n        onClick={handleModalToggle}\n      >\n        Add repositories\n      </Button>\n      {isModalOpen ? (\n        <Modal\n          variant={ModalVariant.medium}\n          title='Add custom repositories'\n          ouiaId='add_custom_repository'\n          help={\n            <Popover\n              headerContent={<div>Add a custom repository</div>}\n              bodyContent={<div>Use this form to enter the values for a new repository.</div>}\n            >\n              <Button variant='plain' aria-label='Help'>\n                <OutlinedQuestionCircleIcon />\n              </Button>\n            </Popover>\n          }\n          description={\n            <p className={classes.description}>\n              Add by completing the form. Default values may be provided automatically.\n            </p>\n          }\n          isOpen\n          onClose={closeModal}\n          footer={\n            <Stack>\n              <StackItem>\n                <Button\n                  isDisabled={!formik.isValid || formik.values.length > 19}\n                  className={classes.addRepositoryButton}\n                  variant='link'\n                  onClick={addRepository}\n                  icon={<PlusCircleIcon />}\n                  ouiaId='add_row'\n                >\n                  Add another repository\n                </Button>\n              </StackItem>\n              <StackItem>\n                <Button\n                  className={classes.saveButton}\n                  key='confirm'\n                  ouiaId='modal_save'\n                  variant='primary'\n                  isLoading={isAdding}\n                  isDisabled={\n                    !formik.isValid || isAdding || formik.values?.length !== debouncedValues?.length\n                  }\n                  onClick={() => addContent().then(closeModal)}\n                >\n                  Save\n                </Button>\n                <Button key='cancel' variant='link' onClick={closeModal} ouiaId='modal_cancel'>\n                  Cancel\n                </Button>\n                <Button\n                  key='magic'\n                  variant='link'\n                  isDisabled={formik.values.length > 19}\n                  color='green'\n                  onClick={magicButtonThatWillBeDeletedAtSomePoint}\n                >\n                  Add 20\n                </Button>\n              </StackItem>\n            </Stack>\n          }\n        >\n          <TableComposable aria-label='Table for repo add modal' ouiaId='add_modal_table'>\n            <Hide hide={createDataLengthOf1}>\n              <Tbody isExpanded={allExpanded}>\n                <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n                  <Td\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: 0,\n                      isExpanded: allExpanded,\n                    }}\n                  />\n                  <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n                </Tr>\n              </Tbody>\n            </Hide>\n            {formik.values.map(\n              (\n                { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n                index,\n              ) => (\n                <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                  <Hide hide={createDataLengthOf1}>\n                    <Tr className={classes.colHeader}>\n                      <Td\n                        onClick={() => onToggle(index)}\n                        className={classes.toggleAction}\n                        isActionCell\n                        expand={{\n                          rowIndex: index,\n                          isExpanded: expanded,\n                        }}\n                      />\n                      <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                        {name || 'New content'}\n                      </Td>\n                      <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                        <ContentValidity\n                          touched={formik.touched[index]}\n                          errors={formik.errors[index]}\n                        />\n                      </Td>\n                      <Td dataLabel='removeButton' className={classes.removeButton}>\n                        <Hide hide={formik.values.length === 1}>\n                          <Button\n                            onClick={() => removeRepository(index)}\n                            variant='link'\n                            icon={<MinusCircleIcon />}\n                          >\n                            Remove\n                          </Button>\n                        </Hide>\n                      </Td>\n                    </Tr>\n                  </Hide>\n                  <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                    <Td colSpan={4} className={createDataLengthOf1 ? '' : classes.mainContentCol}>\n                      <Form>\n                        <FormGroup\n                          label='Name'\n                          isRequired\n                          fieldId='namegroup'\n                          validated={getFieldValidation(index, 'name')}\n                          helperTextInvalid={formik.errors[index]?.name}\n                        >\n                          <TextInput\n                            isRequired\n                            id='name'\n                            name='name'\n                            label='Name'\n                            ouiaId='input_name'\n                            type='text'\n                            validated={getFieldValidation(index, 'name')}\n                            onBlur={() => updateTouched(index, 'name')}\n                            onChange={(value) => {\n                              updateVariable(index, { name: value });\n                            }}\n                            value={name || ''}\n                            placeholder='Enter name'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='URL'\n                          isRequired\n                          fieldId='url'\n                          validated={getFieldValidation(index, 'url')}\n                          helperTextInvalid={formik.errors[index]?.url}\n                        >\n                          <TextInput\n                            isRequired\n                            type='url'\n                            validated={getFieldValidation(index, 'url')}\n                            onBlur={() => urlOnBlur(index)}\n                            onChange={(value) => {\n                              if (url !== value) {\n                                updateVariable(index, { url: value });\n                              }\n                            }}\n                            value={url || ''}\n                            placeholder='https://'\n                            id='url'\n                            name='url'\n                            label='Url'\n                            ouiaId='input_url'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict architecture'\n                          aria-label='restrict_to_architecture'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package architecture'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='arch'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_architecture'\n                            menuAppendTo={document.body}\n                            toggleId={'archSelection' + index}\n                            options={Object.keys(distributionArches)}\n                            variant={SelectVariant.single}\n                            selectedProp={Object.keys(distributionArches).find(\n                              (key: string) => arch === distributionArches[key],\n                            )}\n                            setSelected={(value) =>\n                              updateVariable(index, { arch: distributionArches[value] })\n                            }\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict OS version'\n                          aria-label='restrict_to_os_version'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package OS version'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='version'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_os_version'\n                            menuAppendTo={document.body}\n                            toggleId={'versionSelection' + index}\n                            options={Object.keys(distributionVersions)}\n                            variant={SelectVariant.typeaheadMulti}\n                            selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                              versions?.includes(distributionVersions[key]),\n                            )}\n                            placeholderText={versions?.length ? '' : 'Any version'}\n                            setSelected={(value) => setVersionSelected(value, index)}\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='GPG key'\n                          labelIcon={\n                            <Tooltip content='Optional: Add GPG Key file or URL'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='gpgKey'\n                          validated={getFieldValidation(index, 'gpgKey')}\n                          helperTextInvalid={formik.errors[index]?.gpgKey}\n                        >\n                          <FileUpload\n                            onBlur={() => updateTouched(index, 'gpgKey')}\n                            validated={getFieldValidation(index, 'gpgKey')}\n                            id='gpgKey-uploader'\n                            aria-label='gpgkey_file_to_upload'\n                            type='text'\n                            filenamePlaceholder='Drag a file here or upload one'\n                            textAreaPlaceholder='Paste GPG key or URL here'\n                            value={gpgKey}\n                            isLoading={gpgLoading}\n                            spellCheck={false}\n                            onDataChange={(value) => updateVariable(index, { gpgKey: value })}\n                            onPaste={async ({ clipboardData }) => {\n                              const value = clipboardData.getData('text');\n                              if (isValidURL(value)) {\n                                updateVariable(index, { gpgLoading: true });\n                                const gpgData = await fetchGpgKey(value);\n                                updateVariable(index, {\n                                  gpgKey: gpgData,\n                                  gpgLoading: false,\n                                  ...(gpgKey === '' && !!value\n                                    ? {\n                                        metadataVerification:\n                                          !!validationList?.[index]?.url\n                                            ?.metadata_signature_present,\n                                      }\n                                    : {}),\n                                });\n                              }\n                            }}\n                            onTextChange={(value) =>\n                              updateVariable(index, {\n                                gpgKey: value,\n                                ...(gpgKey === '' && !!value\n                                  ? {\n                                      metadataVerification:\n                                        !!validationList?.[index]?.url?.metadata_signature_present,\n                                    }\n                                  : {}),\n                              })\n                            }\n                            onClearClick={() => updateVariable(index, { gpgKey: '' })}\n                            dropzoneProps={{\n                              accept: '.txt',\n                              maxSize: 4096,\n                              onDropRejected: (e) => console.log('onDropRejected', e),\n                            }}\n                            allowEditingUploadedText\n                            browseButtonText='Upload'\n                          />\n                        </FormGroup>\n                        <Hide hide={!gpgKey}>\n                          <FormGroup\n                            fieldId='metadataVerification'\n                            label='Use GPG key for'\n                            isInline\n                          >\n                            <Radio\n                              isDisabled={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              id='package-verification-only'\n                              name='package-verification-only'\n                              label='Package verification only'\n                              isChecked={!metadataVerification}\n                              onChange={() =>\n                                updateVariable(index, { metadataVerification: false })\n                              }\n                            />\n                            <OptionalTooltip\n                              show={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                            >\n                              <Radio\n                                isDisabled={\n                                  validationList?.[index]?.url?.metadata_signature_present !== true\n                                }\n                                id='package-and-repository-verification'\n                                name='package-and-repository-verification'\n                                label='Package and metadata verification'\n                                isChecked={metadataVerification}\n                                onChange={() =>\n                                  updateVariable(index, { metadataVerification: true })\n                                }\n                              />\n                            </OptionalTooltip>\n                          </FormGroup>\n                        </Hide>\n                      </Form>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              ),\n            )}\n          </TableComposable>\n        </Modal>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default AddContent;\n","import { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { global_success_color_100, global_danger_color_100 } from '@patternfly/react-tokens';\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  touched?: FormikTouched<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  errors?: FormikErrors<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  loading?: boolean;\n}\n\nconst ContentValidity = ({ touched, errors, loading }: Props) => {\n  const classes = useStyles();\n  const required = ['name', 'url'];\n  const allTouched = required.every((val) => touched?.[val]);\n  const noErrors = Object.values(errors || {}).every((val) => !val);\n  const hasTouchedError = Object.keys(touched || {})\n    .filter((key) => !!touched?.[key])\n    .some((key) => errors?.[key]);\n\n  switch (true) {\n    case loading:\n      return <Spinner size='md' />;\n    case allTouched && noErrors:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.green}>Valid</span>\n          </FlexItem>\n        </Flex>\n      );\n    case hasTouchedError:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.red}>Invalid</span>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ContentValidity;\n","import { isEmpty } from 'lodash';\nimport * as Yup from 'yup';\nimport { FormikErrors } from 'formik';\nimport { ValidationResponse } from '../../../../services/Content/ContentApi';\nimport ERROR_CODE from './httpErrorCodes.json';\n\nexport interface FormikValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  metadataVerification: boolean;\n  expanded: boolean;\n}\n\nexport const REGEX_URL =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nexport const isValidURL = (val: string) => {\n  const regex = new RegExp(REGEX_URL);\n  return val.match(regex);\n};\n\nexport const mapFormikToAPIValues = (formikValues: FormikValues[]) =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification }) => ({\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nconst mapNoMetaDataError = (validationData: ValidationResponse) =>\n  validationData.map(({ url, ...rest }) => ({\n    ...rest,\n    url: {\n      ...url,\n      error:\n        !url?.error && !url?.metadata_present\n          ? `Unable to retrieve YUM Metadata, Recieved HTTP ${url?.http_code}: ${\n              url ? ERROR_CODE[url.http_code] : ''\n            }`\n          : url?.error,\n    },\n  }));\n\nexport const mapValidationData = (\n  validationData: ValidationResponse,\n  formikErrors: FormikErrors<FormikValues | undefined>[],\n) => {\n  const updatedValidationData = mapNoMetaDataError(validationData);\n  const errors = updatedValidationData.map(({ name, url, gpg_key: gpgKey }, index: number) => ({\n    // First apply the errors found in the ValidationAPI\n    ...(name?.error ? { name: name?.error } : {}),\n    ...(url?.error ? { url: url?.error } : {}),\n    ...(gpgKey?.error ? { gpgKey: gpgKey?.error } : {}),\n    // Overwrite any errors with errors found within the UI itself\n    ...formikErrors[index],\n  }));\n\n  if (errors.every((err) => isEmpty(err))) {\n    return [];\n  }\n\n  return errors;\n};\n\nexport const makeValidationSchema = () => {\n  // This adds the uniqueProperty function to the below schema validation\n  Yup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n      if (\n        this.parent.filter((v) => v !== value).some((v) => v[propertyName] === value[propertyName])\n      ) {\n        throw this.createError({\n          path: `${this.path}.${propertyName}`,\n        });\n      }\n\n      return true;\n    });\n  });\n\n  return Yup.array(\n    Yup.object()\n      .shape({\n        name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n        url: Yup.string().url('Invalid URL').required('Required'),\n      })\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore-next-line\n      .uniqueProperty('name', 'Names must be unique')\n      .uniqueProperty('url', 'Url\\'s must be unique'),\n  );\n};\n\nexport const magicURLList = [\n  'http://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/',\n  'http://mirror.stream.centos.org/SIGs/9/kmods/x86_64/packages-main/',\n  'http://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/',\n  'https://mirror.linux.duke.edu/pub/centos/8-stream/BaseOS/x86_64/os/',\n  'https://download-i2.fedoraproject.org/pub/epel/7/x86_64/',\n  'https://download-i2.fedoraproject.org/pub/epel/8/Everything/x86_64/',\n  'https://download-i2.fedoraproject.org/pub/epel/9/Everything/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el7/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el8/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el9/x86_64/',\n  'http://yum.theforeman.org/katello/4.6/katello/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el9/x86_64/',\n  'http://yum.theforeman.org/releases/3.4/el8/x86_64/',\n  'https://dl.google.com/linux/chrome/rpm/stable/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el9/x86_64/',\n  'http://yum.theforeman.org/client/3.2/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.2/el8/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/7/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/8/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/9/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/7/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/8/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/9/x86_64/',\n  'https://rpms.remirepo.net/enterprise/7/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/8/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/9/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/7/remi/x86_64/',\n  'https://rpms.remirepo.net/enterprise/8/remi/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.9/el7/x86_64/',\n  'http://yum.theforeman.org/katello/nightly/katello/el8/x86_64/',\n];\n","import { ReactElement, useEffect, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport DropdownSelect from '../../DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100, global_secondary_color_100 } from '@patternfly/react-tokens';\nimport Hide from '../../Hide/Hide';\nimport { FilterData, RepositoryParamsResponse } from '../../../services/Content/ContentApi';\nimport { useQueryClient } from 'react-query';\nimport { REPOSITORY_PARAMS_KEY } from '../../../services/Content/ContentQueries';\nimport useDebounce from '../../../services/useDebounce';\nimport AddContent from './AddContent/AddContent';\nimport { createUseStyles } from 'react-jss';\nimport { isEmpty } from 'lodash';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: FilterData) => void;\n  filterData: FilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nexport type Filters = 'Name/URL' | 'Version' | 'Architecture';\n\nconst ContentListFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const filters = ['Name/URL', 'Version', 'Architecture'];\n  const [filterType, setFilterType] = useState<Filters>('Name/URL');\n  const [versionNamesLabels, setVersionNamesLabels] = useState({});\n  const [archNamesLabels, setArchNamesLabels] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedVersions, setSelectedVersions] = useState<string[]>([]);\n  const [selectedArches, setSelectedArches] = useState<string[]>([]);\n\n  const { distribution_arches = [], distribution_versions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setSelectedVersions([]);\n    setSelectedArches([]);\n    setFilterData({ searchQuery: '', versions: [], arches: [] });\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.arches.length === 0 &&\n      filterData.versions.length === 0 &&\n      filterData.searchQuery === '' &&\n      (searchQuery !== '' || selectedArches.length !== 0 || selectedVersions.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    searchQuery: debouncedSearchQuery,\n    selectedVersions: debouncedSelectedVersions,\n    selectedArches: debouncedSelectedArches,\n  } = useDebounce({\n    searchQuery,\n    selectedVersions,\n    selectedArches,\n  });\n\n  const getLabels = (type: string, names: Array<string>) => {\n    const namesLabels = type === 'arch' ? distribution_arches : distribution_versions;\n    const labels: Array<string> = [];\n    names.forEach((name) => {\n      const found = namesLabels.find((v) => v.name === name);\n      if (found) {\n        labels.push(found.label);\n      }\n    });\n    return labels;\n  };\n\n  useEffect(() => {\n    setFilterData({\n      searchQuery: debouncedSearchQuery,\n      versions: getLabels('version', debouncedSelectedVersions),\n      arches: getLabels('arch', debouncedSelectedArches),\n    });\n  }, [debouncedSearchQuery, debouncedSelectedVersions, debouncedSelectedArches]);\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    if (\n      isEmpty(versionNamesLabels) &&\n      isEmpty(archNamesLabels) &&\n      distribution_arches.length !== 0 &&\n      distribution_versions.length !== 0\n    ) {\n      const arches = {};\n      const versions = {};\n      distribution_arches.forEach((arch) => (arches[arch.name] = arch.label));\n      distribution_versions.forEach((version) => (versions[version.name] = version.label));\n      setVersionNamesLabels(versions);\n      setArchNamesLabels(arches);\n    }\n  }, [distribution_arches, distribution_versions]);\n\n  const getSelectionByType = (): ReactElement => {\n    switch (filterType) {\n      case 'Name/URL':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='search'\n              ouiaId='filter_search'\n              placeholder='Filter by name/url'\n              value={searchQuery}\n              onChange={(value) => setSearchQuery(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Version':\n        return (\n          <DropdownSelect\n            toggleId='versionSelect'\n            ouiaId='filter_version'\n            isDisabled={isLoading}\n            options={Object.keys(versionNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedVersions}\n            setSelected={setSelectedVersions}\n            placeholderText='Filter by version'\n          />\n        );\n      case 'Architecture':\n        return (\n          <DropdownSelect\n            toggleId='archSelect'\n            ouiaId='filter_arch'\n            isDisabled={isLoading}\n            options={Object.keys(archNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedArches}\n            setSelected={setSelectedArches}\n            placeholderText='Filter by architecture'\n          />\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <FlexItem>\n            <DropdownSelect\n              toggleId='filterSelectionDropdown'\n              ouiaId='filter_type'\n              isDisabled={isLoading}\n              options={filters}\n              variant={SelectVariant.single}\n              selectedProp={filterType}\n              setSelected={setFilterType}\n              placeholderText='filter'\n              toggleIcon={<FilterIcon />}\n            />\n          </FlexItem>\n          <FlexItem>{getSelectionByType()}</FlexItem>\n        </InputGroup>\n      </FlexItem>\n      <FlexItem>\n        <AddContent isLoading={isLoading} />\n      </FlexItem>\n      <Hide hide={!(selectedVersions.length || selectedArches.length || searchQuery != '')}>\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Version'>\n            {selectedVersions.map((version) => (\n              <Chip\n                key={version}\n                onClick={() => deleteItem(version, selectedVersions, setSelectedVersions)}\n              >\n                {version}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Architecture'>\n            {selectedArches.map((arch) => (\n              <Chip key={arch} onClick={() => deleteItem(arch, selectedArches, setSelectedArches)}>\n                {arch}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {searchQuery !== '' && (\n            <ChipGroup categoryName='Name/URL'>\n              <Chip key='search_chip' onClick={() => setSearchQuery('')}>\n                {searchQuery}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedSearchQuery !== '' && searchQuery !== '') ||\n            !!selectedVersions?.length ||\n            !!selectedArches?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default ContentListFilters;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport {\n  global_Color_200,\n  global_success_color_100,\n  global_link_Color,\n} from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../Hide/Hide';\nimport useDebounce from '../../../../services/useDebounce';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useEditContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport { isValidURL, makeValidationSchema, mapValidationData } from '../AddContent/helpers';\nimport ContentValidity from '../AddContent/components/ContentValidity';\nimport {\n  EditContentProps,\n  FormikEditValues,\n  mapFormikToEditAPIValues,\n  mapToDefaultFormikValues,\n} from './helpers';\nimport { isEqual } from 'lodash';\nimport OptionalTooltip from '../../../OptionalTooltip/OptionalTooltip';\n\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  description: {\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '12px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '12px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n});\n\nconst EditContentModal = ({ values, open, setClosed }: EditContentProps) => {\n  if (!open) return <></>;\n  const initialValues = mapToDefaultFormikValues(values);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: values.map(() => ({ name: true, url: true })),\n    onSubmit: () => undefined,\n  });\n\n  const valuesHaveChanged = useMemo(\n    () => !isEqual(initialValues, formik.values),\n    [initialValues, formik.values],\n  );\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const closeModal = () => {\n    setClosed();\n    formik.resetForm();\n  };\n\n  const { mutateAsync: editContent, isLoading: isEditing } = useEditContentQuery(\n    queryClient,\n    mapFormikToEditAPIValues(formik.values),\n  );\n\n  const { fetchGpgKey } = useFetchGpgKey();\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikEditValues,\n  ): 'default' | 'success' | 'error' => {\n    const hasNotChanged = isEqual(initialValues[index]?.[field], formik.values[index]?.[field]);\n    const errors = !!formik.errors[index]?.[field];\n    switch (true) {\n      case errors:\n        return 'error';\n      case hasNotChanged:\n        return 'default';\n      case !hasNotChanged:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const debouncedValues = useDebounce(formik.values);\n\n  const { mutateAsync: validateContentList, data: validationList } = useValidateContentList();\n\n  useEffect(() => {\n    if (open)\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification, uuid }) => ({\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n          uuid,\n        })),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n      });\n  }, [debouncedValues, values, open]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        '';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes(label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n      }\n      updateVariable(index, { arch, versions });\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateArchAndVersion(index);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  return (\n    <Modal\n      variant={ModalVariant.medium}\n      title='Edit custom repository'\n      ouiaId='edit_custom_repository'\n      help={\n        <Popover\n          headerContent={<div>Edit custom repository</div>}\n          bodyContent={<div>Use this form to edit the values of an existing repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Edit by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen={open}\n      onClose={closeModal}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              variant='primary'\n              isLoading={isEditing}\n              isDisabled={\n                !formik.isValid ||\n                isEditing ||\n                !valuesHaveChanged ||\n                !isEqual(formik.values, debouncedValues)\n              }\n              onClick={() => {\n                editContent().then(closeModal);\n              }}\n            >\n              {valuesHaveChanged ? 'Save changes' : 'No changes'}\n            </Button>\n            <Button key='cancel' variant='link' onClick={closeModal}>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <TableComposable aria-label='Table for edit modal' ouiaId='edit_modal_table'>\n        <Hide hide={createDataLengthOf1}>\n          <Tbody isExpanded={allExpanded}>\n            <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n              <Td\n                className={classes.toggleAction}\n                isActionCell\n                expand={{\n                  rowIndex: 0,\n                  isExpanded: allExpanded,\n                }}\n              />\n              <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n            </Tr>\n          </Tbody>\n        </Hide>\n        {formik.values.map(\n          (\n            { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n            index,\n          ) => (\n            <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Hide hide={createDataLengthOf1}>\n                <Tr className={classes.colHeader}>\n                  <Td\n                    onClick={() => onToggle(index)}\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: index,\n                      isExpanded: expanded,\n                    }}\n                  />\n                  <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                    {name || 'New content'}\n                  </Td>\n                  <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                    <ContentValidity\n                      touched={formik.touched[index]}\n                      errors={formik.errors[index]}\n                    />\n                  </Td>\n                </Tr>\n              </Hide>\n              <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                <Td colSpan={4} className={createDataLengthOf1 ? '' : classes.mainContentCol}>\n                  <Form>\n                    <FormGroup\n                      label='Name'\n                      isRequired\n                      fieldId='namegroup'\n                      validated={getFieldValidation(index, 'name')}\n                      helperTextInvalid={formik.errors[index]?.name}\n                    >\n                      <TextInput\n                        isRequired\n                        id='name'\n                        name='name'\n                        label='Name'\n                        ouiaId='input_name'\n                        type='text'\n                        validated={getFieldValidation(index, 'name')}\n                        onChange={(value) => {\n                          updateVariable(index, { name: value });\n                        }}\n                        value={name || ''}\n                        placeholder='Enter name'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='URL'\n                      isRequired\n                      fieldId='url'\n                      validated={getFieldValidation(index, 'url')}\n                      helperTextInvalid={formik.errors[index]?.url}\n                    >\n                      <TextInput\n                        isRequired\n                        type='url'\n                        validated={getFieldValidation(index, 'url')}\n                        onBlur={() => urlOnBlur(index)}\n                        onChange={(value) => {\n                          if (url !== value) {\n                            updateVariable(index, { url: value });\n                          }\n                        }}\n                        value={url || ''}\n                        placeholder='https://'\n                        id='url'\n                        name='url'\n                        label='Url'\n                        ouiaId='input_url'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict architecture'\n                      aria-label='restrict_to_architecture'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package architecture'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='arch'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_architecture'\n                        validated={getFieldValidation(index, 'arch')}\n                        menuAppendTo={document.body}\n                        toggleId={'archSelection' + index}\n                        options={Object.keys(distributionArches)}\n                        variant={SelectVariant.single}\n                        selectedProp={Object.keys(distributionArches).find(\n                          (key: string) => arch === distributionArches[key],\n                        )}\n                        setSelected={(value) =>\n                          updateVariable(index, { arch: distributionArches[value] })\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict OS version'\n                      aria-label='restrict_to_os_version'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package OS version'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='version'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_os_version'\n                        validated={getFieldValidation(index, 'versions')}\n                        menuAppendTo={document.body}\n                        toggleId={'versionSelection' + index}\n                        options={Object.keys(distributionVersions)}\n                        variant={SelectVariant.typeaheadMulti}\n                        selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                          versions?.includes(distributionVersions[key]),\n                        )}\n                        placeholderText={versions?.length ? '' : 'Any version'}\n                        setSelected={(value) => setVersionSelected(value, index)}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='GPG key'\n                      labelIcon={\n                        <Tooltip content='Optional: Add GPG Key file or URL'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='gpgKey'\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      helperTextInvalid={formik.errors[index]?.gpgKey}\n                    >\n                      <FileUpload\n                        id='gpgKey-uploader'\n                        aria-label='gpgkey_file_to_upload'\n                        type='text'\n                        filenamePlaceholder='Drag a file here or upload one'\n                        textAreaPlaceholder='Paste GPG key or URL here'\n                        value={gpgKey}\n                        isLoading={gpgLoading}\n                        validated={getFieldValidation(index, 'gpgKey')}\n                        spellCheck={false}\n                        onDataChange={(value) => updateVariable(index, { gpgKey: value })}\n                        onPaste={async ({ clipboardData }) => {\n                          const value = clipboardData.getData('text');\n                          if (isValidURL(value)) {\n                            updateVariable(index, { gpgLoading: true });\n                            const gpgData = await fetchGpgKey(value);\n                            updateVariable(index, {\n                              gpgKey: gpgData,\n                              gpgLoading: false,\n                              ...(gpgKey === '' && !!value\n                                ? {\n                                    metadataVerification:\n                                      !!validationList?.[index]?.url?.metadata_signature_present,\n                                  }\n                                : {}),\n                            });\n                          }\n                        }}\n                        onTextChange={(value) =>\n                          updateVariable(index, {\n                            gpgKey: value,\n                            ...(gpgKey === '' && !!value\n                              ? {\n                                  metadataVerification:\n                                    !!validationList?.[index]?.url?.metadata_signature_present,\n                                }\n                              : {}),\n                          })\n                        }\n                        onClearClick={() => updateVariable(index, { gpgKey: '' })}\n                        dropzoneProps={{\n                          accept: '.txt',\n                          maxSize: 4096,\n                          onDropRejected: (e) => console.log('onDropRejected', e),\n                        }}\n                        allowEditingUploadedText\n                        browseButtonText='Upload'\n                      />\n                    </FormGroup>\n                    <Hide hide={!gpgKey}>\n                      <FormGroup fieldId='metadataVerification' label='Use GPG key for' isInline>\n                        <Radio\n                          isDisabled={\n                            validationList?.[index]?.url?.metadata_signature_present !== true\n                          }\n                          id='package verification only'\n                          name='package-verification-only'\n                          label='Package verification only'\n                          isChecked={!metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: false })}\n                        />\n                        <OptionalTooltip\n                          show={validationList?.[index]?.url?.metadata_signature_present !== true}\n                          content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                        >\n                          <Radio\n                            isDisabled={\n                              validationList?.[index]?.url?.metadata_signature_present !== true\n                            }\n                            id='Package and metadata verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                        </OptionalTooltip>\n                        <Hide\n                          hide={getFieldValidation(index, 'metadataVerification') !== 'success'}\n                        >\n                          <CheckCircleIcon noVerticalAlign color={green} />\n                        </Hide>\n                      </FormGroup>\n                    </Hide>\n                  </Form>\n                </Td>\n              </Tr>\n            </Tbody>\n          ),\n        )}\n      </TableComposable>\n    </Modal>\n  );\n};\n\nexport default EditContentModal;\n","import { ContentItem, EditContentRequest } from '../../../../services/Content/ContentApi';\nexport interface EditContentProps {\n  setClosed: () => void;\n  open: boolean;\n  values: ContentItem[];\n}\n\nexport interface FormikEditValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  metadataVerification: boolean;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  expanded: boolean;\n  uuid: string;\n}\n\nexport const mapFormikToEditAPIValues = (formikValues: FormikEditValues[]): EditContentRequest =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification, uuid }) => ({\n    uuid,\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nexport const mapToDefaultFormikValues = (values: EditContentProps['values']): FormikEditValues[] =>\n  values.map(\n    (\n      {\n        name,\n        url,\n        distribution_arch: arch,\n        distribution_versions: versions,\n        uuid,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n      },\n      index,\n    ) => ({\n      name,\n      url,\n      arch,\n      versions,\n      gpgKey,\n      gpgLoading: false,\n      metadataVerification,\n      expanded: index + 1 === values.length,\n      uuid,\n    }),\n  );\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon, PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\nimport AddContent from './AddContent/AddContent';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n});\n\ninterface Props {\n  notFiltered?: boolean;\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ notFiltered, clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={notFiltered ? PlusCircleIcon : SearchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        {notFiltered\n          ? 'No custom repositories'\n          : 'No custom repositories match the filter criteria'}\n      </Title>\n      <EmptyStateBody>\n        {notFiltered\n          ? 'To get started, create a custom repository'\n          : 'Clear all filters to show more results'}\n      </EmptyStateBody>\n      {notFiltered ? (\n        <AddContent />\n      ) : (\n        <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n          Clear all filters\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { Button, Text, Tooltip } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { global_disabled_color_100 } from '@patternfly/react-tokens';\nimport { useState } from 'react';\nimport Hide from '../../Hide/Hide';\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport PackageModal from './PackageModal/PackageModal';\n\nconst useStyles = createUseStyles({\n  text: {\n    color: global_disabled_color_100.value,\n    width: 'fit-content',\n  },\n  link: {\n    padding: 0,\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n}\n\nconst PackageCount = ({ rowData }: Props) => {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  if (!rowData.package_count && rowData.status === 'Pending') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository has not been introspected yet'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Hide hide={!modalOpen}>\n        <PackageModal rowData={rowData} closeModal={() => setModalOpen(false)} />\n      </Hide>\n      <Button\n        ouiaId='package_count_button'\n        variant='link'\n        onClick={() => setModalOpen(true)}\n        className={classes.link}\n      >\n        {rowData.package_count}\n      </Button>\n    </>\n  );\n};\n\nexport default PackageCount;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Modal,\n  ModalVariant,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_Color_200,\n} from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../Hide/Hide';\nimport { ContentItem, PackageItem } from '../../../../services/Content/ContentApi';\nimport { useGetPackagesQuery } from '../../../../services/Content/ContentQueries';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../../../services/useDebounce';\nimport EmptyPackageState from './components/EmptyPackageState';\n\nconst useStyles = createUseStyles({\n  description: {\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  closeModal: () => void;\n}\n\nexport default function PackageModal({\n  rowData: { name, uuid, package_count: packageCount },\n  closeModal,\n}: Props) {\n  const classes = useStyles();\n  const storedPerPage = Number(localStorage.getItem('packagePerPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Name', 'Version', 'Release', 'Arch'];\n\n  const columnSortAttributes = ['name', 'version', 'release', 'arch'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    error,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetPackagesQuery(uuid, packageCount, page, perPage, debouncedSearchQuery, sortString);\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem('packagePerPage', newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n\n  const {\n    data: packageList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const notLoadingZeroCount = !fetchingOrLoading && !count;\n\n  return (\n    <Modal\n      key={uuid}\n      hasNoBodyWrapper\n      aria-label='RPM package modal'\n      variant={ModalVariant.medium}\n      title='Packages'\n      description={\n        <p>\n          View list of packages for <b>{name}</b>\n        </p>\n      }\n      isOpen\n      onClose={closeModal}\n      footer={\n        <Button key='close' variant='secondary' onClick={closeModal}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <Flex className={classes.topContainer}>\n            <Flex>\n              <TextInput\n                id='search'\n                ouiaId='name_search'\n                placeholder='Filter by name'\n                value={searchQuery}\n                onChange={(value) => setSearchQuery(value)}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </Flex>\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rowSize={perPage}\n                colSize={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <TableComposable\n              aria-label='Custom repositories table'\n              ouiaId='packages_table'\n              variant='compact'\n            >\n              <Thead>\n                <Tr>\n                  {columnHeaders.map((columnHeader, index) => (\n                    <Th\n                      key={columnHeader + '_column'}\n                      sort={sortParams(index, notLoadingZeroCount)}\n                    >\n                      {columnHeader}\n                    </Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {packageList.map(({ name, version, release, arch }: PackageItem, index: number) => (\n                  <Tr key={name + index}>\n                    <Td>{name}</Td>\n                    <Td>{version}</Td>\n                    <Td>{release}</Td>\n                    <Td>{arch}</Td>\n                  </Tr>\n                ))}\n                <Hide hide={!notLoadingZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </TableComposable>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { Td, Tr } from '@patternfly/react-table';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    margin: 'auto',\n  },\n});\n\ninterface Props {\n  clearSearch: () => void;\n}\n\nexport default function EmptyPackageState({ clearSearch }: Props) {\n  const classes = useStyles();\n  return (\n    <Tr>\n      <Td colSpan={4}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title headingLevel='h2' size='lg'>\n              No packages match the search criteria\n            </Title>\n            <EmptyStateBody>Clear your current search to show more results</EmptyStateBody>\n            <Button ouiaId='clear_filters' variant='link' onClick={clearSearch}>\n              Clear search\n            </Button>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n}\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\nimport { Flex, FlexItem, Tooltip } from '@patternfly/react-core';\nimport StatusText from './StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n  global_info_color_100,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\nconst blue = global_info_color_100.value;\n\ninterface Props {\n  status?: string;\n  error?: string;\n}\n\nconst StatusIcon = ({ status, error }: Props) => {\n  switch (status) {\n    case 'Valid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Valid</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Invalid':\n      return (\n        <Tooltip position='top-start' content={error}>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <ExclamationCircleIcon color={red} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='red'>Invalid</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    case 'Unavailable':\n      return (\n        <Tooltip position='top-start' content={error}>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <ExclamationTriangleIcon color={gold} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='gold'>Unavailable</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    case 'Pending':\n      return (\n        <Tooltip position='top-start' content='Repository has not been introspected yet'>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <InfoCircleIcon color={blue} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='blue'>Pending</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import { createUseStyles } from 'react-jss';\nimport {\n  global_danger_color_200,\n  global_info_color_200,\n  global_success_color_200,\n  global_warning_color_200,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_200.value;\nconst green = global_success_color_200.value;\nconst gold = global_warning_color_200.value;\nconst blue = global_info_color_200.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n  gold: { color: gold, fontWeight: 'bold', fontSize: '14px' },\n  blue: { color: blue, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  color: 'red' | 'green' | 'gold' | 'blue';\n  children?: React.ReactNode;\n}\n\nconst StatusText = ({ color, children }: Props) => {\n  const classes = useStyles();\n\n  return <span className={classes[color]}>{children}</span>;\n};\n\nexport default StatusText;\n","import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  link: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  icon: {\n    marginLeft: '5px',\n  },\n});\n\ninterface Props {\n  href: string;\n}\n\nconst UrlWithExternalIcon = ({ href }: Props) => {\n  const classes = useStyles();\n  return (\n    <>\n      <a href={href} className={classes.link} rel='noreferrer' target='_blank'>\n        {href} <ExternalLinkAltIcon className={classes.icon} />\n      </a>\n    </>\n  );\n};\n\nexport default UrlWithExternalIcon;\n","import { Select, SelectOption, SelectProps, SelectVariant } from '@patternfly/react-core';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n\ninterface DropdownSelectProps extends Partial<SelectProps> {\n  options: Array<string>;\n  variant: SelectVariant.single | SelectVariant.checkbox | SelectVariant.typeaheadMulti;\n  selectedProp: any; // eslint-disable-line\n  setSelected: Dispatch<SetStateAction<any>>; // eslint-disable-line\n  toggleIcon?: React.ReactElement;\n  placeholderText?: string | React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst DropdownSelect = ({\n  options,\n  variant,\n  selectedProp,\n  setSelected,\n  toggleIcon,\n  placeholderText,\n  isDisabled,\n  ...rest\n}: DropdownSelectProps) => {\n  const selected = Array.isArray(selectedProp) ? selectedProp : [selectedProp];\n  const [isOpen, setIsOpen] = useState(false);\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const selectFrom = options.map((option, index) => (\n    <SelectOption key={option + index} value={option} />\n  ));\n\n  const onSelect = (_event, selection) => {\n    switch (variant) {\n      case SelectVariant.single:\n        setSelected(selection);\n        setIsOpen(false);\n        break;\n      case SelectVariant.typeaheadMulti:\n      case SelectVariant.checkbox:\n        if (Array.isArray(selectedProp)) {\n          if (selected.includes(selection)) {\n            const remaining = selected.filter((item) => item !== selection);\n            setSelected(remaining);\n            break;\n          }\n          setSelected([...selected, selection]);\n          break;\n        }\n        break;\n    }\n  };\n\n  return (\n    <Select\n      isDisabled={isDisabled}\n      variant={variant}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      placeholderText={placeholderText}\n      isCheckboxSelectionBadgeHidden\n      toggleIcon={toggleIcon}\n      {...rest}\n    >\n      {selectFrom}\n    </Select>\n  );\n};\n\nexport default DropdownSelect;\n","import { ErrorBoundary as _ErrorBoundaryPage } from '@redhat-cloud-services/frontend-components';\n\nconst ErrorBoundaryPage = _ErrorBoundaryPage as unknown as React.FunctionComponent<{\n  children: React.ReactNode;\n  headerTitle: string;\n  errorTitle?: string;\n  errorDescription?: string;\n}>;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const ErrorPage = ({ children }: Props) => (\n  <ErrorBoundaryPage\n    headerTitle='Content Sources'\n    errorTitle='Unhandled error'\n    errorDescription='There was a problem trying to process your request'\n  >\n    {children}\n  </ErrorBoundaryPage>\n);\n","interface Props {\n  hide: boolean;\n  children?: React.ReactNode;\n}\n\nconst Hide = ({ hide, children }: Props) => (hide ? <></> : <>{children}</>);\n\nexport default Hide;\n","import { Tooltip, TooltipProps } from '@patternfly/react-core';\n\ninterface Props extends TooltipProps {\n  show: boolean;\n}\n\nconst OptionalTooltip = ({ show, children, ...rest }: Props) =>\n  show ? <Tooltip {...rest}>{children}</Tooltip> : <>{children}</>;\n\nexport default OptionalTooltip;\n","import { Text } from '@patternfly/react-core';\nimport { global_Color_100 } from '@patternfly/react-tokens';\nimport {\n  Main,\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { PageHeaderProps as _PageHeaderProps } from '@redhat-cloud-services/frontend-components/PageHeader/PageHeader';\nimport { FunctionComponent, ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nimport ContentListTable from '../../components/ContentListTable/ContentListTable';\n\nconst useStyles = createUseStyles({\n  subtext: {\n    color: global_Color_100.value,\n  },\n});\n\n// Example of how to extend inaccurately typed imports\ninterface PageHeaderProps extends _PageHeaderProps {\n  children?: ReactElement;\n}\n\nconst PageHeader = _PageHeader as FunctionComponent<PageHeaderProps>;\n\nconst ContentPage = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <PageHeader>\n        <>\n          <PageHeaderTitle title='Custom Repositories' />\n          <Text className={classes.subtext}>\n            View all custom repositories within your organization\n          </Text>\n        </>\n      </PageHeader>\n      <Main>\n        <ContentListTable />\n      </Main>\n    </>\n  );\n};\n\nexport default ContentPage;\n","import axios from 'axios';\n\nexport interface ContentItem {\n  uuid: string;\n  name: string;\n  package_count: number;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  account_id: string;\n  org_id: string;\n  status: string;\n  last_introspection_error: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface CreateContentRequestItem {\n  name: string;\n  url: string;\n  distribution_versions?: Array<string>;\n  distribution_arch?: string;\n  gpg_key?: string;\n  metadata_verification?: boolean;\n}\n\nexport interface CreateContentResponseItem {\n  error: string;\n  repository: ContentItem;\n}\n\nexport type CreateContentRequestResponse = CreateContentResponseItem[];\n\nexport type CreateContentRequest = Array<CreateContentRequestItem>;\n\nexport interface EditContentRequestItem {\n  uuid: string;\n  name: string;\n  url: string;\n  distribution_arch: string;\n  distribution_versions: string[];\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport type EditContentRequest = Array<EditContentRequestItem>;\n\nexport type ContentList = Array<ContentItem>;\n\nexport type Links = {\n  first: string;\n  last: string;\n  next: string;\n  prev: string;\n};\n\nexport type Meta = {\n  count: number;\n  limit: number;\n  offset: number;\n};\n\nexport interface ContentListResponse {\n  data: ContentList;\n  links: Links;\n  meta: Meta;\n}\n\nexport interface RepositoryParamsResponse {\n  distribution_versions: Array<NameLabel>;\n  distribution_arches: Array<NameLabel>;\n}\n\nexport interface GpgKeyResponse {\n  gpg_key: string;\n}\n\nexport type NameLabel = {\n  name: string;\n  label: string;\n};\n\nexport type FilterData = {\n  searchQuery: string;\n  versions: Array<string>;\n  arches: Array<string>;\n};\n\nexport type ValidateItem = {\n  skipped: boolean;\n  valid: boolean;\n  error: string;\n};\n\nexport interface ValidationUrl extends ValidateItem {\n  http_code: number;\n  metadata_present: boolean;\n  metadata_signature_present: boolean;\n}\n\nexport type ValidationResponse = {\n  name?: ValidateItem;\n  url?: ValidationUrl;\n  distribution_versions?: ValidateItem;\n  distribution_arch?: ValidateItem;\n  gpg_key?: ValidateItem;\n}[];\n\nexport interface PackageItem {\n  arch: string;\n  checksum: string;\n  epoch: number;\n  name: string;\n  release: string;\n  summary: string;\n  uuid: string;\n  version: string;\n}\n\nexport type PackagesResponse = {\n  data: PackageItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport const getContentList: (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => Promise<ContentListResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData.searchQuery;\n  const versionParam = filterData.versions.join(',');\n  const archParam = filterData.arches.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const deleteContentListItem: (uuid: string) => Promise<void> = async (uuid: string) => {\n  const { data } = await axios.delete(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const AddContentListItems: (\n  request: CreateContentRequest,\n) => Promise<CreateContentRequestResponse> = async (request) => {\n  const { data } = await axios.post('/api/content-sources/v1.0/repositories/bulk_create/', request);\n  return data;\n};\n\nexport const EditContentListItem: (request: EditContentRequestItem) => Promise<void> = async (\n  request,\n) => {\n  const { data } = await axios.patch(\n    `/api/content-sources/v1.0/repositories/${request.uuid}`,\n    request,\n  );\n  return data;\n};\n\nexport const getRepositoryParams: () => Promise<RepositoryParamsResponse> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/repository_parameters/');\n  return data;\n};\n\nexport const validateContentListItems: (\n  request: CreateContentRequest,\n) => Promise<ValidationResponse> = async (request) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1.0/repository_parameters/validate/',\n    request,\n  );\n  return data;\n};\n\nexport const getGpgKey: (url: string) => Promise<GpgKeyResponse> = async (url: string) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1/repository_parameters/external_gpg_key/',\n    { url },\n  );\n  return data;\n};\n\nexport const getPackages: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<PackagesResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/rpms?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { QueryClient, useMutation, useQuery } from 'react-query';\n\nimport { useNotification } from './../Notifications/Notifications';\nimport {\n  ContentListResponse,\n  deleteContentListItem,\n  getContentList,\n  RepositoryParamsResponse,\n  getRepositoryParams,\n  AddContentListItems,\n  CreateContentRequest,\n  FilterData,\n  validateContentListItems,\n  EditContentListItem,\n  EditContentRequest,\n  getGpgKey,\n  PackagesResponse,\n  getPackages,\n} from './ContentApi';\n\nexport const CONTENT_LIST_KEY = 'CONTENT_LIST_KEY';\nexport const REPOSITORY_PARAMS_KEY = 'REPOSITORY_PARAMS_KEY';\nexport const CREATE_PARAMS_KEY = 'CREATE_PARAMS_KEY';\nexport const PACKAGES_KEY = 'PACKAGES_KEY';\n\nexport const useContentListQuery = (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) =>\n  useQuery<ContentListResponse>(\n    [CONTENT_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getContentList(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n      optimisticResults: true,\n    },\n  );\n\nexport const useAddContentQuery = (queryClient: QueryClient, request: CreateContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => AddContentListItems(request), {\n    onSuccess: () => {\n      const title =\n        request?.length > 1\n          ? `${request?.length} custom repositories added`\n          : `Custom repository \"${request?.[0]?.name}\" added`;\n      notify({\n        variant: AlertVariant.success,\n        title,\n        description: 'Repository introspection may take some time',\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n    },\n    onError: (err: { response?: { data: string | Array<{ error: string | null }> } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.find(({ error }) => {\n            if (error) {\n              description = error;\n              return true;\n            }\n          })?.error;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error adding items to content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useEditContentQuery = (queryClient: QueryClient, request: EditContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => EditContentListItem(request[0]), {\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: `Successfully edited ${request.length} ${request.length > 1 ? 'items' : 'item'}`,\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n    },\n    onError: (err: { response?: { data: string | Array<{ error: string | null }> } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.find(({ error }) => {\n            if (error) {\n              description = error;\n              return true;\n            }\n          })?.error;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error editing items on content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useValidateContentList = () => {\n  const { notify } = useNotification();\n  return useMutation((request: CreateContentRequest) => validateContentListItems(request), {\n    onError: (err) => {\n      const error = err as Error; // Forced Type\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error validating form fields',\n        description: error?.message,\n      });\n    },\n  });\n};\n\nexport const useDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData: FilterData,\n  sortString: string,\n) => {\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    ...Object.values(filterData),\n    sortString,\n  ];\n  const { notify } = useNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => uuid !== data.uuid),\n        meta: previousData.meta\n          ? {\n              ...previousData.meta,\n              count: previousData.meta.count ? previousData.meta.count - 1 : 1,\n            }\n          : undefined,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { previousData } = context as {\n        previousData: ContentListResponse;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = previousData?.meta?.count - 1;\n        }\n\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error deleting item from content list',\n          description: error?.message,\n        });\n      }\n    },\n  });\n};\n\nexport const useRepositoryParams = () =>\n  useQuery<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY, getRepositoryParams, {\n    keepPreviousData: true,\n    staleTime: Infinity,\n  });\n\nexport const useFetchGpgKey = () => {\n  const { notify } = useNotification();\n\n  const fetchGpgKey = async (url: string): Promise<string> => {\n    let gpg_key = url;\n    try {\n      const data = await getGpgKey(url);\n      gpg_key = data.gpg_key;\n    } catch ({ response = {} }) {\n      const { data } = response as { data: { message: string | undefined } | string };\n      const description = typeof data === 'string' ? data : data?.message;\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error fetching GPG key from provided URL',\n        description,\n      });\n    }\n    return gpg_key;\n  };\n\n  return { fetchGpgKey };\n};\n\nexport const useGetPackagesQuery = (\n  uuid: string,\n  count: number,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) =>\n  useQuery<PackagesResponse>(\n    [PACKAGES_KEY, uuid, page, limit, searchQuery, sortBy, count],\n    () => getPackages(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      onError: (err) => {\n        const { notify } = useNotification();\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error fetching rpm packages',\n          description: error?.message,\n        });\n      },\n    },\n  );\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\n\ninterface NotificationPayload {\n  title: React.ReactNode | string;\n  variant: AlertVariant;\n  description?: React.ReactNode | string;\n  dismissable?: boolean;\n}\n\nexport const useNotification = () => {\n  const dispatch = useDispatch();\n  const notify = (payload: NotificationPayload) => dispatch(addNotification(payload));\n\n  return { notify };\n};\n","import { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { initStore, restoreStore } from '@redhat-cloud-services/insights-common-typescript';\nimport { Middleware } from 'redux';\n\nexport const createStore = (...middleware: Middleware[]) => initStore({}, {}, ...middleware);\n\nexport const resetStore = () => restoreStore();\n"],"names":["getRegistry","history","useHistory","chrome","useChrome","useEffect","unregister","register","notifications","notificationsReducer","init","updateDocumentTitle","onChromeEvent","insights","appname","event","push","navId","Routes","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","logger","store","useMemo","resetStore","createStore","appAction","Provider","QueryClientProvider","client","basename","getBaseName","window","location","pathname","pathRoutes","path","component","Suspense","fallback","Bullseye","Spinner","Switch","map","Component","Route","ErrorPage","Redirect","exact","to","useStyles","createUseStyles","mainContainer","backgroundColor","global_BackgroundColor_100","value","display","flexDirection","mainContainer100Height","composes","minHeight","topContainer","justifyContent","padding","height","bottomContainer","invisible","opacity","classes","useQueryClient","storedPerPage","Number","localStorage","getItem","useState","page","setPage","perPage","setPerPage","editModalOpen","setEditModalOpen","editValues","setEditValues","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","searchQuery","versions","arches","filterData","setFilterData","clearFilters","notFiltered","length","useRepositoryParams","repositoryParamsLoading","repositoryParamsError","repositoryParamsIsError","data","distribution_versions","distribution_arches","distVersions","distArches","columnSortAttributes","sortString","useContentListQuery","isLoading","error","isError","isFetching","meta","count","limit","offset","useDeleteContentItemMutate","deleteItem","actionTakingPlace","onSetPage","_","newPage","onPerPageSelect","newPerPage","setItem","toString","columnHeaders","archesDisplay","arch","find","label","name","contentList","rowActions","useCallback","rowData","isDisabled","uuid","title","onClick","then","countIsZero","Grid","className","values","open","setClosed","Flex","FlexItem","hide","Pagination","id","widgetId","perPageComponent","itemCount","isCompact","SkeletonTable","rowSize","colSize","variant","TableVariant","compact","TableComposable","ouiaId","Thead","Tr","columnHeader","index","Th","sort","columnIndex","sortBy","direction","defaultDirection","onSort","_event","size","Tbody","url","distribution_arch","status","last_introspection_error","Td","href","filter","includes","join","isActionCell","ActionsColumn","items","PaginationVariant","bottom","description","color","global_Color_200","removeSideBorder","borderLeft","toggleAllRow","cursor","borderBottom","global_link_Color","fill","colHeader","mainContentCol","toggleAction","addRepositoryButton","marginBottom","saveButton","marginRight","transition","removeButton","defaultValues","gpgKey","gpgLoading","expanded","metadataVerification","isModalOpen","setIsModalOpen","formik","useFormik","initialValues","validateOnBlur","validateOnChange","validationSchema","makeValidationSchema","initialTouched","onSubmit","getQueryData","REPOSITORY_PARAMS_KEY","fetchGpgKey","useFetchGpgKey","distributionArches","distributionVersions","forEach","closeModal","resetForm","useAddContentQuery","mapFormikToAPIValues","addContent","isAdding","createDataLengthOf1","allExpanded","some","updateVariable","newValue","updatedData","setValues","updateTouched","field","touched","updatedTouched","setTouched","getFieldValidation","errors","setTouchedOnLastItemIfUntouchedAndCollapsed","lastItem","debouncedValues","useValidateContentList","validateContentList","validationList","gpg_key","metadata_verification","validationData","validateForm","formikErrors","mappedErrorData","mapValidationData","setErrors","onToggle","Button","Modal","ModalVariant","medium","help","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","isOpen","onClose","footer","Stack","StackItem","isValid","vals","icon","PlusCircleIcon","baseArray","Array","from","keys","newValues","Math","random","substring","magicURLList","isExpanded","expand","rowIndex","dataLabel","undefined","width","splice","newTouched","newErrors","removeRepository","MinusCircleIcon","colSpan","Form","FormGroup","isRequired","fieldId","validated","helperTextInvalid","TextInput","type","onBlur","onChange","placeholder","isValidURL","newVersion","updateArchAndVersion","urlOnBlur","labelIcon","Tooltip","content","menuAppendTo","document","body","toggleId","options","Object","SelectVariant","single","selectedProp","key","setSelected","typeaheadMulti","placeholderText","valueToUpdate","val","setVersionSelected","FileUpload","filenamePlaceholder","textAreaPlaceholder","spellCheck","onDataChange","onPaste","clipboardData","getData","gpgData","metadata_signature_present","onTextChange","onClearClick","dropzoneProps","accept","maxSize","onDropRejected","e","console","log","allowEditingUploadedText","browseButtonText","isInline","Radio","isChecked","show","red","global_danger_color_100","green","global_success_color_100","fontWeight","fontSize","loading","allTouched","every","noErrors","hasTouchedError","alignContent","default","spacer","CheckCircleIcon","ExclamationCircleIcon","REGEX_URL","regex","RegExp","match","formikValues","updatedValidationData","rest","metadata_present","http_code","mapNoMetaDataError","err","isEmpty","Yup","addMethod","object","propertyName","message","this","test","parent","v","createError","array","shape","string","min","max","required","uniqueProperty","chipsContainer","paddingTop","marginLeft","searchInput","paddingRight","searchIcon","global_secondary_color_100","position","top","left","pointerEvents","filterType","setFilterType","versionNamesLabels","setVersionNamesLabels","archNamesLabels","setArchNamesLabels","setSearchQuery","selectedVersions","setSelectedVersions","selectedArches","setSelectedArches","debouncedSearchQuery","debouncedSelectedVersions","debouncedSelectedArches","getLabels","names","namesLabels","labels","found","chips","setChips","chip","version","InputGroup","toggleIcon","FilterIcon","SearchIcon","checkbox","getSelectionByType","fullWidth","ChipGroup","categoryName","Chip","mapToDefaultFormikValues","valuesHaveChanged","isEqual","useEditContentQuery","mapFormikToEditAPIValues","editContent","isEditing","hasNotChanged","noVerticalAlign","emptyStateContainer","flexGrow","EmptyState","EmptyStateVariant","full","EmptyStateIcon","Title","headingLevel","EmptyStateBody","text","global_disabled_color_100","link","modalOpen","setModalOpen","package_count","isContentLeftAligned","Text","packageCount","useGetPackagesQuery","sortParams","packageList","fetchingOrLoading","notLoadingZeroCount","hasNoBodyWrapper","InnerScrollContainer","release","clearSearch","margin","gold","global_warning_color_100","blue","global_info_color_100","ExclamationTriangleIcon","InfoCircleIcon","global_danger_color_200","global_success_color_200","global_warning_color_200","global_info_color_200","children","alignItems","rel","target","ExternalLinkAltIcon","selected","isArray","setIsOpen","selectFrom","option","SelectOption","Select","onSelect","selection","remaining","item","selections","isCheckboxSelectionBadgeHidden","ErrorBoundaryPage","headerTitle","errorTitle","errorDescription","subtext","global_Color_100","PageHeader","PageHeaderTitle","Main","getContentList","versionParam","archParam","get","deleteContentListItem","delete","AddContentListItems","request","post","EditContentListItem","patch","getRepositoryParams","validateContentListItems","getGpgKey","getPackages","CONTENT_LIST_KEY","CREATE_PARAMS_KEY","PACKAGES_KEY","useQuery","keepPreviousData","staleTime","optimisticResults","notify","useNotification","useMutation","onSuccess","AlertVariant","success","invalidateQueries","onError","response","danger","contentListKeyArray","onMutate","cancelQueries","previousData","setQueryData","_data","_variables","context","setQueriesData","_newData","Infinity","dispatch","useDispatch","payload","addNotification","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","initStore","middleware","restoreStore"],"sourceRoot":""}