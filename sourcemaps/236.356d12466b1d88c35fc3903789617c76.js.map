{"version":3,"file":"js/236.1671627792717.d138fbf26d649e12a6d1.js","mappings":"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","sources":["webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/Pages/ContentListTable/ContentListTable.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/AddContent.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/components/ContentValidity.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/helpers.ts","webpack:///./src/Pages/ContentListTable/components/ContentListFilters.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentModal.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/helpers.ts","webpack:///./src/Pages/ContentListTable/components/EmptyTableState.tsx","webpack:///./src/Pages/ContentListTable/components/PackageCount.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/PackageModal.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/components/EmptyPackageState.tsx","webpack:///./src/Pages/ContentListTable/components/StatusIcon.tsx","webpack:///./src/Pages/ContentListTable/components/StatusText.tsx","webpack:///./src/Pages/PopularRepositoriesTable/PopularRepositoriesTable.tsx","webpack:///./src/Pages/PopularRepositoriesTable/components/EmptyTableState.tsx","webpack:///./src/Routes.tsx","webpack:///./src/components/ConditionalTooltip/ConditionalTooltip.tsx","webpack:///./src/components/DropdownSelect/DropdownSelect.tsx","webpack:///./src/components/Error/ErrorPage.tsx","webpack:///./src/components/Hide/Hide.tsx","webpack:///./src/components/NoPermissionsPage/NoPermissionsPage.tsx","webpack:///./src/components/UrlWithLinkIcon/UrlWithLinkIcon.tsx","webpack:///./src/middleware/AppContext.tsx","webpack:///./src/services/Content/ContentApi.ts","webpack:///./src/services/Content/ContentQueries.ts","webpack:///./src/services/Notifications/Notifications.tsx","webpack:///./src/services/useDebounce.tsx","webpack:///./src/store/index.tsx"],"sourcesContent":["import '@redhat-cloud-services/frontend-components-utilities/styles/_all';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport Routes from './Routes';\nimport { useAppContext } from './middleware/AppContext';\nimport { NoPermissionsPage } from './components/NoPermissionsPage/NoPermissionsPage';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { insights } from '../package.json';\n\nimport { getRegistry as _getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { fetchRBAC } from '@redhat-cloud-services/insights-common-typescript';\nimport { useEffect } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst getRegistry = _getRegistry as unknown as () => { register: ({ notifications }) => void };\nconst { appname } = insights;\n\nexport default function App() {\n  const { rbac, setRbac } = useAppContext();\n  const chrome = useChrome();\n\n  useEffect(() => {\n    // Get chrome and register app\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n\n    if (chrome && !rbac) {\n      // Get permissions and store them in context\n      chrome.auth.getUser().then(async () => fetchRBAC(appname).then(setRbac));\n    }\n  }, [!!chrome]);\n\n  switch (true) {\n    case !rbac:\n      return (\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      );\n    case rbac?.read:\n      return (\n        <>\n          <NotificationsPortal />\n          <Routes />\n        </>\n      );\n\n    default:\n      return <NoPermissionsPage />;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport * as Redux from 'redux';\n\nimport App from './App';\nimport { ContextProvider } from './middleware/AppContext';\nimport { createStore, resetStore } from './store';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false, // TODO: Have a conversation about this\n    },\n  },\n});\n\ninterface AppEntryProps {\n  logger?: Redux.Middleware;\n}\n\nexport default function AppEntry({ logger }: AppEntryProps) {\n  const store = React.useMemo(() => {\n    resetStore();\n    if (logger) {\n      return createStore(logger).store;\n    }\n    return createStore().store;\n  }, [logger]);\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('view-list-page');\n  }, []);\n\n  return (\n    <ReduxProvider store={store}>\n      <ContextProvider>\n        <QueryClientProvider client={queryClient}>\n          <App />\n        </QueryClientProvider>\n      </ContextProvider>\n    </ReduxProvider>\n  );\n}\n","import {\n  Bullseye,\n  Flex,\n  FlexItem,\n  Grid,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  ActionsColumn,\n  IAction,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ContentItem, FilterData } from '../../services/Content/ContentApi';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  useContentListQuery,\n  useDeleteContentItemMutate,\n  useRepositoryParams,\n} from '../../services/Content/ContentQueries';\nimport ContentListFilters from './components/ContentListFilters';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from './components/EmptyTableState';\nimport { useQueryClient } from 'react-query';\nimport EditContentModal from './components/EditContentModal/EditContentModal';\nimport StatusIcon from './components/StatusIcon';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport PackageCount from './components/PackageCount';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nconst ContentListTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editValues, setEditValues] = useState<ContentItem[]>([]);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const [filterData, setFilterData] = useState<FilterData>({\n    searchQuery: '',\n    versions: [],\n    arches: [],\n  });\n\n  const clearFilters = () => setFilterData({ searchQuery: '', versions: [], arches: [] });\n\n  const notFiltered =\n    !filterData.arches?.length && filterData.searchQuery === '' && !filterData.versions?.length;\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const columnSortAttributes = [\n    'name',\n    'distribution_arch',\n    'distribution_versions',\n    'package_count',\n    'status',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useContentListQuery(page, perPage, filterData, sortString());\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions', 'Packages', 'Status'];\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: contentList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const rowActions = useCallback(\n    (rowData: ContentItem): IAction[] => [\n      {\n        title: 'Delete',\n        onClick: () =>\n          deleteItem(rowData?.uuid).then(() => {\n            // If this is the last item on a page, go to previous page.\n            if (page > 1 && count / perPage + 1 >= page && (count - 1) % perPage === 0) {\n              setPage(page - 1);\n            }\n          }),\n      },\n      {\n        isDisabled: actionTakingPlace,\n        title: 'Edit',\n        onClick: () => {\n          setEditValues([rowData]);\n          setEditModalOpen(true);\n        },\n      },\n    ],\n    [actionTakingPlace],\n  );\n\n  const countIsZero = count === 0;\n\n  if (countIsZero && notFiltered && !isLoading)\n    return (\n      <Bullseye>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Bullseye>\n    );\n\n  return (\n    <Grid className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}>\n      <EditContentModal\n        values={editValues}\n        open={editModalOpen}\n        setClosed={() => {\n          setEditModalOpen(false);\n          setEditValues([]);\n        }}\n      />\n      <Flex className={classes.topContainer}>\n        <ContentListFilters\n          isLoading={isLoading}\n          setFilterData={(values) => {\n            setFilterData(values);\n            setPage(1);\n          }}\n          filterData={filterData}\n        />\n        <FlexItem>\n          <Hide hide={countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer100Height}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={countIsZero || isLoading}>\n        <>\n          <TableComposable\n            aria-label='Custom repositories table'\n            ouiaId='content_sources_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                {columnHeaders.map((columnHeader, index) => (\n                  <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                    {columnHeader}\n                  </Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {contentList.map((rowData: ContentItem) => {\n                const {\n                  uuid,\n                  name,\n                  url,\n                  distribution_arch,\n                  distribution_versions,\n                  status,\n                  last_introspection_error,\n                } = rowData;\n                return (\n                  <Tr key={uuid}>\n                    <Td>\n                      {name}\n                      <br />\n                      <UrlWithExternalIcon href={url} />\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td>\n                      <PackageCount rowData={rowData} />\n                    </Td>\n                    <Td>\n                      <StatusIcon status={status} error={last_introspection_error} />\n                    </Td>\n                    <Td isActionCell>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        <ActionsColumn items={rowActions(rowData)} />\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero || isLoading}>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default ContentListTable;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  PlusCircleIcon,\n  MinusCircleIcon,\n} from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport { global_Color_200, global_link_Color } from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  isValidURL,\n  mapFormikToAPIValues,\n  mapValidationData,\n  makeValidationSchema,\n  magicURLList,\n  FormikValues,\n} from './helpers';\nimport useDebounce from '../../../../services/useDebounce';\nimport ContentValidity from './components/ContentValidity';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useAddContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../../middleware/AppContext';\nimport { isEmpty, isEqual } from 'lodash';\n\ninterface Props {\n  isDisabled?: boolean;\n}\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '8px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '8px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  addRepositoryButton: {\n    marginBottom: '24px',\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  removeButton: {\n    display: 'flex!important',\n    justifyContent: 'flex-end',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n});\n\nconst defaultValues: FormikValues = {\n  name: '',\n  url: '',\n  gpgKey: '',\n  arch: 'any',\n  versions: ['any'],\n  gpgLoading: false,\n  expanded: true,\n  metadataVerification: false,\n};\n\nconst defaultTouchedState = { name: false, url: false, gpgKey: false };\n\nconst AddContent = ({ isDisabled: isButtonDisabled }: Props) => {\n  const { hidePackageVerification, rbac } = useAppContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: [defaultValues],\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: [defaultTouchedState],\n    onSubmit: () => undefined,\n  });\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const { fetchGpgKey } = useFetchGpgKey();\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const handleModalToggle = () => setIsModalOpen(!isModalOpen);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    formik.setTouched([defaultTouchedState]);\n    formik.resetForm();\n  };\n\n  const { mutateAsync: addContent, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    mapFormikToAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n    setTouchedOnLastItemIfUntouchedAndCollapsed();\n  };\n\n  const updateVariable = (index: number, newValue, callback?: () => void) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData).then(callback);\n  };\n\n  const addRepository = () => {\n    formik.setTouched([...formik.touched, defaultTouchedState]);\n    formik.setValues([\n      ...formik.values.map((vals) => ({ ...vals, expanded: false })),\n      defaultValues,\n    ]);\n    setChangeVerified(false);\n  };\n\n  const removeRepository = (index: number) => {\n    const newValues = formik.values;\n    newValues.splice(index, 1);\n\n    const newTouched = formik.touched;\n    newTouched.splice(index, 1);\n\n    const newErrors = formik.errors;\n    newErrors.splice(index, 1);\n\n    formik.setTouched(newTouched);\n    formik.setErrors(newErrors);\n    formik.setValues(newValues);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikValues,\n  ): 'default' | 'success' | 'error' => {\n    const value = !!formik.values[index]?.[field];\n    const errors = !!formik.errors[index]?.[field];\n    const touched = formik.touched[index]?.[field];\n    switch (true) {\n      case errors && touched:\n        return 'error';\n      case value && touched:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  // The below sets the item as touched if the user closes the expansion without touching any fields\n  // This is to ensure that the user understands that the item needs attention (and is in error)\n  const setTouchedOnLastItemIfUntouchedAndCollapsed = () => {\n    const lastItem = formik.touched?.length - 1 || 0;\n    const { name, url } = formik.touched[lastItem] || {};\n    if (!name && !url) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[lastItem] = { ...updatedTouched[lastItem], name: true, url: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  let debouncedValues = useDebounce(formik.values) || []; // Initial value of []\n\n  const { mutateAsync: validateContentList, data: validationList } = useValidateContentList();\n\n  useEffect(() => {\n    // If validate is getting called to often, we could useDeepCompare\n    if (isModalOpen) {\n      if (debouncedValues.length !== formik.values.length) debouncedValues = formik.values;\n      const newTouchedValues = [...formik.touched];\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification }, index) => {\n          if (!newTouchedValues[index]?.name && name) {\n            newTouchedValues[index] = { ...newTouchedValues[index], name: true };\n          }\n          if (!newTouchedValues[index]?.url && url) {\n            newTouchedValues[index] = { ...newTouchedValues[index], url: true };\n          }\n          if (!newTouchedValues[index]?.gpgKey && gpgKey) {\n            newTouchedValues[index] = { ...newTouchedValues[index], gpgKey: true };\n          }\n          return {\n            name,\n            url,\n            gpg_key: gpgKey,\n            metadata_verification: metadataVerification,\n          };\n        }),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n        setChangeVerified(true);\n        formik.setTouched(newTouchedValues);\n      });\n    }\n  }, [debouncedValues, debouncedValues.length, isModalOpen]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n      setTouchedOnLastItemIfUntouchedAndCollapsed();\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const magicButtonThatWillBeDeletedAtSomePoint = () => {\n    const baseArray = Array.from(Array(20).keys());\n    const newValues = baseArray.map((index) => ({\n      name: (Math.random() + 1).toString(36).substring(7),\n      url: magicURLList[index],\n      gpgKey: '',\n      arch: !(index % 3) ? 'x86_64' : 'any',\n      versions: !(index % 2) ? ['7'] : ['any'],\n      gpgLoading: false,\n      expanded: false,\n      metadataVerification: false,\n    }));\n    formik.setValues(newValues);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  return (\n    <>\n      <ConditionalTooltip\n        content='You do not have the required permissions to perform this action.'\n        show={!rbac?.write}\n        setDisabled\n      >\n        <Button\n          id='createContentSourceButton'\n          ouiaId='create_content_source'\n          variant='primary'\n          isDisabled={isButtonDisabled}\n          onClick={handleModalToggle}\n        >\n          Add repositories\n        </Button>\n      </ConditionalTooltip>\n      {isModalOpen ? (\n        <Modal\n          position='top'\n          variant={ModalVariant.medium}\n          title='Add custom repositories'\n          ouiaId='add_custom_repository'\n          help={\n            <Popover\n              headerContent={<div>Add a custom repository</div>}\n              bodyContent={<div>Use this form to enter the values for a new repository.</div>}\n            >\n              <Button variant='plain' aria-label='Help'>\n                <OutlinedQuestionCircleIcon />\n              </Button>\n            </Popover>\n          }\n          description={\n            <p className={classes.description}>\n              Add by completing the form. Default values may be provided automatically.\n            </p>\n          }\n          isOpen\n          onClose={closeModal}\n          footer={\n            <Stack>\n              <StackItem>\n                <Button\n                  isDisabled={!formik.isValid || formik.values.length > 19}\n                  className={classes.addRepositoryButton}\n                  variant='link'\n                  onClick={addRepository}\n                  icon={<PlusCircleIcon />}\n                  ouiaId='add_row'\n                >\n                  Add another repository\n                </Button>\n              </StackItem>\n              <StackItem>\n                <Button\n                  className={classes.saveButton}\n                  key='confirm'\n                  ouiaId='modal_save'\n                  variant='primary'\n                  isLoading={isAdding}\n                  isDisabled={\n                    !changeVerified ||\n                    !formik.isValid ||\n                    isAdding ||\n                    formik.values?.length !== debouncedValues?.length\n                  }\n                  onClick={() => addContent().then(closeModal)}\n                >\n                  Save\n                </Button>\n                <Button key='cancel' variant='link' onClick={closeModal} ouiaId='modal_cancel'>\n                  Cancel\n                </Button>\n                <Button\n                  key='magic'\n                  variant='link'\n                  isDisabled={formik.values.length > 19}\n                  color='green'\n                  onClick={magicButtonThatWillBeDeletedAtSomePoint}\n                >\n                  Add 20\n                </Button>\n              </StackItem>\n            </Stack>\n          }\n        >\n          <TableComposable aria-label='Table for repo add modal' ouiaId='add_modal_table'>\n            <Hide hide={createDataLengthOf1}>\n              <Tbody isExpanded={allExpanded}>\n                <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n                  <Td\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: 0,\n                      isExpanded: allExpanded,\n                    }}\n                  />\n                  <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n                </Tr>\n              </Tbody>\n            </Hide>\n            {formik.values.map(\n              (\n                { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n                index,\n              ) => (\n                <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                  <Hide hide={createDataLengthOf1}>\n                    <Tr className={classes.colHeader}>\n                      <Td\n                        onClick={() => onToggle(index)}\n                        className={classes.toggleAction}\n                        isActionCell\n                        expand={{\n                          rowIndex: index,\n                          isExpanded: expanded,\n                        }}\n                      />\n                      <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                        {name || 'New content'}\n                      </Td>\n                      <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                        <ContentValidity\n                          touched={formik.touched[index]}\n                          errors={formik.errors[index]}\n                        />\n                      </Td>\n                      <Td dataLabel='removeButton' className={classes.removeButton}>\n                        <Hide hide={formik.values.length === 1}>\n                          <Button\n                            onClick={() => removeRepository(index)}\n                            variant='link'\n                            icon={<MinusCircleIcon />}\n                          >\n                            Remove\n                          </Button>\n                        </Hide>\n                      </Td>\n                    </Tr>\n                  </Hide>\n                  <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                    <Td\n                      colSpan={4}\n                      className={\n                        createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                      }\n                    >\n                      <Form>\n                        <FormGroup\n                          label='Name'\n                          isRequired\n                          fieldId='namegroup'\n                          validated={getFieldValidation(index, 'name')}\n                          helperTextInvalid={formik.errors[index]?.name}\n                        >\n                          <TextInput\n                            isRequired\n                            id='name'\n                            name='name'\n                            label='Name'\n                            ouiaId='input_name'\n                            type='text'\n                            validated={getFieldValidation(index, 'name')}\n                            onChange={(value) => {\n                              updateVariable(index, { name: value });\n                            }}\n                            value={name || ''}\n                            placeholder='Enter name'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='URL'\n                          isRequired\n                          fieldId='url'\n                          validated={getFieldValidation(index, 'url')}\n                          helperTextInvalid={formik.errors[index]?.url}\n                        >\n                          <TextInput\n                            isRequired\n                            type='url'\n                            validated={getFieldValidation(index, 'url')}\n                            onBlur={() => updateArchAndVersion(index)}\n                            onChange={(value) => {\n                              if (url !== value) {\n                                updateVariable(index, { url: value });\n                              }\n                            }}\n                            value={url || ''}\n                            placeholder='https://'\n                            id='url'\n                            name='url'\n                            label='Url'\n                            ouiaId='input_url'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict architecture'\n                          aria-label='restrict_to_architecture'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package architecture'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='arch'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_architecture'\n                            menuAppendTo={document.body}\n                            toggleId={'archSelection' + index}\n                            options={Object.keys(distributionArches)}\n                            variant={SelectVariant.single}\n                            selectedProp={Object.keys(distributionArches).find(\n                              (key: string) => arch === distributionArches[key],\n                            )}\n                            setSelected={(value) =>\n                              updateVariable(index, { arch: distributionArches[value] })\n                            }\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict OS version'\n                          aria-label='restrict_to_os_version'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package OS version'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='version'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_os_version'\n                            menuAppendTo={document.body}\n                            toggleId={'versionSelection' + index}\n                            options={Object.keys(distributionVersions)}\n                            variant={SelectVariant.typeaheadMulti}\n                            selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                              versions?.includes(distributionVersions[key]),\n                            )}\n                            placeholderText={versions?.length ? '' : 'Any version'}\n                            setSelected={(value) => setVersionSelected(value, index)}\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='GPG key'\n                          labelIcon={\n                            <Tooltip content='Optional: Add GPG Key file or URL'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='gpgKey'\n                          validated={getFieldValidation(index, 'gpgKey')}\n                          helperTextInvalid={formik.errors[index]?.gpgKey}\n                        >\n                          <FileUpload\n                            validated={getFieldValidation(index, 'gpgKey')}\n                            id='gpgKey-uploader'\n                            aria-label='gpgkey_file_to_upload'\n                            type='text'\n                            filenamePlaceholder='Drag a file here or upload one'\n                            textAreaPlaceholder='Paste GPG key or URL here'\n                            value={gpgKey}\n                            isLoading={gpgLoading}\n                            spellCheck={false}\n                            onDataChange={(value) => updateVariable(index, { gpgKey: value })}\n                            onPaste={async ({ clipboardData }) => {\n                              const value = clipboardData.getData('text');\n                              if (isValidURL(value)) {\n                                updateVariable(index, { gpgLoading: true });\n                                const gpgData = await fetchGpgKey(value);\n                                updateVariable(index, {\n                                  gpgKey: gpgData,\n                                  gpgLoading: false,\n                                  ...(!hidePackageVerification && gpgKey === '' && !!value\n                                    ? {\n                                        metadataVerification:\n                                          !!validationList?.[index]?.url\n                                            ?.metadata_signature_present,\n                                      }\n                                    : {}),\n                                });\n                              }\n                            }}\n                            onTextChange={(value) =>\n                              updateVariable(index, {\n                                gpgKey: value,\n                                ...(!hidePackageVerification && gpgKey === '' && !!value\n                                  ? {\n                                      metadataVerification:\n                                        !!validationList?.[index]?.url?.metadata_signature_present,\n                                    }\n                                  : {}),\n                              })\n                            }\n                            onClearClick={() => updateVariable(index, { gpgKey: '' })}\n                            dropzoneProps={{\n                              accept: '.txt',\n                              maxSize: 4096,\n                              onDropRejected: (e) => console.log('onDropRejected', e),\n                            }}\n                            allowEditingUploadedText\n                            browseButtonText='Upload'\n                          />\n                        </FormGroup>\n                        <Hide hide={hidePackageVerification || !gpgKey}>\n                          <FormGroup\n                            fieldId='metadataVerification'\n                            label='Use GPG key for'\n                            isInline\n                          >\n                            <Radio\n                              isDisabled={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              id='package-verification-only'\n                              name='package-verification-only'\n                              label='Package verification only'\n                              isChecked={!metadataVerification}\n                              onChange={() =>\n                                updateVariable(index, { metadataVerification: false })\n                              }\n                            />\n                            <ConditionalTooltip\n                              show={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                            >\n                              <Radio\n                                isDisabled={\n                                  validationList?.[index]?.url?.metadata_signature_present !== true\n                                }\n                                id='package-and-repository-verification'\n                                name='package-and-repository-verification'\n                                label='Package and metadata verification'\n                                isChecked={metadataVerification}\n                                onChange={() =>\n                                  updateVariable(index, { metadataVerification: true })\n                                }\n                              />\n                            </ConditionalTooltip>\n                          </FormGroup>\n                        </Hide>\n                      </Form>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              ),\n            )}\n          </TableComposable>\n        </Modal>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default AddContent;\n","import { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { global_success_color_100, global_danger_color_100 } from '@patternfly/react-tokens';\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  touched?: FormikTouched<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  errors?: FormikErrors<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  loading?: boolean;\n}\n\nconst ContentValidity = ({ touched, errors, loading }: Props) => {\n  const classes = useStyles();\n  const required = ['name', 'url'];\n  const allTouched = required.every((val) => touched?.[val]);\n  const noErrors = Object.values(errors || {}).every((val) => !val);\n  const hasTouchedError = Object.keys(touched || {})\n    .filter((key) => !!touched?.[key])\n    .some((key) => errors?.[key]);\n\n  switch (true) {\n    case loading:\n      return <Spinner size='md' />;\n    case allTouched && noErrors:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.green}>Valid</span>\n          </FlexItem>\n        </Flex>\n      );\n    case hasTouchedError:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.red}>Invalid</span>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ContentValidity;\n","import { isEmpty } from 'lodash';\nimport * as Yup from 'yup';\nimport { FormikErrors } from 'formik';\nimport { ValidationResponse } from '../../../../services/Content/ContentApi';\nimport ERROR_CODE from './httpErrorCodes.json';\n\nexport interface FormikValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  metadataVerification: boolean;\n  expanded: boolean;\n}\n\nexport const REGEX_URL =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nexport const isValidURL = (val: string) => {\n  const regex = new RegExp(REGEX_URL);\n  return val.match(regex);\n};\n\nexport const mapFormikToAPIValues = (formikValues: FormikValues[]) =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification }) => ({\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nconst mapNoMetaDataError = (validationData: ValidationResponse) =>\n  validationData.map(({ url, ...rest }) => ({\n    ...rest,\n    url: {\n      ...url,\n      error:\n        !url?.error && !url?.metadata_present\n          ? `Unable to retrieve YUM Metadata, Recieved HTTP ${url?.http_code}: ${\n              url ? ERROR_CODE[url.http_code] : ''\n            }`\n          : url?.error,\n    },\n  }));\n\nexport const mapValidationData = (\n  validationData: ValidationResponse,\n  formikErrors: FormikErrors<FormikValues | undefined>[],\n) => {\n  const updatedValidationData = mapNoMetaDataError(validationData);\n  const errors = updatedValidationData.map(({ name, url, gpg_key: gpgKey }, index: number) => ({\n    // First apply the errors found in the ValidationAPI\n    ...(name?.error ? { name: name?.error } : {}),\n    ...(url?.error ? { url: url?.error } : {}),\n    ...(gpgKey?.error ? { gpgKey: gpgKey?.error } : {}),\n    // Overwrite any errors with errors found within the UI itself\n    ...formikErrors[index],\n  }));\n\n  if (errors.every((err) => isEmpty(err))) {\n    return [];\n  }\n\n  return errors;\n};\n\nexport const makeValidationSchema = () => {\n  // This adds the uniqueProperty function to the below schema validation\n  Yup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n      if (\n        this.parent.filter((v) => v !== value).some((v) => v[propertyName] === value[propertyName])\n      ) {\n        throw this.createError({\n          path: `${this.path}.${propertyName}`,\n        });\n      }\n\n      return true;\n    });\n  });\n\n  return Yup.array(\n    Yup.object()\n      .shape({\n        name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n        url: Yup.string().url('Invalid URL').required('Required'),\n      })\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore-next-line\n      .uniqueProperty('name', 'Names must be unique')\n      .uniqueProperty('url', 'Url\\'s must be unique'),\n  );\n};\n\nexport const magicURLList = [\n  'http://mirror.stream.centos.org/9-stream/BaseOS/x86_64/os/',\n  'http://mirror.stream.centos.org/SIGs/9/kmods/x86_64/packages-main/',\n  'http://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/',\n  'https://mirror.linux.duke.edu/pub/centos/8-stream/BaseOS/x86_64/os/',\n  'https://download-i2.fedoraproject.org/pub/epel/7/x86_64/',\n  'https://download-i2.fedoraproject.org/pub/epel/8/Everything/x86_64/',\n  'https://download-i2.fedoraproject.org/pub/epel/9/Everything/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el7/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el8/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.18/el9/x86_64/',\n  'http://yum.theforeman.org/katello/4.6/katello/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.4/el9/x86_64/',\n  'http://yum.theforeman.org/releases/3.4/el8/x86_64/',\n  'https://dl.google.com/linux/chrome/rpm/stable/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el8/x86_64/',\n  'http://yum.theforeman.org/client/3.3/el9/x86_64/',\n  'http://yum.theforeman.org/client/3.2/el7/x86_64/',\n  'http://yum.theforeman.org/client/3.2/el8/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/',\n  'https://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/7/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/8/x86_64/',\n  'http://download1.rpmfusion.org/nonfree/el/updates/9/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/7/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/8/x86_64/',\n  'http://download1.rpmfusion.org/free/el/updates/9/x86_64/',\n  'https://rpms.remirepo.net/enterprise/7/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/8/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/9/safe/x86_64/',\n  'https://rpms.remirepo.net/enterprise/7/remi/x86_64/',\n  'https://rpms.remirepo.net/enterprise/8/remi/x86_64/',\n  'http://yum.theforeman.org/pulpcore/3.9/el7/x86_64/',\n  'http://yum.theforeman.org/katello/nightly/katello/el8/x86_64/',\n];\n","import { ReactElement, useEffect, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100, global_secondary_color_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport { FilterData, RepositoryParamsResponse } from '../../../services/Content/ContentApi';\nimport { useQueryClient } from 'react-query';\nimport { REPOSITORY_PARAMS_KEY } from '../../../services/Content/ContentQueries';\nimport useDebounce from '../../../services/useDebounce';\nimport AddContent from './AddContent/AddContent';\nimport { createUseStyles } from 'react-jss';\nimport { isEmpty } from 'lodash';\nimport { useAppContext } from '../../../middleware/AppContext';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: FilterData) => void;\n  filterData: FilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nexport type Filters = 'Name/URL' | 'Version' | 'Architecture';\n\nconst ContentListFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const { rbac } = useAppContext();\n  const queryClient = useQueryClient();\n  const filters = ['Name/URL', 'Version', 'Architecture'];\n  const [filterType, setFilterType] = useState<Filters>('Name/URL');\n  const [versionNamesLabels, setVersionNamesLabels] = useState({});\n  const [archNamesLabels, setArchNamesLabels] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedVersions, setSelectedVersions] = useState<string[]>([]);\n  const [selectedArches, setSelectedArches] = useState<string[]>([]);\n\n  const { distribution_arches = [], distribution_versions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setSelectedVersions([]);\n    setSelectedArches([]);\n    setFilterData({ searchQuery: '', versions: [], arches: [] });\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.arches.length === 0 &&\n      filterData.versions.length === 0 &&\n      filterData.searchQuery === '' &&\n      (searchQuery !== '' || selectedArches.length !== 0 || selectedVersions.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    searchQuery: debouncedSearchQuery,\n    selectedVersions: debouncedSelectedVersions,\n    selectedArches: debouncedSelectedArches,\n  } = useDebounce({\n    searchQuery,\n    selectedVersions,\n    selectedArches,\n  });\n\n  const getLabels = (type: string, names: Array<string>) => {\n    const namesLabels = type === 'arch' ? distribution_arches : distribution_versions;\n    const labels: Array<string> = [];\n    names.forEach((name) => {\n      const found = namesLabels.find((v) => v.name === name);\n      if (found) {\n        labels.push(found.label);\n      }\n    });\n    return labels;\n  };\n\n  useEffect(() => {\n    setFilterData({\n      searchQuery: debouncedSearchQuery,\n      versions: getLabels('version', debouncedSelectedVersions),\n      arches: getLabels('arch', debouncedSelectedArches),\n    });\n  }, [debouncedSearchQuery, debouncedSelectedVersions, debouncedSelectedArches]);\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    if (\n      isEmpty(versionNamesLabels) &&\n      isEmpty(archNamesLabels) &&\n      distribution_arches.length !== 0 &&\n      distribution_versions.length !== 0\n    ) {\n      const arches = {};\n      const versions = {};\n      distribution_arches.forEach((arch) => (arches[arch.name] = arch.label));\n      distribution_versions.forEach((version) => (versions[version.name] = version.label));\n      setVersionNamesLabels(versions);\n      setArchNamesLabels(arches);\n    }\n  }, [distribution_arches, distribution_versions]);\n\n  const getSelectionByType = (): ReactElement => {\n    switch (filterType) {\n      case 'Name/URL':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='search'\n              ouiaId='filter_search'\n              placeholder='Filter by name/url'\n              value={searchQuery}\n              onChange={(value) => setSearchQuery(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Version':\n        return (\n          <DropdownSelect\n            toggleId='versionSelect'\n            ouiaId='filter_version'\n            isDisabled={isLoading}\n            options={Object.keys(versionNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedVersions}\n            setSelected={setSelectedVersions}\n            placeholderText='Filter by version'\n          />\n        );\n      case 'Architecture':\n        return (\n          <DropdownSelect\n            toggleId='archSelect'\n            ouiaId='filter_arch'\n            isDisabled={isLoading}\n            options={Object.keys(archNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedArches}\n            setSelected={setSelectedArches}\n            placeholderText='Filter by architecture'\n          />\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <FlexItem>\n            <DropdownSelect\n              toggleId='filterSelectionDropdown'\n              ouiaId='filter_type'\n              isDisabled={isLoading}\n              options={filters}\n              variant={SelectVariant.single}\n              selectedProp={filterType}\n              setSelected={setFilterType}\n              placeholderText='filter'\n              toggleIcon={<FilterIcon />}\n            />\n          </FlexItem>\n          <FlexItem>{getSelectionByType()}</FlexItem>\n        </InputGroup>\n      </FlexItem>\n      <FlexItem>\n        <ConditionalTooltip\n          content='You do not have the required permissions to perform this action.'\n          show={!rbac?.write}\n          setDisabled\n        >\n          <AddContent isDisabled={isLoading} />\n        </ConditionalTooltip>\n      </FlexItem>\n      <Hide hide={!(selectedVersions.length || selectedArches.length || searchQuery != '')}>\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Version'>\n            {selectedVersions.map((version) => (\n              <Chip\n                key={version}\n                onClick={() => deleteItem(version, selectedVersions, setSelectedVersions)}\n              >\n                {version}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Architecture'>\n            {selectedArches.map((arch) => (\n              <Chip key={arch} onClick={() => deleteItem(arch, selectedArches, setSelectedArches)}>\n                {arch}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {searchQuery !== '' && (\n            <ChipGroup categoryName='Name/URL'>\n              <Chip key='search_chip' onClick={() => setSearchQuery('')}>\n                {searchQuery}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedSearchQuery !== '' && searchQuery !== '') ||\n            !!selectedVersions?.length ||\n            !!selectedArches?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default ContentListFilters;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport {\n  global_Color_200,\n  global_success_color_100,\n  global_link_Color,\n} from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport useDebounce from '../../../../services/useDebounce';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useEditContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport { isValidURL, makeValidationSchema, mapValidationData } from '../AddContent/helpers';\nimport ContentValidity from '../AddContent/components/ContentValidity';\nimport {\n  EditContentProps,\n  FormikEditValues,\n  mapFormikToEditAPIValues,\n  mapToDefaultFormikValues,\n} from './helpers';\nimport { isEmpty, isEqual } from 'lodash';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../../middleware/AppContext';\n\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '12px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '12px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n});\n\nconst EditContentModal = ({ values, open, setClosed }: EditContentProps) => {\n  if (!open) return <></>;\n  const { hidePackageVerification } = useAppContext();\n  const initialValues = mapToDefaultFormikValues(values);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: values.map(() => ({ name: true, url: true })),\n    onSubmit: () => undefined,\n  });\n\n  const valuesHaveChanged = useMemo(\n    () => !isEqual(initialValues, formik.values),\n    [initialValues, formik.values],\n  );\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const closeModal = () => {\n    setClosed();\n    formik.resetForm();\n  };\n\n  const { mutateAsync: editContent, isLoading: isEditing } = useEditContentQuery(\n    queryClient,\n    mapFormikToEditAPIValues(formik.values),\n  );\n\n  const { fetchGpgKey } = useFetchGpgKey();\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikEditValues,\n  ): 'default' | 'success' | 'error' => {\n    const hasNotChanged = isEqual(initialValues[index]?.[field], formik.values[index]?.[field]);\n    const errors = !!formik.errors[index]?.[field];\n    switch (true) {\n      case errors:\n        return 'error';\n      case hasNotChanged:\n        return 'default';\n      case !hasNotChanged:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const debouncedValues = useDebounce(formik.values);\n\n  const { mutateAsync: validateContentList, data: validationList } = useValidateContentList();\n\n  useEffect(() => {\n    if (open)\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification, uuid }) => ({\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n          uuid,\n        })),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n        setChangeVerified(true);\n      });\n  }, [debouncedValues, values, open]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateArchAndVersion(index);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Edit custom repository'\n      ouiaId='edit_custom_repository'\n      help={\n        <Popover\n          headerContent={<div>Edit custom repository</div>}\n          bodyContent={<div>Use this form to edit the values of an existing repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Edit by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen={open}\n      onClose={closeModal}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='edit_modal_save'\n              variant='primary'\n              isLoading={isEditing}\n              isDisabled={\n                !changeVerified ||\n                !formik.isValid ||\n                isEditing ||\n                !valuesHaveChanged ||\n                !isEqual(formik.values, debouncedValues)\n              }\n              onClick={() => {\n                editContent().then(closeModal);\n              }}\n            >\n              {valuesHaveChanged ? 'Save changes' : 'No changes'}\n            </Button>\n            <Button key='cancel' variant='link' onClick={closeModal} ouiaId='edit_modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <TableComposable aria-label='Table for edit modal' ouiaId='edit_modal_table'>\n        <Hide hide={createDataLengthOf1}>\n          <Tbody isExpanded={allExpanded}>\n            <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n              <Td\n                className={classes.toggleAction}\n                isActionCell\n                expand={{\n                  rowIndex: 0,\n                  isExpanded: allExpanded,\n                }}\n              />\n              <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n            </Tr>\n          </Tbody>\n        </Hide>\n        {formik.values.map(\n          (\n            { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n            index,\n          ) => (\n            <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Hide hide={createDataLengthOf1}>\n                <Tr className={classes.colHeader}>\n                  <Td\n                    onClick={() => onToggle(index)}\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: index,\n                      isExpanded: expanded,\n                    }}\n                  />\n                  <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                    {name || 'New content'}\n                  </Td>\n                  <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                    <ContentValidity\n                      touched={formik.touched[index]}\n                      errors={formik.errors[index]}\n                    />\n                  </Td>\n                </Tr>\n              </Hide>\n              <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                <Td\n                  colSpan={4}\n                  className={\n                    createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                  }\n                >\n                  <Form>\n                    <FormGroup\n                      label='Name'\n                      isRequired\n                      fieldId='namegroup'\n                      validated={getFieldValidation(index, 'name')}\n                      helperTextInvalid={formik.errors[index]?.name}\n                    >\n                      <TextInput\n                        isRequired\n                        id='name'\n                        name='name'\n                        label='Name'\n                        ouiaId='input_name'\n                        type='text'\n                        validated={getFieldValidation(index, 'name')}\n                        onChange={(value) => {\n                          updateVariable(index, { name: value });\n                        }}\n                        value={name || ''}\n                        placeholder='Enter name'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='URL'\n                      isRequired\n                      fieldId='url'\n                      validated={getFieldValidation(index, 'url')}\n                      helperTextInvalid={formik.errors[index]?.url}\n                    >\n                      <TextInput\n                        isRequired\n                        type='url'\n                        validated={getFieldValidation(index, 'url')}\n                        onBlur={() => urlOnBlur(index)}\n                        onChange={(value) => {\n                          if (url !== value) {\n                            updateVariable(index, { url: value });\n                          }\n                        }}\n                        value={url || ''}\n                        placeholder='https://'\n                        id='url'\n                        name='url'\n                        label='Url'\n                        ouiaId='input_url'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict architecture'\n                      aria-label='restrict_to_architecture'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package architecture'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='arch'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_architecture'\n                        validated={getFieldValidation(index, 'arch')}\n                        menuAppendTo={document.body}\n                        toggleId={'archSelection' + index}\n                        options={Object.keys(distributionArches)}\n                        variant={SelectVariant.single}\n                        selectedProp={Object.keys(distributionArches).find(\n                          (key: string) => arch === distributionArches[key],\n                        )}\n                        setSelected={(value) =>\n                          updateVariable(index, { arch: distributionArches[value] })\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict OS version'\n                      aria-label='restrict_to_os_version'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package OS version'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='version'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_os_version'\n                        validated={getFieldValidation(index, 'versions')}\n                        menuAppendTo={document.body}\n                        toggleId={'versionSelection' + index}\n                        options={Object.keys(distributionVersions)}\n                        variant={SelectVariant.typeaheadMulti}\n                        selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                          versions?.includes(distributionVersions[key]),\n                        )}\n                        placeholderText={versions?.length ? '' : 'Any version'}\n                        setSelected={(value) => setVersionSelected(value, index)}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='GPG key'\n                      labelIcon={\n                        <Tooltip content='Optional: Add GPG Key file or URL'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='gpgKey'\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      helperTextInvalid={formik.errors[index]?.gpgKey}\n                    >\n                      <FileUpload\n                        id='gpgKey-uploader'\n                        aria-label='gpgkey_file_to_upload'\n                        type='text'\n                        filenamePlaceholder='Drag a file here or upload one'\n                        textAreaPlaceholder='Paste GPG key or URL here'\n                        value={gpgKey}\n                        isLoading={gpgLoading}\n                        validated={getFieldValidation(index, 'gpgKey')}\n                        spellCheck={false}\n                        onDataChange={(value) => updateVariable(index, { gpgKey: value })}\n                        onPaste={async ({ clipboardData }) => {\n                          const value = clipboardData.getData('text');\n                          if (isValidURL(value)) {\n                            updateVariable(index, { gpgLoading: true });\n                            const gpgData = await fetchGpgKey(value);\n                            updateVariable(index, {\n                              gpgKey: gpgData,\n                              gpgLoading: false,\n                              ...(!hidePackageVerification && gpgKey === '' && !!value\n                                ? {\n                                    metadataVerification:\n                                      !!validationList?.[index]?.url?.metadata_signature_present,\n                                  }\n                                : {}),\n                            });\n                          }\n                        }}\n                        onTextChange={(value) =>\n                          updateVariable(index, {\n                            gpgKey: value,\n                            ...(!hidePackageVerification && gpgKey === '' && !!value\n                              ? {\n                                  metadataVerification:\n                                    !!validationList?.[index]?.url?.metadata_signature_present,\n                                }\n                              : {}),\n                          })\n                        }\n                        onClearClick={() => updateVariable(index, { gpgKey: '' })}\n                        dropzoneProps={{\n                          accept: '.txt',\n                          maxSize: 4096,\n                          onDropRejected: (e) => console.log('onDropRejected', e),\n                        }}\n                        allowEditingUploadedText\n                        browseButtonText='Upload'\n                      />\n                    </FormGroup>\n                    <Hide hide={hidePackageVerification || !gpgKey}>\n                      <FormGroup fieldId='metadataVerification' label='Use GPG key for' isInline>\n                        <Radio\n                          isDisabled={\n                            validationList?.[index]?.url?.metadata_signature_present !== true\n                          }\n                          id='package verification only'\n                          name='package-verification-only'\n                          label='Package verification only'\n                          isChecked={!metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: false })}\n                        />\n                        <ConditionalTooltip\n                          show={validationList?.[index]?.url?.metadata_signature_present !== true}\n                          content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                        >\n                          <Radio\n                            isDisabled={\n                              validationList?.[index]?.url?.metadata_signature_present !== true\n                            }\n                            id='Package and metadata verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                        </ConditionalTooltip>\n                        <Hide\n                          hide={getFieldValidation(index, 'metadataVerification') !== 'success'}\n                        >\n                          <CheckCircleIcon noVerticalAlign color={green} />\n                        </Hide>\n                      </FormGroup>\n                    </Hide>\n                  </Form>\n                </Td>\n              </Tr>\n            </Tbody>\n          ),\n        )}\n      </TableComposable>\n    </Modal>\n  );\n};\n\nexport default EditContentModal;\n","import { ContentItem, EditContentRequest } from '../../../../services/Content/ContentApi';\nexport interface EditContentProps {\n  setClosed: () => void;\n  open: boolean;\n  values: ContentItem[];\n}\n\nexport interface FormikEditValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  metadataVerification: boolean;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  expanded: boolean;\n  uuid: string;\n}\n\nexport const mapFormikToEditAPIValues = (formikValues: FormikEditValues[]): EditContentRequest =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification, uuid }) => ({\n    uuid,\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nexport const mapToDefaultFormikValues = (values: EditContentProps['values']): FormikEditValues[] =>\n  values.map(\n    (\n      {\n        name,\n        url,\n        distribution_arch: arch,\n        distribution_versions: versions,\n        uuid,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n      },\n      index,\n    ) => ({\n      name,\n      url,\n      arch,\n      versions,\n      gpgKey,\n      gpgLoading: false,\n      metadataVerification,\n      expanded: index + 1 === values.length,\n      uuid,\n    }),\n  );\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon, PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\nimport AddContent from './AddContent/AddContent';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  notFiltered?: boolean;\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ notFiltered, clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={notFiltered ? PlusCircleIcon : SearchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        {notFiltered\n          ? 'No custom repositories'\n          : 'No custom repositories match the filter criteria'}\n      </Title>\n      <EmptyStateBody className={classes.emptStateBody}>\n        {notFiltered\n          ? 'To get started, create a custom repository'\n          : 'Clear all filters to show more results'}\n      </EmptyStateBody>\n      {notFiltered ? (\n        <AddContent />\n      ) : (\n        <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n          Clear all filters\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { Button, Text, Tooltip } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { global_disabled_color_100 } from '@patternfly/react-tokens';\nimport { useState } from 'react';\nimport Hide from '../../../components/Hide/Hide';\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport PackageModal from './PackageModal/PackageModal';\n\nconst useStyles = createUseStyles({\n  text: {\n    color: global_disabled_color_100.value,\n    width: 'fit-content',\n  },\n  link: {\n    padding: 0,\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n}\n\nconst PackageCount = ({ rowData }: Props) => {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  if (!rowData.package_count && rowData.status === 'Pending') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository has not been introspected yet'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  if (rowData.status === 'Invalid') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository is invalid.'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <>\n      <Hide hide={!modalOpen}>\n        <PackageModal rowData={rowData} closeModal={() => setModalOpen(false)} />\n      </Hide>\n      <Button\n        ouiaId='package_count_button'\n        variant='link'\n        onClick={() => setModalOpen(true)}\n        className={classes.link}\n      >\n        {rowData.package_count}\n      </Button>\n    </>\n  );\n};\n\nexport default PackageCount;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Modal,\n  ModalVariant,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_Color_200,\n} from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../../components/Hide/Hide';\nimport { ContentItem, PackageItem } from '../../../../services/Content/ContentApi';\nimport { useGetPackagesQuery } from '../../../../services/Content/ContentQueries';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../../../services/useDebounce';\nimport EmptyPackageState from './components/EmptyPackageState';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    paddingBottom: '8px',\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  closeModal: () => void;\n}\n\nexport default function PackageModal({\n  rowData: { name, uuid, package_count: packageCount },\n  closeModal,\n}: Props) {\n  const classes = useStyles();\n  const storedPerPage = Number(localStorage.getItem('packagePerPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Name', 'Version', 'Release', 'Arch'];\n\n  const columnSortAttributes = ['name', 'version', 'release', 'arch'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    error,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetPackagesQuery(uuid, packageCount, page, perPage, debouncedSearchQuery, sortString);\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem('packagePerPage', newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n\n  const {\n    data: packageList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const notLoadingZeroCount = !fetchingOrLoading && !count;\n\n  return (\n    <Modal\n      key={uuid}\n      position='top'\n      hasNoBodyWrapper\n      aria-label='RPM package modal'\n      ouiaId='rpm_package_modal'\n      variant={ModalVariant.medium}\n      title='Packages'\n      description={\n        <p className={classes.description}>\n          View list of packages for <b>{name}</b>\n        </p>\n      }\n      isOpen\n      onClose={closeModal}\n      footer={\n        <Button key='close' variant='secondary' onClick={closeModal}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <Flex className={classes.topContainer}>\n            <Flex>\n              <TextInput\n                id='search'\n                ouiaId='name_search'\n                placeholder='Filter by name'\n                value={searchQuery}\n                onChange={(value) => setSearchQuery(value)}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </Flex>\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rowSize={perPage}\n                colSize={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <TableComposable\n              aria-label='Custom repositories table'\n              ouiaId='packages_table'\n              variant='compact'\n            >\n              <Thead>\n                <Tr>\n                  {columnHeaders.map((columnHeader, index) => (\n                    <Th\n                      key={columnHeader + '_column'}\n                      sort={sortParams(index, notLoadingZeroCount)}\n                    >\n                      {columnHeader}\n                    </Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {packageList.map(({ name, version, release, arch }: PackageItem, index: number) => (\n                  <Tr key={name + index}>\n                    <Td>{name}</Td>\n                    <Td>{version}</Td>\n                    <Td>{release}</Td>\n                    <Td>{arch}</Td>\n                  </Tr>\n                ))}\n                <Hide hide={!notLoadingZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </TableComposable>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { Td, Tr } from '@patternfly/react-table';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    margin: 'auto',\n  },\n});\n\ninterface Props {\n  clearSearch: () => void;\n}\n\nexport default function EmptyPackageState({ clearSearch }: Props) {\n  const classes = useStyles();\n  return (\n    <Tr>\n      <Td colSpan={4}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title headingLevel='h2' size='lg'>\n              No packages match the search criteria\n            </Title>\n            <EmptyStateBody>Clear your current search to show more results</EmptyStateBody>\n            <Button ouiaId='clear_filters' variant='link' onClick={clearSearch}>\n              Clear search\n            </Button>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n}\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n} from '@patternfly/react-icons';\nimport { Flex, FlexItem, Tooltip } from '@patternfly/react-core';\nimport StatusText from './StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n  global_info_color_100,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\nconst blue = global_info_color_100.value;\n\ninterface Props {\n  status?: string;\n  error?: string;\n}\n\nconst StatusIcon = ({ status, error }: Props) => {\n  switch (status) {\n    case 'Valid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Valid</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Invalid':\n      return (\n        <Tooltip position='top-start' content={error}>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <ExclamationCircleIcon color={red} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='red'>Invalid</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    case 'Unavailable':\n      return (\n        <Tooltip position='top-start' content={error}>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <ExclamationTriangleIcon color={gold} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='gold'>Unavailable</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    case 'Pending':\n      return (\n        <Tooltip position='top-start' content='Repository has not been introspected yet'>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <InfoCircleIcon color={blue} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='blue'>Pending</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import { createUseStyles } from 'react-jss';\nimport {\n  global_danger_color_200,\n  global_info_color_200,\n  global_success_color_200,\n  global_warning_color_200,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_200.value;\nconst green = global_success_color_200.value;\nconst gold = global_warning_color_200.value;\nconst blue = global_info_color_200.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n  gold: { color: gold, fontWeight: 'bold', fontSize: '14px' },\n  blue: { color: blue, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  color: 'red' | 'green' | 'gold' | 'blue';\n  children?: React.ReactNode;\n}\n\nconst StatusText = ({ color, children }: Props) => {\n  const classes = useStyles();\n\n  return <span className={classes[color]}>{children}</span>;\n};\n\nexport default StatusText;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_disabled_color_100,\n} from '@patternfly/react-tokens';\nimport { useEffect, useState, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  usePopularRepositoriesQuery,\n  useDeleteContentItemMutate,\n  useRepositoryParams,\n  useAddContentQuery,\n} from '../../services/Content/ContentQueries';\nimport { CreateContentRequest } from '../../services/Content/ContentApi';\nimport Hide from '../../components/Hide/Hide';\nimport { useQueryClient } from 'react-query';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../services/useDebounce';\nimport EmptyTableState from './components/EmptyTableState';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n  addRepositoriesButton: {\n    marginLeft: '16px',\n  },\n  checkboxMinWidth: {\n    minWidth: '45px!important',\n  },\n  disabled: {\n    color: global_disabled_color_100.value,\n  },\n});\n\nconst PopularRepositoriesTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const [checkedRepositories, setCheckedRepositories] = useState<boolean[]>([]);\n  const [selectedData, setSelectedData] = useState<CreateContentRequest>([]);\n  const [selectedUUID, setSelectedUUID] = useState<string>('');\n\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('');\n  const debouncedSearchValue = useDebounce(searchValue);\n  const [perPage, setPerPage] = useState(storedPerPage);\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = usePopularRepositoriesQuery(page, perPage, { searchQuery: debouncedSearchValue });\n\n  const areAllReposAdded = useMemo(() => data.data.every(({ uuid }) => !!uuid), [data]);\n\n  const atLeastOneRepoChecked = useMemo(\n    () => checkedRepositories.some((val) => val),\n    [checkedRepositories],\n  );\n\n  const areAllReposSelected = useMemo(\n    () =>\n      !areAllReposAdded && data.data.every(({ uuid }, key) => !!uuid || checkedRepositories[key]),\n    [data, checkedRepositories, areAllReposAdded],\n  );\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const { mutateAsync: addContentQuery, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    selectedData,\n  );\n\n  useEffect(() => {\n    if (!isFetching) {\n      setSelectedData([]);\n      setSelectedUUID('');\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [isFetching]);\n\n  useEffect(() => {\n    if (data?.data?.length > 0 && checkedRepositories.length === 0) {\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [data?.data?.length]);\n\n  useEffect(() => {\n    if (selectedData.length != 0) {\n      addContentQuery().then(undefined, () => setSelectedData([]));\n    }\n  }, [selectedData]);\n\n  useEffect(() => {\n    if (selectedUUID) {\n      deleteItem(selectedUUID).then(undefined, () => setSelectedUUID(''));\n    }\n  }, [selectedUUID]);\n\n  const onSelectRepo = (index: number, value: boolean) => {\n    const newValue = checkedRepositories;\n    newValue[index] = value;\n    setCheckedRepositories([...newValue]);\n  };\n\n  const selectAllRepos = (_, checked: boolean) =>\n    setCheckedRepositories(data.data.map(() => checked));\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading || isAdding;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const addSelected = () => {\n    const request: CreateContentRequest = [];\n    checkedRepositories.forEach((checked, index) => {\n      if (checked && data?.data[index] && !data.data[index].uuid) {\n        const {\n          suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        } = data.data[index];\n\n        request.push({\n          name: suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        });\n      }\n    });\n    setSelectedData(request);\n  };\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: popularData = [],\n    meta: { count = 0 },\n  } = data;\n\n  return (\n    <Grid className={classes.mainContainer}>\n      <Flex className={classes.topContainer}>\n        <FlexItem>\n          <InputGroup>\n            <FlexItem>\n              <TextInput\n                isDisabled={isLoading}\n                id='search'\n                ouiaId='filter_search'\n                placeholder='Filter by name/url'\n                value={searchValue}\n                onChange={setSearchValue}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </FlexItem>\n            <FlexItem>\n              <ConditionalTooltip\n                content='You do not have the required permissions to perform this action.'\n                show={!rbac?.write}\n                setDisabled\n              >\n                <Button\n                  onClick={addSelected}\n                  className={classes.addRepositoriesButton}\n                  isDisabled={!atLeastOneRepoChecked}\n                >\n                  Add repositories\n                </Button>\n              </ConditionalTooltip>\n            </FlexItem>\n          </InputGroup>\n        </FlexItem>\n        <FlexItem>\n          <Hide hide={isLoading}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer100Height}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={isLoading}>\n        <>\n          <TableComposable\n            aria-label='Custom repositories table'\n            ouiaId='content_sources_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                <Hide hide={!rbac?.write}>\n                  <Th\n                    className={classes.checkboxMinWidth}\n                    select={{\n                      onSelect: selectAllRepos,\n                      isSelected: areAllReposSelected,\n                      isHeaderSelectDisabled: areAllReposAdded,\n                    }}\n                  />\n                </Hide>\n                {columnHeaders.map((columnHeader) => (\n                  <Th key={columnHeader + 'column'}>{columnHeader}</Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {popularData.map(\n                (\n                  {\n                    uuid,\n                    existing_name,\n                    suggested_name,\n                    url,\n                    distribution_arch,\n                    distribution_versions,\n                    gpg_key,\n                    metadata_verification,\n                  },\n                  key,\n                ) => (\n                  <Tr key={suggested_name + key}>\n                    <Hide hide={!rbac?.write}>\n                      <Td\n                        select={{\n                          rowIndex: key,\n                          onSelect: (_event, isSelecting) => onSelectRepo(key, isSelecting),\n                          isSelected: uuid ? false : checkedRepositories[key],\n                          disable: !!uuid,\n                        }}\n                      />\n                    </Hide>\n                    <Td>\n                      <>\n                        <Flex direction={{ default: 'row' }}>\n                          <FlexItem> {suggested_name}</FlexItem>\n                          {existing_name && suggested_name !== existing_name && (\n                            <FlexItem className={classes.disabled}>\n                              Current name: {existing_name}\n                            </FlexItem>\n                          )}\n                        </Flex>\n                        <UrlWithExternalIcon href={url} />\n                      </>\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td width={10}>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        {uuid ? (\n                          <Button\n                            isDisabled={uuid === selectedUUID}\n                            onClick={() => setSelectedUUID(uuid)}\n                            variant='danger'\n                          >\n                            Remove\n                          </Button>\n                        ) : (\n                          <Button\n                            variant='secondary'\n                            isDisabled={selectedData[key]?.url === url}\n                            onClick={() =>\n                              setSelectedData([\n                                {\n                                  name: suggested_name,\n                                  url,\n                                  distribution_versions,\n                                  distribution_arch,\n                                  gpg_key,\n                                  metadata_verification,\n                                },\n                              ])\n                            }\n                          >\n                            Add\n                          </Button>\n                        )}\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                ),\n              )}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={data.data.length !== 0 || isLoading}>\n        <EmptyTableState clearFilters={() => setSearchValue('')} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default PopularRepositoriesTable;\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        No popular repositories match the filter criteria\n      </Title>\n      <EmptyStateBody className={classes.emptStateBody}>\n        Clear all filters to show more results\n      </EmptyStateBody>\n      <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n        Clear search filter\n      </Button>\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { FunctionComponent, ReactElement, useMemo } from 'react';\nimport { Grid, Tab, Tabs, TabTitleText, Text } from '@patternfly/react-core';\nimport { Routes, Route, Navigate, useLocation, Link } from 'react-router-dom';\nimport { global_Color_100, global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { PageHeaderProps as _PageHeaderProps } from '@redhat-cloud-services/frontend-components/PageHeader/PageHeader';\nimport { createUseStyles } from 'react-jss';\nimport { ErrorPage } from './components/Error/ErrorPage';\nimport ContentListTable from './Pages/ContentListTable/ContentListTable';\nimport PopularRepositoriesTable from './Pages/PopularRepositoriesTable/PopularRepositoriesTable';\nimport { last } from 'lodash';\n\n// Example of how to extend inaccurately typed imports\nconst PageHeader = _PageHeader as FunctionComponent<PageHeaderProps>;\ninterface PageHeaderProps extends _PageHeaderProps {\n  children?: ReactElement | Array<ReactElement>;\n}\n\nconst useStyles = createUseStyles({\n  subtext: {\n    color: global_Color_100.value,\n    paddingTop: '8px',\n  },\n  tabs: {\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  tab: {\n    '& button': {\n      padding: 0, // Remove the default button padding\n    },\n  },\n  link: {\n    color: 'inherit', // Receives parent \"Tab\" components color\n    textDecoration: 'none',\n    padding: '8px 16px', // Add it back so that the entire clickable area works\n    '&:focus-visible': {\n      outlineOffset: '-6px',\n    },\n  },\n  containerMargin: {\n    margin: '24px',\n  },\n});\n\nexport const DEFAULT_ROUTE = '';\nexport const POPULAR_REPOSITORIES_ROUTE = 'popular-repositories';\n\nconst tabbedRoutes = [\n  {\n    title: 'Your repositories',\n    route: DEFAULT_ROUTE,\n    Element: ContentListTable,\n  },\n  {\n    title: 'Popular repositories',\n    route: POPULAR_REPOSITORIES_ROUTE,\n    Element: PopularRepositoriesTable,\n  },\n];\n\nexport default function MainRoutes() {\n  const classes = useStyles();\n  const { pathname, key: locationKey } = useLocation();\n\n  const currentRoute = useMemo(() => last(pathname.split('/')), [pathname]);\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title='Custom Repositories' />\n        <Text className={classes.subtext}>\n          View all custom repositories within your organization.\n        </Text>\n      </PageHeader>\n      <Tabs className={classes.tabs} ouiaId='routed-tabs' activeKey={currentRoute}>\n        {tabbedRoutes.map(({ title, route }) => (\n          <Tab\n            className={classes.tab}\n            keyParams={route}\n            key={route}\n            tabIndex={-1} // This prevents the tab from being targetable by accessibility features.\n            eventKey={route || 'content'} // the current route will be \"content\" when there is no route specified (root)\n            aria-label={title}\n            title={\n              <Link className={classes.link} accessKey={route} key={route} to={route}>\n                <TabTitleText>{title}</TabTitleText>\n              </Link>\n            }\n          />\n        ))}\n      </Tabs>\n      <Routes key={locationKey}>\n        {tabbedRoutes.map(({ route, Element }, key) => (\n          <Route\n            key={key.toString()}\n            path={route}\n            element={\n              <ErrorPage>\n                <Grid className={classes.containerMargin}>\n                  <Element />\n                </Grid>\n              </ErrorPage>\n            }\n          />\n        ))}\n        <Route path='*' element={<Navigate to={DEFAULT_ROUTE} replace />} />\n      </Routes>\n    </>\n  );\n}\n","import { Tooltip, TooltipProps } from '@patternfly/react-core';\nimport { cloneElement } from 'react';\n\ninterface Props extends TooltipProps {\n  show: boolean;\n  setDisabled?: boolean;\n}\n\nconst ConditionalTooltip = ({ show, children, setDisabled, ...rest }: Props) =>\n  show ? (\n    <Tooltip {...rest}>\n      <div>\n        {children && cloneElement(children, setDisabled ? { isDisabled: setDisabled } : undefined)}\n      </div>\n    </Tooltip>\n  ) : (\n    <>{children}</>\n  );\n\nexport default ConditionalTooltip;\n","import { Select, SelectOption, SelectProps, SelectVariant } from '@patternfly/react-core';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n\ninterface DropdownSelectProps extends Partial<SelectProps> {\n  options: Array<string>;\n  variant: SelectVariant.single | SelectVariant.checkbox | SelectVariant.typeaheadMulti;\n  selectedProp: any; // eslint-disable-line\n  setSelected: Dispatch<SetStateAction<any>>; // eslint-disable-line\n  toggleIcon?: React.ReactElement;\n  placeholderText?: string | React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst DropdownSelect = ({\n  options,\n  variant,\n  selectedProp,\n  setSelected,\n  toggleIcon,\n  placeholderText,\n  isDisabled,\n  ...rest\n}: DropdownSelectProps) => {\n  const selected = Array.isArray(selectedProp) ? selectedProp : [selectedProp];\n  const [isOpen, setIsOpen] = useState(false);\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const selectFrom = options.map((option, index) => (\n    <SelectOption key={option + index} value={option} />\n  ));\n\n  const onSelect = (_event, selection) => {\n    switch (variant) {\n      case SelectVariant.single:\n        setSelected(selection);\n        setIsOpen(false);\n        break;\n      case SelectVariant.typeaheadMulti:\n      case SelectVariant.checkbox:\n        if (Array.isArray(selectedProp)) {\n          if (selected.includes(selection)) {\n            const remaining = selected.filter((item) => item !== selection);\n            setSelected(remaining);\n            break;\n          }\n          setSelected([...selected, selection]);\n          break;\n        }\n        break;\n    }\n  };\n\n  return (\n    <Select\n      isDisabled={isDisabled}\n      variant={variant}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      placeholderText={placeholderText}\n      isCheckboxSelectionBadgeHidden\n      toggleIcon={toggleIcon}\n      {...rest}\n    >\n      {selectFrom}\n    </Select>\n  );\n};\n\nexport default DropdownSelect;\n","import { ErrorBoundary as _ErrorBoundaryPage } from '@redhat-cloud-services/frontend-components';\n\nconst ErrorBoundaryPage = _ErrorBoundaryPage as unknown as React.FunctionComponent<{\n  children?: React.ReactNode;\n  headerTitle: string;\n  errorTitle?: string;\n  errorDescription?: string;\n}>;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const ErrorPage = ({ children }: Props) => (\n  <ErrorBoundaryPage\n    headerTitle='Content Sources'\n    errorTitle='Unhandled error'\n    errorDescription='There was a problem trying to process your request'\n  >\n    {children}\n  </ErrorBoundaryPage>\n);\n","interface Props {\n  hide: boolean;\n  children?: React.ReactNode;\n}\n\nconst Hide = ({ hide, children }: Props) => (hide ? <></> : <>{children}</>);\n\nexport default Hide;\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Grid,\n  Title,\n} from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { FunctionComponent } from 'react';\n\nconst PageHeader = _PageHeader as unknown as FunctionComponent<{\n  children: React.ReactNode;\n}>;\n\nexport const NoPermissionsPage: React.FunctionComponent = () => (\n  <>\n    <PageHeader>\n      <PageHeaderTitle title='Repositories' />\n    </PageHeader>\n    <Grid style={{ margin: '24px' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={LockIcon} />\n        <Title headingLevel='h5' size='lg'>\n          You do not have access to Repositories\n        </Title>\n        <EmptyStateBody>\n          Contact your organization administrator(s) for more information.\n        </EmptyStateBody>\n      </EmptyState>\n    </Grid>\n  </>\n);\n","import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  link: {\n    alignItems: 'center',\n    display: 'flex',\n    width: 'fit-content', // Prevents overflow of clickable area beyond visible content\n  },\n  icon: {\n    marginLeft: '5px',\n  },\n});\n\ninterface Props {\n  href: string;\n}\n\nconst UrlWithExternalIcon = ({ href }: Props) => {\n  const classes = useStyles();\n  return (\n    <a href={href} className={classes.link} rel='noreferrer' target='_blank'>\n      {href} <ExternalLinkAltIcon className={classes.icon} />\n    </a>\n  );\n};\n\nexport default UrlWithExternalIcon;\n","import { createContext, ReactNode, useContext, useState } from 'react';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { Rbac } from '@redhat-cloud-services/insights-common-typescript';\n\nexport interface AppContextInterface {\n  hidePackageVerification: boolean;\n  rbac?: { read: boolean; write: boolean };\n  setRbac: (rbac?: Rbac) => void;\n}\n\nexport const AppContext = createContext({} as AppContextInterface);\n\nexport const ContextProvider = ({ children }: { children: ReactNode }) => {\n  const [rbac, setRbac] = useState<Rbac | undefined>(undefined);\n  const hidePackageVerification = useFlag('content-sources.hide-package-verification') || false;\n\n  return (\n    <AppContext.Provider\n      value={{\n        hidePackageVerification,\n        setRbac,\n        rbac: rbac\n          ? {\n              read: rbac?.hasPermission('content-sources', 'repositories', 'read'),\n              write: rbac?.hasPermission('content-sources', 'repositories', 'write'),\n            }\n          : undefined,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n","import axios from 'axios';\n\nexport interface ContentItem {\n  uuid: string;\n  name: string;\n  package_count: number;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  account_id: string;\n  org_id: string;\n  status: string;\n  last_introspection_error: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface PopularRepositories {\n  uuid: string;\n  existing_name: string;\n  suggested_name: string;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface CreateContentRequestItem {\n  name: string;\n  url: string;\n  distribution_versions?: Array<string>;\n  distribution_arch?: string;\n  gpg_key?: string;\n  metadata_verification?: boolean;\n}\n\nexport interface ErrorItem {\n  status: number;\n  title?: string;\n  detail?: string;\n}\n\nexport interface ErrorResponse {\n  errors: ErrorItem[];\n}\n\nexport type CreateContentRequestResponse = ContentItem[] | ErrorResponse;\n\nexport type CreateContentRequest = Array<CreateContentRequestItem>;\n\nexport interface EditContentRequestItem {\n  uuid: string;\n  name: string;\n  url: string;\n  distribution_arch: string;\n  distribution_versions: string[];\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport type EditContentRequest = Array<EditContentRequestItem>;\n\nexport type ContentList = Array<ContentItem>;\n\nexport type Links = {\n  first: string;\n  last: string;\n  next: string;\n  prev: string;\n};\n\nexport type Meta = {\n  count: number;\n  limit: number;\n  offset: number;\n};\n\nexport interface ContentListResponse {\n  data: ContentList;\n  links: Links;\n  meta: Meta;\n}\n\nexport interface PopularRepositoriesResponse {\n  data: PopularRepositories[];\n  links: Links;\n  meta: Meta;\n}\n\nexport interface RepositoryParamsResponse {\n  distribution_versions: Array<NameLabel>;\n  distribution_arches: Array<NameLabel>;\n}\n\nexport interface GpgKeyResponse {\n  gpg_key: string;\n}\n\nexport type NameLabel = {\n  name: string;\n  label: string;\n};\n\nexport type FilterData = {\n  searchQuery: string;\n  versions: Array<string>;\n  arches: Array<string>;\n};\n\nexport type ValidateItem = {\n  skipped: boolean;\n  valid: boolean;\n  error: string;\n};\n\nexport interface ValidationUrl extends ValidateItem {\n  http_code: number;\n  metadata_present: boolean;\n  metadata_signature_present: boolean;\n}\n\nexport type ValidationResponse = {\n  name?: ValidateItem;\n  url?: ValidationUrl;\n  distribution_versions?: ValidateItem;\n  distribution_arch?: ValidateItem;\n  gpg_key?: ValidateItem;\n}[];\n\nexport interface PackageItem {\n  arch: string;\n  checksum: string;\n  epoch: number;\n  name: string;\n  release: string;\n  summary: string;\n  uuid: string;\n  version: string;\n}\n\nexport type PackagesResponse = {\n  data: PackageItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport const getPopularRepositories: (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => Promise<PopularRepositoriesResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData?.searchQuery;\n  const versionParam = filterData?.versions?.join(',');\n  const archParam = filterData?.arches?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/popular_repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getContentList: (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => Promise<ContentListResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData.searchQuery;\n  const versionParam = filterData.versions.join(',');\n  const archParam = filterData.arches.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const deleteContentListItem: (uuid: string) => Promise<void> = async (uuid: string) => {\n  const { data } = await axios.delete(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const AddContentListItems: (\n  request: CreateContentRequest,\n) => Promise<CreateContentRequestResponse> = async (request) => {\n  const { data } = await axios.post('/api/content-sources/v1.0/repositories/bulk_create/', request);\n  return data;\n};\n\nexport const EditContentListItem: (request: EditContentRequestItem) => Promise<void> = async (\n  request,\n) => {\n  const { data } = await axios.patch(\n    `/api/content-sources/v1.0/repositories/${request.uuid}`,\n    request,\n  );\n  return data;\n};\n\nexport const getRepositoryParams: () => Promise<RepositoryParamsResponse> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/repository_parameters/');\n  return data;\n};\n\nexport const validateContentListItems: (\n  request: CreateContentRequest,\n) => Promise<ValidationResponse> = async (request) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1.0/repository_parameters/validate/',\n    request,\n  );\n  return data;\n};\n\nexport const getGpgKey: (url: string) => Promise<GpgKeyResponse> = async (url: string) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1/repository_parameters/external_gpg_key/',\n    { url },\n  );\n  return data;\n};\n\nexport const getPackages: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<PackagesResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/rpms?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { QueryClient, useMutation, useQuery } from 'react-query';\n\nimport { useNotification } from './../Notifications/Notifications';\nimport {\n  ContentListResponse,\n  deleteContentListItem,\n  getContentList,\n  RepositoryParamsResponse,\n  getRepositoryParams,\n  AddContentListItems,\n  CreateContentRequest,\n  FilterData,\n  validateContentListItems,\n  EditContentListItem,\n  EditContentRequest,\n  getGpgKey,\n  PackagesResponse,\n  getPackages,\n  ErrorResponse,\n  getPopularRepositories,\n  PopularRepositoriesResponse,\n  CreateContentRequestResponse,\n  ContentItem,\n} from './ContentApi';\n\nexport const CONTENT_LIST_KEY = 'CONTENT_LIST_KEY';\nexport const POPULAR_REPOSITORIES_LIST_KEY = 'POPULAR_REPOSITORIES_LIST_KEY';\nexport const REPOSITORY_PARAMS_KEY = 'REPOSITORY_PARAMS_KEY';\nexport const CREATE_PARAMS_KEY = 'CREATE_PARAMS_KEY';\nexport const PACKAGES_KEY = 'PACKAGES_KEY';\n\nexport const usePopularRepositoriesQuery = (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) =>\n  useQuery<PopularRepositoriesResponse>(\n    [POPULAR_REPOSITORIES_LIST_KEY, page, limit, sortBy, ...Object.values(filterData || {})], // NOTE: Update this if larger list!!!!\n    () => getPopularRepositories(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n\nexport const useContentListQuery = (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) =>\n  useQuery<ContentListResponse>(\n    [CONTENT_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getContentList(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n      //   optimisticResults: true,\n    },\n  );\n\nexport const useAddContentQuery = (queryClient: QueryClient, request: CreateContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => AddContentListItems(request), {\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n\n      notify({\n        variant: AlertVariant.success,\n        title:\n          request?.length > 1\n            ? `${request?.length} custom repositories added`\n            : `Custom repository \"${request?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err: { response?: { data: ErrorResponse } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.errors?.find(({ detail }) => {\n            if (detail) {\n              description = detail;\n              return true;\n            }\n          })?.detail;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error adding items to content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useEditContentQuery = (queryClient: QueryClient, request: EditContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => EditContentListItem(request[0]), {\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: `Successfully edited ${request.length} ${request.length > 1 ? 'items' : 'item'}`,\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err: { response?: { data: ErrorResponse } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.errors?.find(({ detail }) => {\n            if (detail) {\n              description = detail;\n              return true;\n            }\n          })?.detail;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error editing items on content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useValidateContentList = () => {\n  const { notify } = useNotification();\n  return useMutation((request: CreateContentRequest) => validateContentListItems(request), {\n    onError: (err) => {\n      const error = err as Error; // Forced Type\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error validating form fields',\n        description: error?.message,\n      });\n    },\n  });\n};\n\nexport const useDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    ...Object.values(filterData || {}),\n    sortString,\n  ];\n  const { notify } = useNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => uuid !== data.uuid),\n        meta: previousData.meta\n          ? {\n              ...previousData.meta,\n              count: previousData.meta.count ? previousData.meta.count - 1 : 1,\n            }\n          : undefined,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { previousData } = context as {\n        previousData: ContentListResponse;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = previousData?.meta?.count - 1;\n        }\n\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error deleting item from content list',\n          description: error?.message,\n        });\n      }\n    },\n  });\n};\n\nexport const useRepositoryParams = () =>\n  useQuery<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY, getRepositoryParams, {\n    keepPreviousData: true,\n    staleTime: Infinity,\n  });\n\nexport const useFetchGpgKey = () => {\n  const { notify } = useNotification();\n\n  const fetchGpgKey = async (url: string): Promise<string> => {\n    let gpg_key = url;\n    try {\n      const data = await getGpgKey(url);\n      gpg_key = data.gpg_key;\n    } catch ({ response = {} }) {\n      const { data } = response as { data: { message: string | undefined } | string };\n      const description = typeof data === 'string' ? data : data?.message;\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error fetching GPG key from provided URL',\n        description,\n      });\n    }\n    return gpg_key;\n  };\n\n  return { fetchGpgKey };\n};\n\nexport const useGetPackagesQuery = (\n  uuid: string,\n  count: number,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) =>\n  useQuery<PackagesResponse>(\n    [PACKAGES_KEY, uuid, page, limit, searchQuery, sortBy, count],\n    () => getPackages(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      onError: (err) => {\n        const { notify } = useNotification();\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error fetching rpm packages',\n          description: error?.message,\n        });\n      },\n    },\n  );\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\n\ninterface NotificationPayload {\n  title: React.ReactNode | string;\n  variant: AlertVariant;\n  description?: React.ReactNode | string;\n  dismissable?: boolean;\n}\n\nexport const useNotification = () => {\n  const dispatch = useDispatch();\n  const notify = (payload: NotificationPayload) => dispatch(addNotification(payload));\n\n  return { notify };\n};\n","import { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { initStore, restoreStore } from '@redhat-cloud-services/insights-common-typescript';\nimport { Middleware } from 'redux';\n\nexport const createStore = (...middleware: Middleware[]) => initStore({}, {}, ...middleware);\n\nexport const resetStore = () => restoreStore();\n"],"names":["getRegistry","appname","insights","useAppContext","rbac","setRbac","chrome","useEffect","register","notifications","notificationsReducer","auth","getUser","then","fetchRBAC","Bullseye","Spinner","size","read","NoPermissionsPage","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","logger","store","useMemo","resetStore","createStore","appAction","ContextProvider","QueryClientProvider","client","useStyles","createUseStyles","mainContainer","backgroundColor","global_BackgroundColor_100","value","display","flexDirection","mainContainer100Height","composes","minHeight","topContainer","justifyContent","padding","height","bottomContainer","invisible","opacity","classes","useQueryClient","storedPerPage","Number","localStorage","getItem","useState","page","setPage","perPage","setPerPage","editModalOpen","setEditModalOpen","editValues","setEditValues","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","searchQuery","versions","arches","filterData","setFilterData","clearFilters","notFiltered","length","useRepositoryParams","repositoryParamsLoading","repositoryParamsError","repositoryParamsIsError","data","distribution_versions","distribution_arches","distVersions","distArches","columnSortAttributes","sortString","useContentListQuery","isLoading","error","isError","isFetching","meta","count","limit","offset","useDeleteContentItemMutate","deleteItem","actionTakingPlace","onSetPage","_","newPage","onPerPageSelect","newPerPage","setItem","toString","columnHeaders","archesDisplay","arch","find","label","name","contentList","rowActions","useCallback","rowData","title","onClick","uuid","isDisabled","countIsZero","Grid","className","values","open","setClosed","Flex","FlexItem","hide","Pagination","id","widgetId","perPageComponent","itemCount","isCompact","SkeletonTable","rowSize","colSize","variant","TableVariant","compact","TableComposable","ouiaId","Thead","Tr","map","columnHeader","index","Th","sort","columnIndex","sortBy","direction","defaultDirection","onSort","_event","Tbody","url","distribution_arch","status","last_introspection_error","Td","href","filter","includes","join","isActionCell","content","show","write","setDisabled","ActionsColumn","items","PaginationVariant","bottom","description","paddingTop","color","global_Color_200","removeSideBorder","borderLeft","toggleAllRow","cursor","borderBottom","global_link_Color","fill","colHeader","mainContentCol","toggleAction","addRepositoryButton","marginBottom","saveButton","marginRight","transition","removeButton","singleContentCol","defaultValues","gpgKey","gpgLoading","expanded","metadataVerification","defaultTouchedState","isButtonDisabled","hidePackageVerification","isModalOpen","setIsModalOpen","changeVerified","setChangeVerified","formik","useFormik","initialValues","validateOnBlur","validateOnChange","validationSchema","makeValidationSchema","initialTouched","onSubmit","getQueryData","REPOSITORY_PARAMS_KEY","fetchGpgKey","useFetchGpgKey","distributionArches","distributionVersions","forEach","closeModal","setTouched","resetForm","useAddContentQuery","mapFormikToAPIValues","addContent","isAdding","createDataLengthOf1","allExpanded","some","updateVariable","newValue","callback","updatedData","setValues","getFieldValidation","field","errors","touched","setTouchedOnLastItemIfUntouchedAndCollapsed","lastItem","updatedTouched","debouncedValues","useValidateContentList","validateContentList","validationList","gpg_key","metadata_verification","validationData","validateForm","formikErrors","mappedErrorData","mapValidationData","setErrors","onToggle","Button","Modal","position","ModalVariant","medium","help","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","isOpen","onClose","footer","Stack","StackItem","isValid","vals","icon","PlusCircleIcon","newValues","Array","from","keys","Math","random","substring","magicURLList","isExpanded","expand","rowIndex","dataLabel","undefined","width","splice","newTouched","newErrors","removeRepository","MinusCircleIcon","colSpan","Form","FormGroup","isRequired","fieldId","validated","helperTextInvalid","TextInput","type","onChange","placeholder","onBlur","isValidURL","newVersion","isEmpty","isEqual","updateArchAndVersion","labelIcon","Tooltip","menuAppendTo","document","body","toggleId","options","Object","SelectVariant","single","selectedProp","key","setSelected","typeaheadMulti","placeholderText","valueToUpdate","val","setVersionSelected","FileUpload","filenamePlaceholder","textAreaPlaceholder","spellCheck","onDataChange","onPaste","clipboardData","getData","gpgData","metadata_signature_present","onTextChange","onClearClick","dropzoneProps","accept","maxSize","onDropRejected","e","console","log","allowEditingUploadedText","browseButtonText","isInline","Radio","isChecked","red","global_danger_color_100","green","global_success_color_100","fontWeight","fontSize","loading","allTouched","every","noErrors","hasTouchedError","alignContent","default","spacer","CheckCircleIcon","ExclamationCircleIcon","REGEX_URL","regex","RegExp","match","formikValues","updatedValidationData","rest","metadata_present","http_code","mapNoMetaDataError","err","Yup","addMethod","object","propertyName","message","this","test","parent","v","createError","path","array","shape","string","min","max","required","uniqueProperty","chipsContainer","marginLeft","searchInput","paddingRight","searchIcon","global_secondary_color_100","top","left","pointerEvents","filterType","setFilterType","versionNamesLabels","setVersionNamesLabels","archNamesLabels","setArchNamesLabels","setSearchQuery","selectedVersions","setSelectedVersions","selectedArches","setSelectedArches","debouncedSearchQuery","debouncedSelectedVersions","debouncedSelectedArches","getLabels","names","namesLabels","labels","found","push","chips","setChips","chip","version","InputGroup","toggleIcon","FilterIcon","SearchIcon","checkbox","getSelectionByType","fullWidth","ChipGroup","categoryName","Chip","mapToDefaultFormikValues","valuesHaveChanged","useEditContentQuery","mapFormikToEditAPIValues","editContent","isEditing","hasNotChanged","urlOnBlur","noVerticalAlign","emptyStateContainer","flexGrow","emptStateBody","EmptyState","EmptyStateVariant","full","EmptyStateIcon","Title","headingLevel","EmptyStateBody","text","global_disabled_color_100","link","modalOpen","setModalOpen","package_count","isContentLeftAligned","Text","paddingBottom","packageCount","useGetPackagesQuery","sortParams","packageList","fetchingOrLoading","notLoadingZeroCount","hasNoBodyWrapper","InnerScrollContainer","release","clearSearch","margin","gold","global_warning_color_100","blue","global_info_color_100","ExclamationTriangleIcon","InfoCircleIcon","global_danger_color_200","global_success_color_200","global_warning_color_200","global_info_color_200","children","addRepositoriesButton","checkboxMinWidth","minWidth","disabled","checkedRepositories","setCheckedRepositories","selectedData","setSelectedData","selectedUUID","setSelectedUUID","searchValue","setSearchValue","debouncedSearchValue","usePopularRepositoriesQuery","areAllReposAdded","atLeastOneRepoChecked","areAllReposSelected","addContentQuery","popularData","request","checked","suggested_name","select","onSelect","isSelected","isHeaderSelectDisabled","existing_name","isSelecting","disable","PageHeader","subtext","global_Color_100","tabs","tab","textDecoration","outlineOffset","containerMargin","DEFAULT_ROUTE","POPULAR_REPOSITORIES_ROUTE","tabbedRoutes","route","Element","useLocation","pathname","locationKey","currentRoute","last","split","PageHeaderTitle","Tabs","activeKey","Tab","keyParams","tabIndex","eventKey","Link","accessKey","to","TabTitleText","Routes","Route","element","ErrorPage","Navigate","replace","cloneElement","selected","isArray","setIsOpen","selectFrom","option","SelectOption","Select","selection","remaining","item","selections","isCheckboxSelectionBadgeHidden","ErrorBoundaryPage","headerTitle","errorTitle","errorDescription","style","LockIcon","alignItems","rel","target","ExternalLinkAltIcon","AppContext","createContext","useFlag","Provider","hasPermission","useContext","getPopularRepositories","versionParam","archParam","get","getContentList","deleteContentListItem","delete","AddContentListItems","post","EditContentListItem","patch","getRepositoryParams","validateContentListItems","getGpgKey","getPackages","CONTENT_LIST_KEY","POPULAR_REPOSITORIES_LIST_KEY","CREATE_PARAMS_KEY","PACKAGES_KEY","useQuery","keepPreviousData","staleTime","notify","useNotification","useMutation","onSuccess","hasPending","AlertVariant","success","invalidateQueries","onError","response","detail","danger","contentListKeyArray","onMutate","cancelQueries","previousData","setQueryData","_data","_variables","context","setQueriesData","_newData","Infinity","Promise","optimisticResults","dispatch","useDispatch","payload","addNotification","delay","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout","initStore","middleware","restoreStore"],"sourceRoot":""}