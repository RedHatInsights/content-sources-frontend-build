{"version":3,"file":"js/236.1690492935563.723af120fdbc19bce914.js","mappings":"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","sources":["webpack:///./fec.config.js","webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/Hooks/useDebounce.tsx","webpack:///./src/Hooks/useDeepCompareEffect.tsx","webpack:///./src/Hooks/useErrorNotification.tsx","webpack:///./src/Hooks/useNotification.tsx","webpack:///./src/Pages/AdminTaskTable/AdminTaskTable.tsx","webpack:///./src/Pages/AdminTaskTable/components/AdminTaskFilters.tsx","webpack:///./src/Pages/AdminTaskTable/components/StatusIcon.tsx","webpack:///./src/Pages/AdminTaskTable/components/ViewPayloadModal/ViewPayloadModal.tsx","webpack:///./src/Pages/AdminTaskTable/components/ViewPayloadModal/components/AdminTaskInfo.tsx","webpack:///./src/Pages/ContentListTable/ContentListTable.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/AddContent.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/components/ContentValidity.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/helpers.ts","webpack:///./src/Pages/ContentListTable/components/ContentListFilters.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentForm.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentModal.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/helpers.ts","webpack:///./src/Pages/ContentListTable/components/PackageCount.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/PackageModal.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/components/EmptyPackageState.tsx","webpack:///./src/Pages/ContentListTable/components/StatusIcon.tsx","webpack:///./src/Pages/PopularRepositoriesTable/PopularRepositoriesTable.tsx","webpack:///./src/Routes/Layout.tsx","webpack:///./src/Routes/index.tsx","webpack:///./src/Routes/useTabbedRoutes.tsx","webpack:///./src/components/ConditionalTooltip/ConditionalTooltip.tsx","webpack:///./src/components/DropdownSelect/DropdownSelect.tsx","webpack:///./src/components/EmptyTableState/EmptyTableState.tsx","webpack:///./src/components/Error/ErrorPage.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Hide/Hide.tsx","webpack:///./src/components/NoPermissionsPage/NoPermissionsPage.tsx","webpack:///./src/components/QuickStart/QuickStart.tsx","webpack:///./src/components/StatusText/StatusText.tsx","webpack:///./src/components/UrlWithLinkIcon/UrlWithLinkIcon.tsx","webpack:///./src/middleware/AppContext.tsx","webpack:///./src/services/AdminTasks/AdminTaskApi.ts","webpack:///./src/services/AdminTasks/AdminTaskQueries.ts","webpack:///./src/services/Content/ContentApi.ts","webpack:///./src/services/Content/ContentQueries.ts","webpack:///./src/services/Features/FeatureApi.ts","webpack:///./src/services/Features/FeatureQueries.ts","webpack:///./src/store/index.tsx"],"sourcesContent":["module.exports = {\n  debug: true,\n  useProxy: true,\n  proxyVerbose: true,\n  interceptChromeConfig: true,\n  sassPrefix: '.contentSources',\n  appUrl: '/settings/content',\n  routes: {\n    '/api/content-sources/': { host: 'http://localhost:8000' },\n  },\n  /**\n   * Add additional webpack plugins\n   */\n  plugins: [],\n  moduleFederation: {\n    exclude: ['react-router-dom'],\n    shared: [{ 'react-router-dom': { singleton: true } }],\n  },\n};\n","import '@redhat-cloud-services/frontend-components-utilities/styles/_all';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport Routes from './Routes';\nimport { useAppContext } from './middleware/AppContext';\nimport { NoPermissionsPage } from './components/NoPermissionsPage/NoPermissionsPage';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport default function App() {\n  const { rbac, isFetchingFeatures } = useAppContext();\n\n  switch (true) {\n    case !rbac || isFetchingFeatures:\n      return (\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      );\n    case rbac?.read:\n      return (\n        <>\n          <NotificationsPortal />\n          <Routes />\n        </>\n      );\n\n    default:\n      return <NoPermissionsPage />;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport * as Redux from 'redux';\n\nimport App from './App';\nimport { ContextProvider } from './middleware/AppContext';\nimport { createStore, resetStore } from './store';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false, // TODO: Have a conversation about this\n    },\n  },\n});\n\ninterface AppEntryProps {\n  logger?: Redux.Middleware;\n}\n\nexport default function AppEntry({ logger }: AppEntryProps) {\n  const store = React.useMemo(() => {\n    resetStore();\n    if (logger) {\n      return createStore(logger).store;\n    }\n    return createStore().store;\n  }, [logger]);\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('view-list-page');\n  }, []);\n\n  return (\n    <ReduxProvider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <ContextProvider>\n          <App />\n        </ContextProvider>\n      </QueryClientProvider>\n    </ReduxProvider>\n  );\n}\n","import { isEqual } from 'lodash';\nimport { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // We need to make sure that we compare-deep here as the default useEffect deps do not.\n    if (!isEqual(value, debouncedValue)) {\n      const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { isEqual } from 'lodash';\nimport { useEffect, useRef } from 'react';\n\nfunction useDeepCompareMemoize(value) {\n  const ref = useRef();\n  // it can be done by using useMemo as well\n  // but useRef is rather cleaner and easier\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nexport default function useDeepCompareEffect(callback, dependencies) {\n  useEffect(callback, dependencies.map(useDeepCompareMemoize));\n}\n","import { AlertVariant } from '@patternfly/react-core';\nimport useNotification from './useNotification';\n\nexport default function useErrorNotification() {\n  const { notify } = useNotification();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const errorNotifier = (defaultTitle: string, defaultDescription: string, err: any) => {\n    let title = defaultTitle;\n    let description = defaultDescription;\n\n    switch (typeof err?.response?.data) {\n      case 'string':\n        description = err.response.data;\n        break;\n      case 'object':\n        // Only show the first error\n        err?.response?.data.errors?.find(\n          ({ title: errTitle, detail, description: errDescription }) => {\n            if (errTitle) title = errTitle;\n            if (errDescription) description = errDescription;\n            if (detail) description = detail;\n            if (errTitle || errDescription || detail) return true;\n          },\n        );\n        break;\n      default:\n        break;\n    }\n\n    notify({\n      variant: AlertVariant.danger,\n      title,\n      description,\n    });\n  };\n\n  return errorNotifier;\n}\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\n\nexport interface NotificationPayload {\n  title: React.ReactNode | string;\n  variant: AlertVariant;\n  description?: React.ReactNode | string;\n  dismissable?: boolean;\n}\n\nexport default function useNotification() {\n  const dispatch = useDispatch();\n  const notify: (payload: NotificationPayload) => void = (payload: NotificationPayload) =>\n    dispatch(addNotification(payload));\n\n  return { notify };\n}\n","import {\n  Bullseye,\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from '../../components/EmptyTableState/EmptyTableState';\nimport AdminTaskFilters from './components/AdminTaskFilters';\nimport dayjs from 'dayjs';\nimport StatusIcon from './components/StatusIcon';\nimport { useAdminTaskListQuery } from '../../services/AdminTasks/AdminTaskQueries';\nimport { AdminTaskFilterData, AdminTask } from '../../services/AdminTasks/AdminTaskApi';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nexport const formatDate = (date: string): string => dayjs(date).format('DD MMM YYYY HH:mm UTCZ');\n\nconst perPageKey = 'adminTaskPerPage';\n\nconst AdminTaskTable = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(3); // queued_at\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('desc');\n\n  const [filterData, setFilterData] = useState<AdminTaskFilterData>({\n    accountId: '',\n    orgId: '',\n    statuses: [],\n  });\n\n  const clearFilters = () => setFilterData({ statuses: [], accountId: '', orgId: '' });\n\n  const notFiltered =\n    filterData.statuses.length === 0 && filterData.accountId === '' && filterData.orgId === '';\n\n  const columnSortAttributes = [\n    'org_id',\n    'account_id',\n    'typename',\n    'queued_at',\n    'started_at',\n    'finished_at',\n    'status',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useAdminTaskListQuery(page, perPage, filterData, sortString());\n\n  const actionTakingPlace = isFetching;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem(perPageKey, newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = ['Org ID', 'Account ID', 'Type', 'Queued At', 'Status'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n\n  const {\n    data: adminTaskList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const itemName = 'tasks';\n  const notFilteredBody = 'Certain actions, such as repository introspection, will start a task';\n\n  const countIsZero = count === 0;\n\n  if (countIsZero && notFiltered && !isLoading)\n    return (\n      <Bullseye data-ouia-safe={!actionTakingPlace} data-ouia-component-id='admin_task_list_page'>\n        <EmptyTableState\n          notFiltered={notFiltered}\n          clearFilters={clearFilters}\n          itemName={itemName}\n          notFilteredBody={notFilteredBody}\n        />\n      </Bullseye>\n    );\n\n  return (\n    <Grid\n      data-ouia-safe={!actionTakingPlace}\n      data-ouia-component-id='admin_task_list_page'\n      className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}\n    >\n      <Outlet />\n      <Flex className={classes.topContainer}>\n        <AdminTaskFilters\n          isLoading={isLoading}\n          setFilterData={(values) => {\n            setFilterData(values);\n            setPage(1);\n          }}\n          filterData={filterData}\n        />\n        <FlexItem>\n          <Hide hide={countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={countIsZero || isLoading}>\n        <>\n          <TableComposable\n            aria-label='Admin tasks table'\n            ouiaId='admin_tasks_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                {columnHeaders.map((columnHeader, index) => (\n                  <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                    {columnHeader}\n                  </Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {adminTaskList.map((adminTask: AdminTask) => (\n                <Tr key={adminTask.uuid}>\n                  <Td>{adminTask.org_id}</Td>\n                  <Td>{adminTask.account_id ? adminTask.account_id : 'Unknown'}</Td>\n                  <Td>{adminTask.typename}</Td>\n                  <Td>{formatDate(adminTask.queued_at)}</Td>\n                  <Td>\n                    <StatusIcon status={adminTask.status} />\n                  </Td>\n                  <Td width={10}>\n                    <Button\n                      onClick={() => navigate(adminTask.uuid)}\n                      variant='secondary'\n                      ouiaId='view_task_details'\n                    >\n                      View Details\n                    </Button>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero || isLoading}>\n        <EmptyTableState\n          notFiltered={notFiltered}\n          clearFilters={clearFilters}\n          itemName={itemName}\n          notFilteredBody={notFilteredBody}\n        />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default AdminTaskTable;\n","import { useEffect, useMemo, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100, global_secondary_color_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport useDebounce from '../../../Hooks/useDebounce';\nimport { createUseStyles } from 'react-jss';\nimport { AdminTaskFilterData } from '../../../services/AdminTasks/AdminTaskApi';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: AdminTaskFilterData) => void;\n  filterData: AdminTaskFilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nconst statusValues = ['Running', 'Failed', 'Completed', 'Canceled', 'Pending'];\nconst filters = ['Account ID', 'Org ID', 'Status'];\nexport type AdminTaskFilters = 'Account ID' | 'Org ID' | 'Status';\n\nconst AdminTaskFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const [filterType, setFilterType] = useState<AdminTaskFilters>('Account ID');\n  const [accountId, setAccountId] = useState('');\n  const [orgId, setOrgId] = useState('');\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n\n  const clearFilters = () => {\n    setAccountId('');\n    setOrgId('');\n    setSelectedStatuses([]);\n    setFilterData({ accountId: '', orgId: '', statuses: [] });\n  };\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.accountId === '' &&\n      filterData.orgId === '' &&\n      filterData.statuses.length === 0 &&\n      (accountId !== '' || orgId !== '' || selectedStatuses.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    accountId: debouncedAccountId,\n    orgId: debouncedOrgId,\n    selectedStatuses: debouncedSelectedStatuses,\n  } = useDebounce({\n    accountId,\n    orgId,\n    selectedStatuses,\n  });\n\n  useEffect(() => {\n    setFilterData({\n      accountId: debouncedAccountId,\n      orgId: debouncedOrgId,\n      statuses: debouncedSelectedStatuses,\n    });\n  }, [debouncedAccountId, debouncedOrgId, debouncedSelectedStatuses]);\n\n  const Filter = useMemo(() => {\n    switch (filterType) {\n      case 'Account ID':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='account-id'\n              ouiaId='filter_account_id'\n              placeholder='Filter by account ID'\n              value={accountId}\n              onChange={(value) => setAccountId(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Org ID':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='org-id'\n              ouiaId='filter_org_id'\n              placeholder='Filter by org ID'\n              value={orgId}\n              onChange={(value) => setOrgId(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Status':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter status'\n            toggleId='statusSelect'\n            ouiaId='filter_status'\n            isDisabled={isLoading}\n            options={statusValues}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedStatuses}\n            setSelected={setSelectedStatuses}\n            placeholderText='Filter by status'\n          />\n        );\n      default:\n        return <></>;\n    }\n  }, [filterType, isLoading, accountId, orgId, selectedStatuses]);\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <FlexItem>\n            <DropdownSelect\n              toggleId='filterSelectionDropdown'\n              ouiaId='filter_type'\n              isDisabled={isLoading}\n              options={filters}\n              variant={SelectVariant.single}\n              selectedProp={filterType}\n              setSelected={setFilterType}\n              placeholderText='filter'\n              toggleIcon={<FilterIcon />}\n            />\n          </FlexItem>\n          <FlexItem>{Filter}</FlexItem>\n        </InputGroup>\n      </FlexItem>\n      <Hide hide={!(accountId !== '' || orgId !== '' || selectedStatuses.length)}>\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Status'>\n            {selectedStatuses.map((status) => (\n              <Chip\n                key={status}\n                onClick={() => deleteItem(status, selectedStatuses, setSelectedStatuses)}\n              >\n                {status}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {orgId !== '' && (\n            <ChipGroup categoryName='Org ID'>\n              <Chip key='org_id_chip' onClick={() => setOrgId('')}>\n                {orgId}\n              </Chip>\n            </ChipGroup>\n          )}\n          {accountId !== '' && (\n            <ChipGroup categoryName='Account ID'>\n              <Chip key='account_id_chip' onClick={() => setAccountId('')}>\n                {accountId}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedAccountId !== '' && accountId !== '') ||\n            (debouncedOrgId !== '' && orgId !== '') ||\n            !!selectedStatuses?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default AdminTaskFilters;\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  BanIcon,\n  ClockIcon,\n} from '@patternfly/react-icons';\nimport { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport StatusText from '../../../components/StatusText/StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n} from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\nimport { AdminTask } from '../../../services/AdminTasks/AdminTaskApi';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\n\nconst useStyles = createUseStyles({\n  spinner: {\n    animationDuration: '6s !important',\n    margin: '-3px 0',\n  },\n});\n\ninterface Props {\n  status: AdminTask['status'];\n}\n\nconst StatusIcon = ({ status }: Props) => {\n  const classes = useStyles();\n\n  switch (status) {\n    case 'running':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <Spinner size='md' className={classes.spinner} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='blue'>Running</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'failed':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Failed</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'completed':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Completed</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'canceled':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <BanIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Canceled</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'pending':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ClockIcon color={gold} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='blue'>Pending</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import {\n  Bullseye,\n  Modal,\n  ModalVariant,\n  Spinner,\n  Tab,\n  TabContent,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { createRef, useEffect, useMemo, useState } from 'react';\nimport { AdminTask } from '../../../../services/AdminTasks/AdminTaskApi';\nimport AdminTaskInfo from './components/AdminTaskInfo';\nimport ReactJson from 'react-json-view';\nimport Hide from '../../../../components/Hide/Hide';\nimport { useFetchAdminTaskQuery } from '../../../../services/AdminTasks/AdminTaskQueries';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ADMIN_TASKS_ROUTE, BASE_ROUTE } from '../../../../Routes/useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  jsonView: {\n    fontSize: '12px',\n  },\n});\n\nexport interface TabData {\n  title: string;\n  data: object;\n  contentRef: React.RefObject<HTMLElement>;\n}\n\nconst ViewPayloadModal = () => {\n  const { taskUUID: uuid } = useParams();\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const onClose = () => navigate(`${BASE_ROUTE}/${ADMIN_TASKS_ROUTE}`);\n\n  const [activeTabKey, setActiveTabKey] = useState<string | number>(0);\n  const detailRef = createRef<HTMLElement>();\n\n  const { isLoading, isFetching, data: adminTask, isError } = useFetchAdminTaskQuery(uuid);\n\n  const handleTabClick = (_, tabIndex: string | number) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    if (isError) {\n      onClose();\n    }\n  }, [isError]);\n\n  const tabs = useMemo(() => {\n    const tabs: TabData[] = [];\n\n    if (!adminTask) {\n      return tabs;\n    }\n\n    if (adminTask.payload) {\n      tabs.push({\n        title: 'Payload',\n        data: adminTask.payload,\n        contentRef: createRef<HTMLElement>(),\n      });\n    }\n\n    switch (adminTask.typename) {\n      case 'snapshot': {\n        const pulp = adminTask.pulp;\n        if (pulp) {\n          if (pulp.sync) {\n            tabs.push({\n              title: 'Sync',\n              data: pulp.sync,\n              contentRef: createRef<HTMLElement>(),\n            });\n          }\n          if (pulp.distribution) {\n            tabs.push({\n              title: 'Distribution',\n              data: pulp.distribution,\n              contentRef: createRef<HTMLElement>(),\n            });\n          }\n          if (pulp.publication) {\n            tabs.push({\n              title: 'Publication',\n              data: pulp.publication,\n              contentRef: createRef<HTMLElement>(),\n            });\n          }\n        }\n        break;\n      }\n    }\n    return tabs;\n  }, [adminTask?.uuid, isFetching]);\n\n  const actionTakingPlace = isFetching && !!adminTask;\n  const showLoading = isLoading || !adminTask;\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      ouiaId='task_details'\n      ouiaSafe={!actionTakingPlace}\n      aria-label='Task details'\n      isOpen\n      onClose={onClose}\n      header={\n        <Hide hide={isLoading}>\n          <Tabs\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n            aria-label='Task tabs'\n            ouiaId='task-tabs'\n          >\n            <Tab\n              title={<TabTitleText>Task details</TabTitleText>}\n              aria-label='Task details'\n              ouiaId='task-details'\n              eventKey={0}\n              tabContentRef={detailRef}\n            />\n            {tabs.map(({ title, contentRef }) => (\n              <Tab\n                key={title}\n                eventKey={title}\n                aria-label={title}\n                ouiaId={title}\n                tabContentRef={contentRef}\n                title={<TabTitleText>{title}</TabTitleText>}\n              />\n            ))}\n          </Tabs>\n        </Hide>\n      }\n    >\n      <Hide hide={!showLoading}>\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      </Hide>\n      <Hide hide={showLoading}>\n        <TabContent aria-label='Task details' eventKey={0} id='task-details' ref={detailRef}>\n          {/* Hide \"isLoading\" checks if adminTask is not null */}\n          <AdminTaskInfo adminTask={adminTask as AdminTask} />\n        </TabContent>\n        {tabs.map(({ title, data, contentRef }, index) => (\n          <TabContent\n            key={index}\n            eventKey={title}\n            aria-label={title}\n            id={title}\n            className={classes.jsonView}\n            ref={contentRef}\n            hidden\n          >\n            <ReactJson\n              name={null}\n              src={data}\n              enableClipboard={(copy) => {\n                navigator.clipboard.writeText(JSON.stringify(copy.src, null, '\\t'));\n              }}\n            />\n          </TabContent>\n        ))}\n      </Hide>\n    </Modal>\n  );\n};\n\nexport default ViewPayloadModal;\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n} from '@patternfly/react-core';\nimport { AdminTask } from '../../../../../services/AdminTasks/AdminTaskApi';\nimport { formatDate } from '../../../AdminTaskTable';\n\nexport interface AdminTaskInfoProps {\n  adminTask: AdminTask;\n}\nconst AdminTaskInfo = ({ adminTask }: AdminTaskInfoProps) => (\n  <DescriptionList>\n    <DescriptionListGroup>\n      <DescriptionListTerm>UUID</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.uuid}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Account ID</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.account_id ? adminTask.account_id : 'Unknown; repository configuration deleted'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Org ID</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.org_id}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Type</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.typename}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Status</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.status}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Queued At</DescriptionListTerm>\n      <DescriptionListDescription>{formatDate(adminTask.queued_at)}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Started At</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.started_at ? formatDate(adminTask.started_at) : 'Not started'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Finished At</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.finished_at ? formatDate(adminTask.finished_at) : 'Not finished'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Error</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.error ? adminTask.error : 'None'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n  </DescriptionList>\n);\n\nexport default AdminTaskInfo;\n","import {\n  Bullseye,\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  ActionsColumn,\n  IAction,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  ContentItem,\n  FilterData,\n  IntrospectRepositoryRequestItem,\n} from '../../services/Content/ContentApi';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  useContentListQuery,\n  useDeleteContentItemMutate,\n  useIntrospectRepositoryMutate,\n  useRepositoryParams,\n} from '../../services/Content/ContentQueries';\nimport ContentListFilters from './components/ContentListFilters';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from '../../components/EmptyTableState/EmptyTableState';\nimport { useQueryClient } from 'react-query';\nimport StatusIcon from './components/StatusIcon';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport PackageCount from './components/PackageCount';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport dayjs from 'dayjs';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nconst perPageKey = 'contentListPerPage';\n\nconst ContentListTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const { rbac } = useAppContext();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const [filterData, setFilterData] = useState<FilterData>({\n    searchQuery: '',\n    versions: [],\n    arches: [],\n    statuses: [],\n  });\n\n  const clearFilters = () =>\n    setFilterData({ searchQuery: '', versions: [], arches: [], statuses: [] });\n\n  const notFiltered =\n    !filterData.arches?.length &&\n    filterData.searchQuery === '' &&\n    !filterData.versions?.length &&\n    !filterData.statuses?.length;\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const columnSortAttributes = [\n    'name',\n    'distribution_arch',\n    'distribution_versions',\n    'package_count',\n    'last_introspection_time',\n    'status',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useContentListQuery(page, perPage, filterData, sortString());\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  const { mutateAsync: introspectRepository, isLoading: isIntrospecting } =\n    useIntrospectRepositoryMutate(queryClient, page, perPage, filterData, sortString());\n\n  const introspectRepoForUuid = (uuid: string): Promise<void> =>\n    introspectRepository({ uuid: uuid, reset_count: true } as IntrospectRepositoryRequestItem);\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading || isIntrospecting;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem(perPageKey, newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = [\n    'Name',\n    'Architecture',\n    'Versions',\n    'Packages',\n    'Last Introspection',\n    'Status',\n  ];\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const lastIntrospectionDisplay = (time?: string): string =>\n    time === '' || time === undefined ? 'Never' : dayjs(time).fromNow();\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: contentList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const rowActions = useCallback(\n    (rowData: ContentItem): IAction[] => [\n      {\n        title: 'Delete',\n        onClick: () =>\n          deleteItem(rowData?.uuid).then(() => {\n            // If this is the last item on a page, go to previous page.\n            if (page > 1 && count / perPage + 1 >= page && (count - 1) % perPage === 0) {\n              setPage(page - 1);\n            }\n          }),\n      },\n      {\n        isDisabled: actionTakingPlace,\n        title: 'Edit',\n        onClick: () => {\n          navigate(`edit-repository?repoUUIDS=${rowData.uuid}`);\n        },\n      },\n      {\n        isDisabled: actionTakingPlace || rowData?.status == 'Retrying',\n        title: 'Introspect Now',\n        onClick: () => introspectRepoForUuid(rowData?.uuid),\n      },\n    ],\n    [actionTakingPlace],\n  );\n\n  const itemName = 'custom repositories';\n  const notFilteredBody = 'To get started, create a custom repository';\n\n  const countIsZero = count === 0;\n  const showLoader = countIsZero && notFiltered && !isLoading;\n  return (\n    <>\n      <Outlet />\n      {showLoader ? (\n        <Bullseye data-ouia-safe={!actionTakingPlace} data-ouia-component-id='content_list_page'>\n          <EmptyTableState\n            notFiltered={notFiltered}\n            clearFilters={clearFilters}\n            itemName={itemName}\n            notFilteredBody={notFilteredBody}\n            notFilteredButton={\n              <ConditionalTooltip\n                content='You do not have the required permissions to perform this action.'\n                show={!rbac?.write}\n                setDisabled\n              >\n                <Button\n                  id='createContentSourceButton'\n                  ouiaId='create_content_source'\n                  variant='primary'\n                  isDisabled={isLoading}\n                  onClick={() => navigate('add-repository')}\n                >\n                  Add repositories\n                </Button>\n              </ConditionalTooltip>\n            }\n          />\n        </Bullseye>\n      ) : (\n        <Grid\n          data-ouia-safe={!actionTakingPlace}\n          data-ouia-component-id='content_list_page'\n          className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}\n        >\n          <Flex className={classes.topContainer}>\n            <ContentListFilters\n              isLoading={isLoading}\n              setFilterData={(values) => {\n                setFilterData(values);\n                setPage(1);\n              }}\n              filterData={filterData}\n            />\n            <FlexItem>\n              <Hide hide={countIsZero}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  perPageComponent='button'\n                  isDisabled={isLoading}\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!isLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rowSize={perPage}\n                colSize={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={countIsZero || isLoading}>\n            <>\n              <TableComposable\n                aria-label='Custom repositories table'\n                ouiaId='custom_repositories_table'\n                variant='compact'\n              >\n                <Thead>\n                  <Tr>\n                    {columnHeaders.map((columnHeader, index) => (\n                      <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                        {columnHeader}\n                      </Th>\n                    ))}\n                    <Th>\n                      <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                    </Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {contentList.map((rowData: ContentItem) => {\n                    const {\n                      uuid,\n                      name,\n                      url,\n                      distribution_arch,\n                      distribution_versions,\n                      last_introspection_time,\n                    } = rowData;\n                    return (\n                      <Tr key={uuid}>\n                        <Td>\n                          {name}\n                          <br />\n                          <UrlWithExternalIcon href={url} />\n                        </Td>\n                        <Td>{archesDisplay(distribution_arch)}</Td>\n                        <Td>{versionDisplay(distribution_versions)}</Td>\n                        <Td>\n                          <PackageCount rowData={rowData} />\n                        </Td>\n                        <Td>{lastIntrospectionDisplay(last_introspection_time)}</Td>\n                        <Td>\n                          <StatusIcon rowData={rowData} retryHandler={introspectRepoForUuid} />\n                        </Td>\n                        <Td isActionCell>\n                          <ConditionalTooltip\n                            content={\n                              rowData?.status == 'Pending'\n                                ? 'Introspection is in progress'\n                                : 'You do not have the required permissions to perform this action.'\n                            }\n                            show={!rbac?.write || rowData?.status === 'Pending'}\n                            setDisabled\n                          >\n                            <ActionsColumn items={rowActions(rowData)} />\n                          </ConditionalTooltip>\n                        </Td>\n                      </Tr>\n                    );\n                  })}\n                </Tbody>\n              </TableComposable>\n              <Flex className={classes.bottomContainer}>\n                <FlexItem />\n                <FlexItem>\n                  <Pagination\n                    id='bottom-pagination-id'\n                    widgetId='bottomPaginationWidgetId'\n                    perPageComponent='button'\n                    itemCount={count}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    variant={PaginationVariant.bottom}\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </FlexItem>\n              </Flex>\n            </>\n          </Hide>\n          <Hide hide={!countIsZero || isLoading}>\n            <EmptyTableState\n              notFiltered={notFiltered}\n              clearFilters={clearFilters}\n              itemName={itemName}\n              notFilteredBody={notFilteredBody}\n              notFilteredButton={\n                <ConditionalTooltip\n                  content='You do not have the required permissions to perform this action.'\n                  show={!rbac?.write}\n                  setDisabled\n                >\n                  <Button\n                    id='createContentSourceButton'\n                    ouiaId='create_content_source'\n                    variant='primary'\n                    isDisabled={isLoading}\n                    onClick={() => navigate('add-repository')}\n                  >\n                    Add repositories\n                  </Button>\n                </ConditionalTooltip>\n              }\n            />\n          </Hide>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default ContentListTable;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  PlusCircleIcon,\n  MinusCircleIcon,\n} from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport { global_Color_200, global_link_Color } from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  isValidURL,\n  mapFormikToAPIValues,\n  mapValidationData,\n  makeValidationSchema,\n  FormikValues,\n  maxUploadSize,\n  failedFileUpload,\n  defaultFormikValues,\n} from './helpers';\nimport useNotification from '../../../../Hooks/useNotification';\nimport ContentValidity from './components/ContentValidity';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useAddContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { isEmpty, isEqual } from 'lodash';\nimport useDeepCompareEffect from '../../../../Hooks/useDeepCompareEffect';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport { useNavigate } from 'react-router-dom';\nimport { BASE_ROUTE } from '../../../../Routes/useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '8px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '8px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  addRepositoryButton: {\n    marginBottom: '24px',\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  removeButton: {\n    display: 'flex!important',\n    justifyContent: 'flex-end',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n  gpgKeyInput: {\n    '& .pf-c-form-control': {\n      backgroundPositionX: 'calc(100% - 1.3em)',\n    },\n  },\n});\n\nconst defaultTouchedState = { name: false, url: false, gpgKey: false };\n\nconst AddContent = () => {\n  const navigate = useNavigate();\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(['']);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: [defaultFormikValues],\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: [defaultTouchedState],\n    onSubmit: () => undefined,\n  });\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n\n  const { fetchGpgKey, isLoading: isFetchingGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const onClose = () => navigate(BASE_ROUTE);\n\n  const { mutateAsync: addContent, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    mapFormikToAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n    setTouchedOnLastItemIfUntouchedAndCollapsed();\n  };\n\n  const updateVariable = (index: number, newValue, callback?: () => void) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData).then(callback);\n  };\n\n  const addRepository = () => {\n    formik.setTouched([...formik.touched, defaultTouchedState]);\n    formik.setValues([\n      ...formik.values.map((vals) => ({ ...vals, expanded: false })),\n      defaultFormikValues,\n    ]);\n    setChangeVerified(false);\n  };\n\n  const removeRepository = (index: number) => {\n    const newValues = formik.values;\n    newValues.splice(index, 1);\n\n    const newTouched = formik.touched;\n    newTouched.splice(index, 1);\n\n    const newErrors = formik.errors;\n    newErrors.splice(index, 1);\n\n    formik.setTouched(newTouched);\n    formik.setErrors(newErrors);\n    formik.setValues(newValues);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikValues,\n  ): 'default' | 'success' | 'error' => {\n    const value = !!formik.values[index]?.[field];\n    const errors = !!formik.errors[index]?.[field];\n    const touched = formik.touched[index]?.[field];\n    switch (true) {\n      case errors && touched:\n        return 'error';\n      case field === 'gpgKey':\n        return 'default';\n      case value && touched:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  // The below sets the item as touched if the user closes the expansion without touching any fields\n  // This is to ensure that the user understands that the item needs attention (and is in error)\n  const setTouchedOnLastItemIfUntouchedAndCollapsed = () => {\n    const lastItem = formik.touched?.length - 1 || 0;\n    const { name, url } = formik.touched[lastItem] || {};\n    if (!name && !url) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[lastItem] = { ...updatedTouched[lastItem], name: true, url: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  let debouncedValues = useDebounce(formik.values) || []; // Initial value of []\n\n  const {\n    mutateAsync: validateContentList,\n    data: validationList,\n    isLoading: isValidating,\n  } = useValidateContentList();\n\n  useDeepCompareEffect(() => {\n    // If validate is getting called to often, we could useDeepCompare\n    if (debouncedValues.length !== formik.values.length) debouncedValues = formik.values;\n    const newTouchedValues = [...formik.touched];\n    validateContentList(\n      debouncedValues.map(({ name, url, gpgKey, metadataVerification }, index) => {\n        if (!newTouchedValues[index]?.name && name) {\n          newTouchedValues[index] = { ...newTouchedValues[index], name: true };\n        }\n        if (!newTouchedValues[index]?.url && url) {\n          newTouchedValues[index] = { ...newTouchedValues[index], url: true };\n        }\n        if (!newTouchedValues[index]?.gpgKey && gpgKey) {\n          newTouchedValues[index] = { ...newTouchedValues[index], gpgKey: true };\n        }\n        return {\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n        };\n      }),\n    ).then(async (validationData) => {\n      const formikErrors = await formik.validateForm(debouncedValues);\n      const mappedErrorData = mapValidationData(validationData, formikErrors);\n      formik.setErrors(mappedErrorData);\n      setChangeVerified(true);\n      formik.setTouched(newTouchedValues);\n    });\n  }, [debouncedValues, debouncedValues.length]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n      setTouchedOnLastItemIfUntouchedAndCollapsed();\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  const { notify } = useNotification();\n\n  const actionTakingPlace = isFetchingGpgKey || isAdding || isValidating || !changeVerified;\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Add custom repositories'\n      ouiaId='add_custom_repository'\n      ouiaSafe={!actionTakingPlace}\n      help={\n        <Popover\n          headerContent={<div>Add a custom repository</div>}\n          bodyContent={<div>Use this form to enter the values for a new repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Add by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen\n      onClose={onClose}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              isDisabled={!formik.isValid || formik.values.length > 19}\n              className={classes.addRepositoryButton}\n              variant='link'\n              onClick={addRepository}\n              icon={<PlusCircleIcon />}\n              ouiaId='add_row'\n            >\n              Add another repository\n            </Button>\n          </StackItem>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='modal_save'\n              variant='primary'\n              isLoading={actionTakingPlace}\n              isDisabled={\n                !changeVerified ||\n                !formik.isValid ||\n                actionTakingPlace ||\n                formik.values?.length !== debouncedValues?.length\n              }\n              onClick={() => addContent().then(onClose)}\n            >\n              Save\n            </Button>\n            <Button key='cancel' variant='link' onClick={onClose} ouiaId='modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <TableComposable aria-label='Table for repo add modal' ouiaId='add_modal_table'>\n        <Hide hide={createDataLengthOf1}>\n          <Tbody isExpanded={allExpanded}>\n            <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n              <Td\n                className={classes.toggleAction}\n                isActionCell\n                expand={{\n                  rowIndex: 0,\n                  isExpanded: allExpanded,\n                }}\n              />\n              <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n            </Tr>\n          </Tbody>\n        </Hide>\n        {formik.values.map(\n          (\n            { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n            index,\n          ) => (\n            <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Hide hide={createDataLengthOf1}>\n                <Tr className={classes.colHeader}>\n                  <Td\n                    onClick={() => onToggle(index)}\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: index,\n                      isExpanded: expanded,\n                    }}\n                  />\n                  <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                    {name || 'New content'}\n                  </Td>\n                  <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                    <ContentValidity\n                      touched={formik.touched[index]}\n                      errors={formik.errors[index]}\n                    />\n                  </Td>\n                  <Td dataLabel='removeButton' className={classes.removeButton}>\n                    <Hide hide={formik.values.length === 1}>\n                      <Button\n                        onClick={() => removeRepository(index)}\n                        variant='link'\n                        icon={<MinusCircleIcon />}\n                      >\n                        Remove\n                      </Button>\n                    </Hide>\n                  </Td>\n                </Tr>\n              </Hide>\n              <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                <Td\n                  colSpan={4}\n                  className={\n                    createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                  }\n                >\n                  <Form>\n                    <FormGroup\n                      label='Name'\n                      isRequired\n                      fieldId='namegroup'\n                      validated={getFieldValidation(index, 'name')}\n                      helperTextInvalid={formik.errors[index]?.name}\n                    >\n                      <TextInput\n                        isRequired\n                        id='name'\n                        name='name'\n                        label='Name'\n                        ouiaId='input_name'\n                        type='text'\n                        validated={getFieldValidation(index, 'name')}\n                        onChange={(value) => {\n                          updateVariable(index, { name: value });\n                        }}\n                        value={name || ''}\n                        placeholder='Enter name'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='URL'\n                      isRequired\n                      fieldId='url'\n                      validated={getFieldValidation(index, 'url')}\n                      helperTextInvalid={formik.errors[index]?.url}\n                    >\n                      <TextInput\n                        isRequired\n                        type='url'\n                        validated={getFieldValidation(index, 'url')}\n                        onBlur={() => updateArchAndVersion(index)}\n                        onChange={(value) => {\n                          if (url !== value) {\n                            updateVariable(index, { url: value });\n                          }\n                        }}\n                        value={url || ''}\n                        placeholder='https://'\n                        id='url'\n                        name='url'\n                        label='Url'\n                        ouiaId='input_url'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict architecture'\n                      aria-label='restrict_to_architecture'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package architecture'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='arch'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_architecture'\n                        menuAppendTo={document.body}\n                        toggleId={'archSelection' + index}\n                        options={Object.keys(distributionArches)}\n                        variant={SelectVariant.single}\n                        selectedProp={Object.keys(distributionArches).find(\n                          (key: string) => arch === distributionArches[key],\n                        )}\n                        setSelected={(value) =>\n                          updateVariable(index, { arch: distributionArches[value] })\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict OS version'\n                      aria-label='restrict_to_os_version'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package OS version'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='version'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_os_version'\n                        menuAppendTo={document.body}\n                        toggleId={'versionSelection' + index}\n                        options={Object.keys(distributionVersions)}\n                        variant={SelectVariant.typeaheadMulti}\n                        selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                          versions?.includes(distributionVersions[key]),\n                        )}\n                        placeholderText={versions?.length ? '' : 'Any version'}\n                        setSelected={(value) => setVersionSelected(value, index)}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='GPG key'\n                      labelIcon={\n                        <Tooltip content='Optional: Add GPG Key file or URL'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='gpgKey'\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      helperTextInvalid={formik.errors[index]?.gpgKey}\n                    >\n                      <FileUpload\n                        className={classes.gpgKeyInput}\n                        validated={getFieldValidation(index, 'gpgKey')}\n                        id='gpgKey-uploader'\n                        aria-label='gpgkey_file_to_upload'\n                        type='text'\n                        filenamePlaceholder='Drag a file here or upload one'\n                        textAreaPlaceholder='Paste GPG key or URL here'\n                        value={gpgKeyList[index]}\n                        isLoading={gpgLoading}\n                        spellCheck={false}\n                        onDataChange={(value) => updateGpgKey(index, value)}\n                        onTextChange={(value) => updateGpgKey(index, value)}\n                        onClearClick={() => updateGpgKey(index, '')}\n                        dropzoneProps={{\n                          maxSize: maxUploadSize,\n                          onDropRejected: (files) => failedFileUpload(files, notify),\n                        }}\n                        allowEditingUploadedText\n                        browseButtonText='Upload'\n                      />\n                    </FormGroup>\n                    <Hide hide={!gpgKey}>\n                      <FormGroup fieldId='metadataVerification' label='Use GPG key for' isInline>\n                        <Radio\n                          isDisabled={\n                            !validationList?.[index]?.url?.metadata_signature_present ||\n                            !!formik?.errors?.[index]?.gpgKey\n                          }\n                          id='package-verification-only'\n                          name='package-verification-only'\n                          label='Package verification only'\n                          isChecked={!metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: false })}\n                        />\n                        <ConditionalTooltip\n                          show={validationList?.[index]?.url?.metadata_signature_present === false}\n                          content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                        >\n                          <Radio\n                            isDisabled={\n                              !validationList?.[index]?.url?.metadata_signature_present ||\n                              !!formik?.errors?.[index]?.gpgKey\n                            }\n                            id='package-and-repository-verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                        </ConditionalTooltip>\n                      </FormGroup>\n                    </Hide>\n                  </Form>\n                </Td>\n              </Tr>\n            </Tbody>\n          ),\n        )}\n      </TableComposable>\n    </Modal>\n  );\n};\n\nexport default AddContent;\n","import { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { global_success_color_100, global_danger_color_100 } from '@patternfly/react-tokens';\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  touched?: FormikTouched<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  errors?: FormikErrors<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  loading?: boolean;\n}\n\nconst ContentValidity = ({ touched, errors, loading }: Props) => {\n  const classes = useStyles();\n  const required = ['name', 'url'];\n  const allTouched = required.every((val) => touched?.[val]);\n  const noErrors = Object.values(errors || {}).every((val) => !val);\n  const hasTouchedError = Object.keys(touched || {})\n    .filter((key) => !!touched?.[key])\n    .some((key) => errors?.[key]);\n\n  switch (true) {\n    case loading:\n      return <Spinner size='md' />;\n    case allTouched && noErrors:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.green}>Valid</span>\n          </FlexItem>\n        </Flex>\n      );\n    case hasTouchedError:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.red}>Invalid</span>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ContentValidity;\n","import { isEmpty } from 'lodash';\nimport * as Yup from 'yup';\nimport { FormikErrors } from 'formik';\nimport { ValidationResponse } from '../../../../services/Content/ContentApi';\nimport { NotificationPayload } from '../../../../Hooks/useNotification';\nimport ERROR_CODE from './httpErrorCodes.json';\nimport { AlertVariant } from '@patternfly/react-core';\n\nexport interface FormikValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  metadataVerification: boolean;\n  expanded: boolean;\n}\n\nexport const defaultFormikValues: FormikValues = {\n  name: '',\n  url: '',\n  gpgKey: '',\n  arch: 'any',\n  versions: ['any'],\n  gpgLoading: false,\n  expanded: true,\n  metadataVerification: false,\n};\n\nexport const REGEX_URL =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nexport const isValidURL = (val: string) => {\n  if (!val) return false;\n  const regex = new RegExp(REGEX_URL);\n  return val.match(regex);\n};\n\nexport const mapFormikToAPIValues = (formikValues: FormikValues[]) =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification }) => ({\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nconst mapNoMetaDataError = (validationData: ValidationResponse) =>\n  validationData.map(({ url, ...rest }) => ({\n    ...rest,\n    url: {\n      ...url,\n      error:\n        !url?.error && !url?.metadata_present\n          ? `Unable to retrieve YUM Metadata, Recieved HTTP ${url?.http_code}: ${\n              url ? ERROR_CODE[url.http_code] : ''\n            }`\n          : url?.error,\n    },\n  }));\n\nexport const mapValidationData = (\n  validationData: ValidationResponse,\n  formikErrors: FormikErrors<FormikValues | undefined>[],\n) => {\n  const updatedValidationData = mapNoMetaDataError(validationData);\n  const errors = updatedValidationData.map(({ name, url, gpg_key: gpgKey }, index: number) => ({\n    // First apply the errors found in the ValidationAPI\n    ...(name?.error ? { name: name?.error } : {}),\n    ...(url?.error ? { url: url?.error } : {}),\n    ...(gpgKey?.error ? { gpgKey: gpgKey?.error } : {}),\n    // Overwrite any errors with errors found within the UI itself\n    ...formikErrors[index],\n  }));\n\n  if (errors.every((err) => isEmpty(err))) {\n    return [];\n  }\n\n  return errors;\n};\n\nexport const makeValidationSchema = () => {\n  // This adds the uniqueProperty function to the below schema validation\n  Yup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n      if (\n        this.parent.filter((v) => v !== value).some((v) => v[propertyName] === value[propertyName])\n      ) {\n        throw this.createError({\n          path: `${this.path}.${propertyName}`,\n        });\n      }\n\n      return true;\n    });\n  });\n\n  return Yup.array(\n    Yup.object()\n      .shape({\n        name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n        url: Yup.string().url('Invalid URL').required('Required'),\n      })\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore-next-line\n      .uniqueProperty('name', 'Names must be unique')\n      .uniqueProperty('url', 'Url\\'s must be unique'),\n  );\n};\n\nexport const maxUploadSize = 32000;\nexport const failedFileUpload = (files: File[], notify: (arg: NotificationPayload) => void) => {\n  let description = 'Check the file and try again.';\n  if (files.length != 1) {\n    description = 'Only a single file upload is supported.';\n  } else if (files[0].size > maxUploadSize) {\n    description = 'The file is larger than ' + maxUploadSize + ' bytes.';\n  }\n  notify({\n    variant: AlertVariant.danger,\n    title: 'There was an problem uploading the file.',\n    description,\n  });\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100, global_secondary_color_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport { FilterData, RepositoryParamsResponse } from '../../../services/Content/ContentApi';\nimport { useQueryClient } from 'react-query';\nimport { REPOSITORY_PARAMS_KEY } from '../../../services/Content/ContentQueries';\nimport useDebounce from '../../../Hooks/useDebounce';\nimport { createUseStyles } from 'react-jss';\nimport { isEmpty } from 'lodash';\nimport { useAppContext } from '../../../middleware/AppContext';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: FilterData) => void;\n  filterData: FilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nconst statusValues = ['Invalid', 'Pending', 'Unavailable', 'Valid'];\nexport type Filters = 'Name/URL' | 'Version' | 'Architecture' | 'Status';\n\nconst ContentListFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const { rbac } = useAppContext();\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const filters = ['Name/URL', 'Version', 'Architecture', 'Status'];\n  const [filterType, setFilterType] = useState<Filters>('Name/URL');\n  const [versionNamesLabels, setVersionNamesLabels] = useState({});\n  const [archNamesLabels, setArchNamesLabels] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedVersions, setSelectedVersions] = useState<string[]>([]);\n  const [selectedArches, setSelectedArches] = useState<string[]>([]);\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n\n  const { distribution_arches = [], distribution_versions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setSelectedVersions([]);\n    setSelectedArches([]);\n    setSelectedStatuses([]);\n    setFilterData({ searchQuery: '', versions: [], arches: [], statuses: [] });\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.arches.length === 0 &&\n      filterData.versions.length === 0 &&\n      filterData.statuses.length === 0 &&\n      filterData.searchQuery === '' &&\n      (searchQuery !== '' ||\n        selectedArches.length !== 0 ||\n        selectedVersions.length !== 0 ||\n        selectedStatuses.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    searchQuery: debouncedSearchQuery,\n    selectedVersions: debouncedSelectedVersions,\n    selectedArches: debouncedSelectedArches,\n    selectedStatuses: debouncedSelectedStatuses,\n  } = useDebounce({\n    searchQuery,\n    selectedVersions,\n    selectedArches,\n    selectedStatuses,\n  });\n\n  const getLabels = (type: string, names: Array<string>) => {\n    const namesLabels = type === 'arch' ? distribution_arches : distribution_versions;\n\n    const labels: Array<string> = [];\n    names.forEach((name) => {\n      const found = namesLabels.find((v) => v.name === name);\n      if (found) {\n        labels.push(found.label);\n      }\n    });\n    return labels;\n  };\n\n  useEffect(() => {\n    setFilterData({\n      searchQuery: debouncedSearchQuery,\n      versions: getLabels('version', debouncedSelectedVersions),\n      arches: getLabels('arch', debouncedSelectedArches),\n      statuses: debouncedSelectedStatuses,\n    });\n  }, [\n    debouncedSearchQuery,\n    debouncedSelectedVersions,\n    debouncedSelectedArches,\n    debouncedSelectedStatuses,\n  ]);\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    if (\n      isEmpty(versionNamesLabels) &&\n      isEmpty(archNamesLabels) &&\n      distribution_arches.length !== 0 &&\n      distribution_versions.length !== 0\n    ) {\n      const arches = {};\n      const versions = {};\n      distribution_arches.forEach((arch) => (arches[arch.name] = arch.label));\n      distribution_versions.forEach((version) => (versions[version.name] = version.label));\n      setVersionNamesLabels(versions);\n      setArchNamesLabels(arches);\n    }\n  }, [distribution_arches, distribution_versions]);\n\n  const Filter = useMemo(() => {\n    switch (filterType) {\n      case 'Name/URL':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='search'\n              ouiaId='filter_search'\n              placeholder='Filter by name/url'\n              value={searchQuery}\n              onChange={(value) => setSearchQuery(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Version':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter version'\n            toggleId='versionSelect'\n            ouiaId='filter_version'\n            isDisabled={isLoading}\n            options={Object.keys(versionNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedVersions}\n            setSelected={setSelectedVersions}\n            placeholderText='Filter by version'\n          />\n        );\n      case 'Architecture':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter architecture'\n            toggleId='archSelect'\n            ouiaId='filter_arch'\n            isDisabled={isLoading}\n            options={Object.keys(archNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedArches}\n            setSelected={setSelectedArches}\n            placeholderText='Filter by architecture'\n          />\n        );\n      case 'Status':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter status'\n            toggleId='statusSelect'\n            ouiaId='filter_status'\n            isDisabled={isLoading}\n            options={statusValues}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedStatuses}\n            setSelected={setSelectedStatuses}\n            placeholderText='Filter by status'\n          />\n        );\n      default:\n        return <></>;\n    }\n  }, [\n    filterType,\n    isLoading,\n    searchQuery,\n    versionNamesLabels,\n    selectedVersions,\n    archNamesLabels,\n    selectedArches,\n    selectedStatuses,\n  ]);\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <FlexItem>\n            <DropdownSelect\n              toggleId='filterSelectionDropdown'\n              ouiaId='filter_type'\n              isDisabled={isLoading}\n              options={filters}\n              variant={SelectVariant.single}\n              selectedProp={filterType}\n              setSelected={setFilterType}\n              placeholderText='filter'\n              toggleIcon={<FilterIcon />}\n            />\n          </FlexItem>\n          <FlexItem>{Filter}</FlexItem>\n        </InputGroup>\n      </FlexItem>\n      <FlexItem>\n        <ConditionalTooltip\n          content='You do not have the required permissions to perform this action.'\n          show={!rbac?.write}\n          setDisabled\n        >\n          <Button\n            id='createContentSourceButton'\n            ouiaId='create_content_source'\n            variant='primary'\n            isDisabled={isLoading}\n            onClick={() => navigate('add-repository')}\n          >\n            Add repositories\n          </Button>\n        </ConditionalTooltip>\n      </FlexItem>\n      <Hide\n        hide={\n          !(\n            selectedVersions.length ||\n            selectedArches.length ||\n            selectedStatuses.length ||\n            searchQuery != ''\n          )\n        }\n      >\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Version'>\n            {selectedVersions.map((version) => (\n              <Chip\n                key={version}\n                onClick={() => deleteItem(version, selectedVersions, setSelectedVersions)}\n              >\n                {version}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Architecture'>\n            {selectedArches.map((arch) => (\n              <Chip key={arch} onClick={() => deleteItem(arch, selectedArches, setSelectedArches)}>\n                {arch}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Status'>\n            {selectedStatuses.map((status) => (\n              <Chip\n                key={status}\n                onClick={() => deleteItem(status, selectedStatuses, setSelectedStatuses)}\n              >\n                {status}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {searchQuery !== '' && (\n            <ChipGroup categoryName='Name/URL'>\n              <Chip key='search_chip' onClick={() => setSearchQuery('')}>\n                {searchQuery}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedSearchQuery !== '' && searchQuery !== '') ||\n            !!selectedVersions?.length ||\n            !!selectedArches?.length ||\n            !!selectedStatuses?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default ContentListFilters;\n","import {\n  FileUpload,\n  Form,\n  FormGroup,\n  Radio,\n  SelectVariant,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport {\n  global_Color_200,\n  global_success_color_100,\n  global_link_Color,\n} from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport {\n  ContentItem,\n  EditContentRequest,\n  RepositoryParamsResponse,\n} from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport {\n  failedFileUpload,\n  isValidURL,\n  makeValidationSchema,\n  mapValidationData,\n  maxUploadSize,\n} from '../AddContent/helpers';\nimport ContentValidity from '../AddContent/components/ContentValidity';\nimport { FormikEditValues, mapFormikToEditAPIValues, mapToDefaultFormikValues } from './helpers';\nimport { isEmpty, isEqual } from 'lodash';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport useNotification from '../../../../Hooks/useNotification';\nimport useDeepCompareEffect from '../../../../Hooks/useDeepCompareEffect';\n\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '12px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '12px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n  gpgKeyInput: {\n    '& .pf-c-form-control': {\n      backgroundPositionX: 'calc(100% - 1.3em)',\n    },\n  },\n});\nexport interface EditContentProps {\n  values: ContentItem[];\n  setIsLoading: (bool: boolean) => void;\n  setUpdatedValues: (values: EditContentRequest) => void;\n  setIsValid: (bool: boolean) => void;\n}\n\nconst EditContentForm = ({\n  setIsValid,\n  values,\n  setIsLoading,\n  setUpdatedValues,\n}: EditContentProps) => {\n  const initialValues = mapToDefaultFormikValues(values);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(\n    initialValues.map(({ gpgKey }) => gpgKey),\n  );\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: values.map(() => ({ name: true, url: true })),\n    onSubmit: () => undefined,\n  });\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n  const { fetchGpgKey, isLoading: isFetchingGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikEditValues,\n  ): 'default' | 'success' | 'error' => {\n    const hasNotChanged = isEqual(initialValues[index]?.[field], formik.values[index]?.[field]);\n    const errors = !!formik.errors[index]?.[field];\n    switch (true) {\n      case errors:\n        return 'error';\n      case hasNotChanged:\n        return 'default';\n      case !hasNotChanged:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const debouncedValues = useDebounce(formik.values);\n\n  const {\n    mutateAsync: validateContentList,\n    data: validationList,\n    isLoading: isValidating,\n  } = useValidateContentList();\n\n  useDeepCompareEffect(() => {\n    validateContentList(\n      debouncedValues.map(({ name, url, gpgKey, metadataVerification, uuid }) => ({\n        name,\n        url,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n        uuid,\n      })),\n    ).then(async (validationData) => {\n      const formikErrors = await formik.validateForm(debouncedValues);\n      const mappedErrorData = mapValidationData(validationData, formikErrors);\n      formik.setErrors(mappedErrorData);\n      setChangeVerified(true);\n    });\n  }, [debouncedValues, values, open]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateArchAndVersion(index);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  const { notify } = useNotification();\n\n  // Tell the parent modal that things are happening\n  const actionTakingPlace = isFetchingGpgKey || isValidating || !changeVerified;\n\n  useEffect(() => {\n    setIsLoading(actionTakingPlace);\n    setIsValid(formik.isValid);\n  }, [actionTakingPlace, formik.isValid]);\n\n  useEffect(() => {\n    setUpdatedValues(mapFormikToEditAPIValues(formik.values));\n  }, [formik.values]);\n\n  return (\n    <TableComposable aria-label='Table for edit modal' ouiaId='edit_modal_table'>\n      <Hide hide={createDataLengthOf1}>\n        <Tbody isExpanded={allExpanded}>\n          <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n            <Td\n              className={classes.toggleAction}\n              isActionCell\n              expand={{\n                rowIndex: 0,\n                isExpanded: allExpanded,\n              }}\n            />\n            <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n          </Tr>\n        </Tbody>\n      </Hide>\n      {formik.values.map(\n        (\n          { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n          index,\n        ) => (\n          <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n            <Hide hide={createDataLengthOf1}>\n              <Tr className={classes.colHeader}>\n                <Td\n                  onClick={() => onToggle(index)}\n                  className={classes.toggleAction}\n                  isActionCell\n                  expand={{\n                    rowIndex: index,\n                    isExpanded: expanded,\n                  }}\n                />\n                <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                  {name || 'New content'}\n                </Td>\n                <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                  <ContentValidity touched={formik.touched[index]} errors={formik.errors[index]} />\n                </Td>\n              </Tr>\n            </Hide>\n            <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Td\n                colSpan={4}\n                className={createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol}\n              >\n                <Form>\n                  <FormGroup\n                    label='Name'\n                    isRequired\n                    fieldId='namegroup'\n                    validated={getFieldValidation(index, 'name')}\n                    helperTextInvalid={formik.errors[index]?.name}\n                  >\n                    <TextInput\n                      isRequired\n                      id='name'\n                      name='name'\n                      label='Name'\n                      ouiaId='input_name'\n                      type='text'\n                      validated={getFieldValidation(index, 'name')}\n                      onChange={(value) => {\n                        updateVariable(index, { name: value });\n                      }}\n                      value={name || ''}\n                      placeholder='Enter name'\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='URL'\n                    isRequired\n                    fieldId='url'\n                    validated={getFieldValidation(index, 'url')}\n                    helperTextInvalid={formik.errors[index]?.url}\n                  >\n                    <TextInput\n                      isRequired\n                      type='url'\n                      validated={getFieldValidation(index, 'url')}\n                      onBlur={() => urlOnBlur(index)}\n                      onChange={(value) => {\n                        if (url !== value) {\n                          updateVariable(index, { url: value });\n                        }\n                      }}\n                      value={url || ''}\n                      placeholder='https://'\n                      id='url'\n                      name='url'\n                      label='Url'\n                      ouiaId='input_url'\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='Restrict architecture'\n                    aria-label='restrict_to_architecture'\n                    labelIcon={\n                      <Tooltip content='Optional: Select value to restrict package architecture'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                    }\n                    fieldId='arch'\n                  >\n                    <DropdownSelect\n                      ouiaId='restrict_to_architecture'\n                      validated={getFieldValidation(index, 'arch')}\n                      menuAppendTo={document.body}\n                      toggleId={'archSelection' + index}\n                      options={Object.keys(distributionArches)}\n                      variant={SelectVariant.single}\n                      selectedProp={Object.keys(distributionArches).find(\n                        (key: string) => arch === distributionArches[key],\n                      )}\n                      setSelected={(value) =>\n                        updateVariable(index, { arch: distributionArches[value] })\n                      }\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='Restrict OS version'\n                    aria-label='restrict_to_os_version'\n                    labelIcon={\n                      <Tooltip content='Optional: Select value to restrict package OS version'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                    }\n                    fieldId='version'\n                  >\n                    <DropdownSelect\n                      ouiaId='restrict_to_os_version'\n                      validated={getFieldValidation(index, 'versions')}\n                      menuAppendTo={document.body}\n                      toggleId={'versionSelection' + index}\n                      options={Object.keys(distributionVersions)}\n                      variant={SelectVariant.typeaheadMulti}\n                      selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                        versions?.includes(distributionVersions[key]),\n                      )}\n                      placeholderText={versions?.length ? '' : 'Any version'}\n                      setSelected={(value) => setVersionSelected(value, index)}\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='GPG key'\n                    labelIcon={\n                      <Tooltip content='Optional: Add GPG Key file or URL'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                    }\n                    fieldId='gpgKey'\n                    validated={getFieldValidation(index, 'gpgKey')}\n                    helperTextInvalid={formik.errors[index]?.gpgKey}\n                  >\n                    <FileUpload\n                      className={classes.gpgKeyInput}\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      id='gpgKey-uploader'\n                      aria-label='gpgkey_file_to_upload'\n                      type='text'\n                      filenamePlaceholder='Drag a file here or upload one'\n                      textAreaPlaceholder='Paste GPG key or URL here'\n                      value={gpgKeyList[index]}\n                      isLoading={gpgLoading}\n                      spellCheck={false}\n                      onDataChange={(value) => updateGpgKey(index, value)}\n                      onTextChange={(value) => updateGpgKey(index, value)}\n                      onClearClick={() => updateGpgKey(index, '')}\n                      dropzoneProps={{\n                        maxSize: maxUploadSize,\n                        onDropRejected: (files) => failedFileUpload(files, notify),\n                      }}\n                      allowEditingUploadedText\n                      browseButtonText='Upload'\n                    />\n                  </FormGroup>\n                  <Hide hide={!gpgKey}>\n                    <FormGroup fieldId='metadataVerification' label='Use GPG key for' isInline>\n                      <Radio\n                        isDisabled={\n                          validationList?.[index]?.url?.metadata_signature_present === false ||\n                          !!formik?.errors?.[index]?.gpgKey\n                        }\n                        id='package verification only'\n                        name='package-verification-only'\n                        label='Package verification only'\n                        isChecked={!metadataVerification}\n                        onChange={() => updateVariable(index, { metadataVerification: false })}\n                      />\n                      <ConditionalTooltip\n                        show={validationList?.[index]?.url?.metadata_signature_present === false}\n                        content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                      >\n                        <Radio\n                          isDisabled={\n                            validationList?.[index]?.url?.metadata_signature_present === false ||\n                            !!formik?.errors?.[index]?.gpgKey\n                          }\n                          id='Package and metadata verification'\n                          name='package-and-repository-verification'\n                          label='Package and metadata verification'\n                          isChecked={metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: true })}\n                        />\n                      </ConditionalTooltip>\n                      <Hide hide={getFieldValidation(index, 'metadataVerification') !== 'success'}>\n                        <CheckCircleIcon noVerticalAlign color={green} />\n                      </Hide>\n                    </FormGroup>\n                  </Hide>\n                </Form>\n              </Td>\n            </Tr>\n          </Tbody>\n        ),\n      )}\n    </TableComposable>\n  );\n};\n\nexport default EditContentForm;\n","import {\n  Bullseye,\n  Button,\n  Modal,\n  ModalVariant,\n  Popover,\n  Spinner,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { global_Color_200 } from '@patternfly/react-tokens';\nimport { useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  CONTENT_ITEM_KEY,\n  useEditContentQuery,\n  useFetchContent,\n} from '../../../../services/Content/ContentQueries';\nimport { useQueryClient } from 'react-query';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport EditContentForm from './EditContentForm';\nimport { EditContentRequest } from '../../../../services/Content/ContentApi';\nimport { isEqual } from 'lodash';\nimport { mapToContentItemsToEditContentRequest } from './helpers';\nimport { BASE_ROUTE } from '../../../../Routes/useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n});\n\nconst EditContentModal = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const queryClient = useQueryClient();\n  const { search } = useLocation();\n  const [initialLoad, setInitialLoad] = useState(true);\n  const [updatedValues, setUpdatedValues] = useState<EditContentRequest>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n\n  const uuids = new URLSearchParams(search).get('repoUUIDS')?.split(',') || [];\n\n  const { mutateAsync: editContent, isLoading: isEditing } = useEditContentQuery(\n    queryClient,\n    updatedValues,\n  );\n\n  const onClose = () => navigate(BASE_ROUTE);\n  const onSave = async () =>\n    editContent().then(() => {\n      onClose();\n      queryClient.invalidateQueries(CONTENT_ITEM_KEY);\n    });\n\n  const { data, isError } = useFetchContent(uuids);\n  const values = data ? [data] : [];\n\n  useEffect(() => {\n    if (data) {\n      setUpdatedValues(values); // This has to happen above the initial Load being set\n    }\n    if (isError) {\n      onClose();\n    }\n  }, [isError, !!data]);\n\n  useEffect(() => {\n    if (values.length) {\n      setInitialLoad(false);\n    }\n  }, [values]);\n\n  const valuesHaveChanged = !isEqual(mapToContentItemsToEditContentRequest(values), updatedValues);\n  const actionTakingPlace = isEditing || isLoading || initialLoad;\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Edit custom repository'\n      ouiaId='edit_custom_repository'\n      ouiaSafe={!actionTakingPlace}\n      help={\n        <Popover\n          headerContent={<div>Edit custom repository</div>}\n          bodyContent={<div>Use this form to edit the values of an existing repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Edit by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen\n      onClose={onClose}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='edit_modal_save'\n              variant='primary'\n              isLoading={actionTakingPlace}\n              isDisabled={actionTakingPlace || !valuesHaveChanged || !isValid}\n              onClick={onSave}\n            >\n              {valuesHaveChanged ? 'Save changes' : 'No changes'}\n            </Button>\n            <Button key='cancel' variant='link' onClick={onClose} ouiaId='edit_modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <Hide hide={!initialLoad}>\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      </Hide>\n      <Hide hide={initialLoad}>\n        <EditContentForm\n          setIsValid={setIsValid}\n          values={values}\n          setIsLoading={setIsLoading}\n          setUpdatedValues={setUpdatedValues}\n        />\n      </Hide>\n    </Modal>\n  );\n};\n\nexport default EditContentModal;\n","import { ContentItem, EditContentRequest } from '../../../../services/Content/ContentApi';\n\nexport interface FormikEditValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  metadataVerification: boolean;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  expanded: boolean;\n  uuid: string;\n}\n\nexport const mapFormikToEditAPIValues = (formikValues: FormikEditValues[]): EditContentRequest =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification, uuid }) => ({\n    uuid,\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nexport const mapToDefaultFormikValues = (values: ContentItem[]): FormikEditValues[] =>\n  values.map(\n    (\n      {\n        name,\n        url,\n        distribution_arch: arch,\n        distribution_versions: versions,\n        uuid,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n      },\n      index,\n    ) => ({\n      name,\n      url,\n      arch,\n      versions,\n      gpgKey,\n      gpgLoading: false,\n      metadataVerification,\n      expanded: index + 1 === values.length,\n      uuid,\n    }),\n  );\n\nexport const mapToContentItemsToEditContentRequest = (values: ContentItem[]): EditContentRequest =>\n  mapFormikToEditAPIValues(mapToDefaultFormikValues(values));\n","import { Button, Text, Tooltip } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { global_disabled_color_100 } from '@patternfly/react-tokens';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ContentItem } from '../../../services/Content/ContentApi';\n\nconst useStyles = createUseStyles({\n  text: {\n    color: global_disabled_color_100.value,\n    width: 'fit-content',\n  },\n  link: {\n    padding: 0,\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n}\n\nconst PackageCount = ({ rowData }: Props) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  if (!rowData.package_count && rowData.status === 'Pending') {\n    return (\n      <Tooltip isContentLeftAligned content='Introspection is in progress'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  if (rowData.status === 'Invalid') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository is invalid.'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Button\n      ouiaId='package_count_button'\n      variant='link'\n      className={classes.link}\n      onClick={() => navigate(`${rowData.uuid}/packages`)}\n    >\n      {rowData.package_count}\n    </Button>\n  );\n};\n\nexport default PackageCount;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Modal,\n  ModalVariant,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_Color_200,\n} from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../../components/Hide/Hide';\nimport { PackageItem } from '../../../../services/Content/ContentApi';\nimport { useGetPackagesQuery } from '../../../../services/Content/ContentQueries';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport EmptyPackageState from './components/EmptyPackageState';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BASE_ROUTE } from '../../../../Routes/useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    paddingBottom: '8px',\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nconst perPageKey = 'packagePerPage';\n\nexport default function PackageModal() {\n  const classes = useStyles();\n  const { repoUUID: uuid } = useParams();\n\n  const navigate = useNavigate();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Name', 'Version', 'Release', 'Arch'];\n\n  const columnSortAttributes = ['name', 'version', 'release', 'arch'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetPackagesQuery(uuid as string, page, perPage, debouncedSearchQuery, sortString);\n\n  useEffect(() => {\n    if (isError) {\n      onClose();\n    }\n  }, [isError]);\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem(perPageKey, newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  const onClose = () => navigate(BASE_ROUTE);\n\n  const {\n    data: packageList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const notLoadingZeroCount = !fetchingOrLoading && !count;\n\n  return (\n    <Modal\n      key={uuid}\n      position='top'\n      hasNoBodyWrapper\n      aria-label='RPM package modal'\n      ouiaId='rpm_package_modal'\n      ouiaSafe={fetchingOrLoading}\n      variant={ModalVariant.medium}\n      title='Packages'\n      description={<p className={classes.description}>View list of packages</p>}\n      isOpen\n      onClose={onClose}\n      footer={\n        <Button key='close' variant='secondary' onClick={onClose}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <Flex className={classes.topContainer}>\n            <Flex>\n              <TextInput\n                id='search'\n                ouiaId='name_search'\n                placeholder='Filter by name'\n                value={searchQuery}\n                onChange={(value) => setSearchQuery(value)}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </Flex>\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rowSize={perPage}\n                colSize={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <TableComposable\n              aria-label='Custom repositories table'\n              ouiaId='packages_table'\n              variant='compact'\n            >\n              <Thead>\n                <Tr>\n                  {columnHeaders.map((columnHeader, index) => (\n                    <Th\n                      key={columnHeader + '_column'}\n                      sort={sortParams(index, notLoadingZeroCount)}\n                    >\n                      {columnHeader}\n                    </Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {packageList.map(({ name, version, release, arch }: PackageItem, index: number) => (\n                  <Tr key={name + index}>\n                    <Td>{name}</Td>\n                    <Td>{version}</Td>\n                    <Td>{release}</Td>\n                    <Td>{arch}</Td>\n                  </Tr>\n                ))}\n                <Hide hide={!notLoadingZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </TableComposable>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { Td, Tr } from '@patternfly/react-table';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    margin: 'auto',\n  },\n});\n\ninterface Props {\n  clearSearch: () => void;\n}\n\nexport default function EmptyPackageState({ clearSearch }: Props) {\n  const classes = useStyles();\n  return (\n    <Tr>\n      <Td colSpan={4}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title headingLevel='h2' size='lg'>\n              No packages match the search criteria\n            </Title>\n            <EmptyStateBody>Clear your current search to show more results</EmptyStateBody>\n            <Button ouiaId='clear_filters' variant='link' onClick={clearSearch}>\n              Clear search\n            </Button>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n}\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Popover,\n  Spinner,\n  Stack,\n  StackItem,\n  Tooltip,\n} from '@patternfly/react-core';\nimport StatusText from '../../../components/StatusText/StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n} from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\nimport dayjs from 'dayjs';\nimport relativeTime = require('dayjs/plugin/relativeTime');\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../middleware/AppContext';\ndayjs.extend(relativeTime);\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\n\nconst useStyles = createUseStyles({\n  spinner: {\n    animationDuration: '6s !important',\n    margin: '-3px 0',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  retryHandler?: (string) => Promise<void>;\n}\n\ninterface DescriptionProps {\n  error?: string;\n  count?: number;\n  time?: string;\n}\n\ninterface FooterProps {\n  retryHandler?: (string) => Promise<void>;\n  uuid: string;\n}\n\nconst PopoverDescription = ({ error, count, time }: DescriptionProps) => {\n  const timeText = time === '' || time === undefined ? 'Never' : dayjs(time).fromNow();\n  return (\n    <div>\n      {error}\n      <Flex>\n        <Stack className='pf-u-mt-sm'>\n          <StackItem className='pf-u-font-weight-bold'>Last introspection</StackItem>\n          <StackItem> {timeText} </StackItem>\n        </Stack>\n        <Stack className='pf-u-mt-sm'>\n          <StackItem className='pf-u-font-weight-bold'>Failed attempts</StackItem>\n          <StackItem> {count} </StackItem>\n        </Stack>\n      </Flex>\n    </div>\n  );\n};\n\nconst PopoverFooter = ({ retryHandler, uuid }: FooterProps) => {\n  const { rbac } = useAppContext();\n  return (\n    <Flex>\n      <ConditionalTooltip\n        content='You do not have the required permissions to perform this action.'\n        show={!rbac?.write}\n        setDisabled\n      >\n        <Button variant='link' isInline onClick={() => (retryHandler ? retryHandler(uuid) : null)}>\n          Retry\n        </Button>\n      </ConditionalTooltip>\n    </Flex>\n  );\n};\n\nconst StatusIcon = ({\n  rowData: {\n    uuid,\n    status,\n    failed_introspections_count: failedIntrospectionsCount,\n    last_introspection_time: lastIntrospectionTime,\n    last_introspection_error: error,\n  },\n  retryHandler,\n}: Props) => {\n  const classes = useStyles();\n\n  switch (status) {\n    case 'Valid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Valid</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Invalid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <Popover\n              aria-label='invalid popover'\n              alertSeverityVariant='danger'\n              headerContent='Invalid'\n              headerIcon={<ExclamationCircleIcon />}\n              bodyContent={\n                <PopoverDescription\n                  error={error}\n                  count={failedIntrospectionsCount}\n                  time={lastIntrospectionTime}\n                />\n              }\n              position='left'\n              footerContent={<PopoverFooter retryHandler={retryHandler} uuid={uuid} />}\n            >\n              <Button variant='link' isInline>\n                <StatusText color='red' isLink>\n                  Invalid\n                </StatusText>\n              </Button>\n            </Popover>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Unavailable':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationTriangleIcon color={gold} />\n          </FlexItem>\n          <FlexItem>\n            <Popover\n              aria-label='unavailable popover'\n              alertSeverityVariant='warning'\n              headerContent='Unavailable'\n              headerIcon={<ExclamationTriangleIcon />}\n              bodyContent={\n                <PopoverDescription\n                  error={error}\n                  count={failedIntrospectionsCount}\n                  time={lastIntrospectionTime}\n                />\n              }\n              position='left'\n              footerContent={<PopoverFooter retryHandler={retryHandler} uuid={uuid} />}\n            >\n              <StatusText color='gold' isLink>\n                Unavailable\n              </StatusText>\n            </Popover>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Pending':\n      return (\n        <Tooltip position='top-start' content='Repository is being introspected'>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <Spinner size='md' className={classes.spinner} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='blue'>In progress</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_disabled_color_100,\n} from '@patternfly/react-tokens';\nimport { useEffect, useState, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  usePopularRepositoriesQuery,\n  useDeletePopularRepositoryMutate,\n  useRepositoryParams,\n  useAddPopularRepositoryQuery,\n} from '../../services/Content/ContentQueries';\nimport { CreateContentRequest, FilterData } from '../../services/Content/ContentApi';\nimport Hide from '../../components/Hide/Hide';\nimport { useQueryClient } from 'react-query';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../Hooks/useDebounce';\nimport EmptyTableState from '../../components/EmptyTableState/EmptyTableState';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n  addRepositoriesButton: {\n    marginLeft: '16px',\n  },\n  checkboxMinWidth: {\n    minWidth: '45px!important',\n  },\n  disabled: {\n    color: global_disabled_color_100.value,\n  },\n});\n\nconst perPageKey = 'popularRepositoriesperPage';\n\nconst PopularRepositoriesTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const [checkedRepositories, setCheckedRepositories] = useState<boolean[]>([]);\n  const [selectedData, setSelectedData] = useState<CreateContentRequest>([]);\n  const [selectedUUID, setSelectedUUID] = useState<string>('');\n\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('');\n  const debouncedSearchValue = useDebounce(searchValue);\n  const [perPage, setPerPage] = useState(storedPerPage);\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = usePopularRepositoriesQuery(page, perPage, {\n    searchQuery: !searchValue ? searchValue : debouncedSearchValue,\n  });\n\n  const areAllReposAdded = useMemo(() => data.data.every(({ uuid }) => !!uuid), [data]);\n\n  const atLeastOneRepoChecked = useMemo(\n    () => checkedRepositories.some((val) => val),\n    [checkedRepositories],\n  );\n\n  const areAllReposSelected = useMemo(\n    () =>\n      !areAllReposAdded && data.data.every(({ uuid }, key) => !!uuid || checkedRepositories[key]),\n    [data, checkedRepositories, areAllReposAdded],\n  );\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const { mutateAsync: addContentQuery, isLoading: isAdding } = useAddPopularRepositoryQuery(\n    queryClient,\n    selectedData,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n  );\n\n  useEffect(() => {\n    if (!isFetching) {\n      setSelectedData([]);\n      setSelectedUUID('');\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [isFetching]);\n\n  useEffect(() => {\n    if (data?.data?.length > 0 && checkedRepositories.length === 0) {\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [data?.data?.length]);\n\n  useEffect(() => {\n    if (selectedData.length != 0) {\n      addContentQuery().then(\n        () => setSelectedData([]),\n        () => setSelectedData([]),\n      );\n    }\n  }, [selectedData]);\n\n  useEffect(() => {\n    if (selectedUUID) {\n      deleteItem(selectedUUID).then(undefined, () => setSelectedUUID(''));\n    }\n  }, [selectedUUID]);\n\n  const onSelectRepo = (index: number, value: boolean) => {\n    const newValue = checkedRepositories;\n    newValue[index] = value;\n    setCheckedRepositories([...newValue]);\n  };\n\n  const selectAllRepos = (_, checked: boolean) =>\n    setCheckedRepositories(data.data.map(() => checked));\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeletePopularRepositoryMutate(\n    queryClient,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading || isAdding;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem(perPageKey, newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const addSelected = () => {\n    const request: CreateContentRequest = [];\n    checkedRepositories.forEach((checked, index) => {\n      if (checked && data?.data[index] && !data.data[index].uuid) {\n        const {\n          suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        } = data.data[index];\n\n        request.push({\n          name: suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        });\n      }\n    });\n    setSelectedData(request);\n  };\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: popularData = [],\n    meta: { count = 0 },\n  } = data;\n\n  const countIsZero = !data?.data?.length;\n\n  return (\n    <Grid\n      data-ouia-safe={!actionTakingPlace}\n      data-ouia-component-id='popular_repositories_page'\n      className={classes.mainContainer}\n    >\n      <Flex className={classes.topContainer}>\n        <FlexItem>\n          <InputGroup>\n            <FlexItem>\n              <TextInput\n                isDisabled={isLoading}\n                id='search'\n                ouiaId='popular_filter_search'\n                placeholder='Filter by name/url'\n                value={searchValue}\n                onChange={setSearchValue}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </FlexItem>\n            <FlexItem>\n              <ConditionalTooltip\n                content='You do not have the required permissions to perform this action.'\n                show={!rbac?.write}\n                setDisabled\n              >\n                <Button\n                  onClick={addSelected}\n                  className={classes.addRepositoriesButton}\n                  isDisabled={!atLeastOneRepoChecked}\n                  ouiaId='add_checked_repos'\n                >\n                  Add selected repositories\n                </Button>\n              </ConditionalTooltip>\n            </FlexItem>\n          </InputGroup>\n        </FlexItem>\n        <FlexItem>\n          <Hide hide={isLoading || countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={isLoading || countIsZero}>\n        <>\n          <TableComposable\n            aria-label='Popular repositories table'\n            ouiaId='popular_repos_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                <Hide hide={!rbac?.write}>\n                  <Th\n                    className={classes.checkboxMinWidth}\n                    select={{\n                      onSelect: selectAllRepos,\n                      isSelected: areAllReposSelected,\n                      isHeaderSelectDisabled: areAllReposAdded,\n                    }}\n                  />\n                </Hide>\n                {columnHeaders.map((columnHeader) => (\n                  <Th key={columnHeader + 'column'}>{columnHeader}</Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {popularData.map(\n                (\n                  {\n                    uuid,\n                    existing_name,\n                    suggested_name,\n                    url,\n                    distribution_arch,\n                    distribution_versions,\n                    gpg_key,\n                    metadata_verification,\n                  },\n                  key,\n                ) => (\n                  <Tr key={suggested_name + key}>\n                    <Hide hide={!rbac?.write}>\n                      <Td\n                        select={{\n                          rowIndex: key,\n                          onSelect: (_event, isSelecting) => onSelectRepo(key, isSelecting),\n                          isSelected: uuid ? false : checkedRepositories[key],\n                          disable: !!uuid,\n                        }}\n                      />\n                    </Hide>\n                    <Td>\n                      <>\n                        <Flex direction={{ default: 'row' }}>\n                          <FlexItem> {suggested_name}</FlexItem>\n                          {existing_name && suggested_name !== existing_name && (\n                            <FlexItem className={classes.disabled}>\n                              Current name: {existing_name}\n                            </FlexItem>\n                          )}\n                        </Flex>\n                        <UrlWithExternalIcon href={url} />\n                      </>\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td width={10}>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        {uuid ? (\n                          <Button\n                            isDisabled={uuid === selectedUUID || isAdding}\n                            onClick={() => setSelectedUUID(uuid)}\n                            variant='danger'\n                            ouiaId='remove_popular_repo'\n                          >\n                            Remove\n                          </Button>\n                        ) : (\n                          <Button\n                            variant='secondary'\n                            isDisabled={selectedData[key]?.url === url || isFetching || isDeleting}\n                            onClick={() => {\n                              const newData: CreateContentRequest = [];\n                              newData[key] = {\n                                name: suggested_name,\n                                url,\n                                distribution_versions,\n                                distribution_arch,\n                                gpg_key,\n                                metadata_verification,\n                              };\n                              setSelectedData(newData);\n                            }}\n                            ouiaId='add_popular_repo'\n                          >\n                            Add\n                          </Button>\n                        )}\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                ),\n              )}\n            </Tbody>\n          </TableComposable>\n          <Hide hide={isLoading || countIsZero}>\n            <Flex className={classes.bottomContainer}>\n              <FlexItem />\n              <FlexItem>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </FlexItem>\n            </Flex>\n          </Hide>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero}>\n        <EmptyTableState\n          clearFilters={() => setSearchValue('')}\n          notFiltered={!debouncedSearchValue} // The second item prevents the clear button from being removed abruptly\n          itemName='popular repositories'\n        />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default PopularRepositoriesTable;\n","import { useMemo } from 'react';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { Link, Outlet } from 'react-router-dom';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\n\nimport { createUseStyles } from 'react-jss';\nimport { last } from 'lodash';\nimport Header from '../components/Header/Header';\nimport QuickStart from '../components/QuickStart/QuickStart';\nimport { TabbedRoute } from './useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  tabs: {\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  tab: {\n    '& button': {\n      padding: 0, // Remove the default button padding\n    },\n  },\n  link: {\n    color: 'inherit', // Receives parent \"Tab\" components color\n    textDecoration: 'none',\n    padding: '8px 16px', // Add it back so that the entire clickable area works\n    '&:focus-visible': {\n      outlineOffset: '-6px',\n    },\n  },\n});\n\nexport default function Layout({ pathname, tabs }: { pathname: string; tabs: TabbedRoute[] }) {\n  const classes = useStyles();\n  const currentRoute = useMemo(() => last(pathname.split('/')), [pathname]);\n\n  return (\n    <>\n      <Header />\n      <Tabs className={classes.tabs} ouiaId='routed-tabs' activeKey={currentRoute}>\n        {tabs.map(({ title, route }) => (\n          <Tab\n            className={classes.tab}\n            keyParams={route}\n            key={route}\n            tabIndex={-1} // This prevents the tab from being targetable by accessibility features.\n            eventKey={route || 'content'} // the current route will be \"content\" when there is no route specified (root)\n            aria-label={title}\n            ouiaId={title}\n            title={\n              <Link className={classes.link} accessKey={route} key={route} to={route}>\n                <TabTitleText>{title}</TabTitleText>\n              </Link>\n            }\n          />\n        ))}\n      </Tabs>\n      <QuickStart />\n      {/* Render the app routes via the Layout Outlet */}\n      <Outlet />\n    </>\n  );\n}\n","import { Grid } from '@patternfly/react-core';\nimport { Routes, Route, Navigate, useLocation } from 'react-router-dom';\n\nimport { createUseStyles } from 'react-jss';\nimport { ErrorPage } from '../components/Error/ErrorPage';\nimport Layout from './Layout';\nimport { useMemo } from 'react';\nimport useTabbedRoutes, { DEFAULT_ROUTE } from './useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  containerMargin: {\n    margin: '24px',\n  },\n});\n\nexport default function MainRoutes() {\n  const classes = useStyles();\n  const { pathname } = useLocation();\n  const key = useMemo(() => Math.random(), []);\n  const tabs = useTabbedRoutes();\n\n  return (\n    <Routes key={key}>\n      <Route element={<Layout pathname={pathname} tabs={tabs} />}>\n        {tabs.map(({ route, Element, ChildRoutes }, key) => (\n          <Route\n            key={key.toString()}\n            path={route}\n            element={\n              <ErrorPage>\n                <Grid className={classes.containerMargin}>\n                  <Element />\n                </Grid>\n              </ErrorPage>\n            }\n          >\n            {ChildRoutes?.map(({ path, Element: ChildRouteElement }, childRouteKey) => (\n              <Route key={childRouteKey} path={path} element={<ChildRouteElement />} />\n            ))}\n          </Route>\n        ))}\n        <Route path='*' element={<Navigate to={DEFAULT_ROUTE} replace />} />\n      </Route>\n    </Routes>\n  );\n}\n","import { useMemo } from 'react';\nimport AdminTaskTable from '../Pages/AdminTaskTable/AdminTaskTable';\nimport ViewPayloadModal from '../Pages/AdminTaskTable/components/ViewPayloadModal/ViewPayloadModal';\nimport ContentListTable from '../Pages/ContentListTable/ContentListTable';\nimport AddContent from '../Pages/ContentListTable/components/AddContent/AddContent';\nimport EditContentModal from '../Pages/ContentListTable/components/EditContentModal/EditContentModal';\nimport PackageModal from '../Pages/ContentListTable/components/PackageModal/PackageModal';\nimport PopularRepositoriesTable from '../Pages/PopularRepositoriesTable/PopularRepositoriesTable';\nimport { useAppContext } from '../middleware/AppContext';\nimport fecConfig from '../../fec.config';\n\nexport const BASE_ROUTE = fecConfig.appUrl;\nexport const DEFAULT_ROUTE = '';\nexport const POPULAR_REPOSITORIES_ROUTE = 'popular-repositories';\nexport const ADMIN_TASKS_ROUTE = 'admin-tasks';\n\nexport type TabbedRoute = {\n  title: string;\n  route: string;\n  Element: () => JSX.Element;\n  ChildRoutes?: { path: string; Element: () => JSX.Element }[];\n};\n\nexport default function useTabbedRoutes(): TabbedRoute[] {\n  const { features, rbac } = useAppContext();\n  const hasWrite = rbac?.write;\n\n  // Wrap in a memo to prevent recalculation if values haven't changed.\n  const tabs = useMemo(\n    () => [\n      {\n        title: 'Your repositories',\n        route: DEFAULT_ROUTE,\n        Element: ContentListTable,\n        ChildRoutes: [\n          ...(hasWrite // These child routes are only permitted with rbac?.write access\n            ? [\n                { path: 'edit-repository', Element: EditContentModal },\n                { path: 'add-repository', Element: AddContent },\n              ]\n            : []),\n          { path: ':repoUUID/packages', Element: PackageModal },\n        ],\n      },\n      {\n        title: 'Popular repositories',\n        route: POPULAR_REPOSITORIES_ROUTE,\n        Element: PopularRepositoriesTable,\n      },\n      ...(features?.admintasks?.enabled && features.admintasks?.accessible\n        ? [\n            {\n              title: 'Admin tasks',\n              route: ADMIN_TASKS_ROUTE,\n              Element: AdminTaskTable,\n              ChildRoutes: [{ path: ':taskUUID', Element: ViewPayloadModal }],\n            },\n          ]\n        : []),\n    ],\n    [hasWrite, features],\n  );\n\n  return tabs;\n}\n","import { Tooltip, TooltipProps } from '@patternfly/react-core';\nimport { cloneElement } from 'react';\n\ninterface Props extends TooltipProps {\n  show: boolean;\n  setDisabled?: boolean;\n}\n\nconst ConditionalTooltip = ({ show, children, setDisabled, ...rest }: Props) =>\n  show ? (\n    <Tooltip {...rest}>\n      <div>\n        {children && cloneElement(children, setDisabled ? { isDisabled: setDisabled } : undefined)}\n      </div>\n    </Tooltip>\n  ) : (\n    <>{children}</>\n  );\n\nexport default ConditionalTooltip;\n","import { Select, SelectOption, SelectProps, SelectVariant } from '@patternfly/react-core';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n\ninterface DropdownSelectProps extends Partial<SelectProps> {\n  options: Array<string>;\n  variant: SelectVariant.single | SelectVariant.checkbox | SelectVariant.typeaheadMulti;\n  selectedProp: any; // eslint-disable-line\n  setSelected: Dispatch<SetStateAction<any>>; // eslint-disable-line\n  toggleIcon?: React.ReactElement;\n  placeholderText?: string | React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst DropdownSelect = ({\n  options,\n  variant,\n  selectedProp,\n  setSelected,\n  toggleIcon,\n  placeholderText,\n  isDisabled,\n  ...rest\n}: DropdownSelectProps) => {\n  const selected = Array.isArray(selectedProp) ? selectedProp : [selectedProp];\n  const [isOpen, setIsOpen] = useState(false);\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const selectFrom = options.map((option, index) => (\n    <SelectOption key={option + index} id={option} value={option} />\n  ));\n\n  const onSelect = (_event, selection) => {\n    switch (variant) {\n      case SelectVariant.single:\n        setSelected(selection);\n        setIsOpen(false);\n        break;\n      case SelectVariant.typeaheadMulti:\n      case SelectVariant.checkbox:\n        if (Array.isArray(selectedProp)) {\n          if (selected.includes(selection)) {\n            const remaining = selected.filter((item) => item !== selection);\n            setSelected(remaining);\n            break;\n          }\n          setSelected([...selected, selection]);\n          break;\n        }\n        break;\n    }\n  };\n\n  return (\n    <Select\n      isDisabled={isDisabled}\n      variant={variant}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      placeholderText={placeholderText}\n      isCheckboxSelectionBadgeHidden\n      toggleIcon={toggleIcon}\n      {...rest}\n    >\n      {selectFrom}\n    </Select>\n  );\n};\n\nexport default DropdownSelect;\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon, PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptyStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  notFiltered?: boolean;\n  clearFilters: () => void;\n  itemName: string;\n  notFilteredBody?: string;\n  notFilteredButton?: React.ReactNode;\n}\n\nconst EmptyTableState = ({\n  notFiltered,\n  clearFilters,\n  itemName,\n  notFilteredBody,\n  notFilteredButton,\n}: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={notFiltered ? PlusCircleIcon : SearchIcon} />\n      <Title headingLevel='h2' size='lg' ouiaId='empty_custom_title'>\n        {notFiltered ? `No ${itemName}` : `No ${itemName} match the filter criteria`}\n      </Title>\n      <EmptyStateBody className={classes.emptyStateBody}>\n        {notFiltered ? notFilteredBody : 'Clear all filters to show more results'}\n      </EmptyStateBody>\n      {notFiltered ? (\n        notFilteredButton\n      ) : (\n        <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n          Clear all filters\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { ErrorBoundary as _ErrorBoundaryPage } from '@redhat-cloud-services/frontend-components';\n\nconst ErrorBoundaryPage = _ErrorBoundaryPage as unknown as React.FunctionComponent<{\n  children?: React.ReactNode;\n  headerTitle: string;\n  errorTitle?: string;\n  errorDescription?: string;\n}>;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const ErrorPage = ({ children }: Props) => (\n  <ErrorBoundaryPage\n    headerTitle='Content Sources'\n    errorTitle='Unhandled error'\n    errorDescription='There was a problem trying to process your request'\n  >\n    {children}\n  </ErrorBoundaryPage>\n);\n","import { Text } from '@patternfly/react-core';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { PageHeaderProps as _PageHeaderProps } from '@redhat-cloud-services/frontend-components/PageHeader/PageHeader';\nimport { global_Color_100 } from '@patternfly/react-tokens';\n\nimport { FunctionComponent, ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\n\ninterface PageHeaderProps extends _PageHeaderProps {\n  children?: ReactElement | Array<ReactElement>;\n}\n\n// Example of how to extend inaccurately typed imports\nconst PageHeader = _PageHeader as FunctionComponent<PageHeaderProps>;\n\nconst useStyles = createUseStyles({\n  subtext: {\n    color: global_Color_100.value,\n    paddingTop: '8px',\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <PageHeader>\n      <PageHeaderTitle title='Custom Repositories' />\n      <Text className={classes.subtext} ouiaId='custom_repositories_description'>\n        View all custom repositories within your organization.\n      </Text>\n    </PageHeader>\n  );\n}\n","interface Props {\n  hide: boolean;\n  children?: React.ReactNode;\n}\n\nconst Hide = ({ hide, children }: Props) => (hide ? <></> : <>{children}</>);\n\nexport default Hide;\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Grid,\n  Title,\n} from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { FunctionComponent } from 'react';\n\nconst PageHeader = _PageHeader as unknown as FunctionComponent<{\n  children: React.ReactNode;\n}>;\n\nexport const NoPermissionsPage: React.FunctionComponent = () => (\n  <>\n    <PageHeader>\n      <PageHeaderTitle title='Repositories' />\n    </PageHeader>\n    <Grid style={{ margin: '24px' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={LockIcon} />\n        <Title headingLevel='h5' size='lg'>\n          You do not have access to Repositories\n        </Title>\n        <EmptyStateBody>\n          Contact your organization administrator(s) for more information.\n        </EmptyStateBody>\n      </EmptyState>\n    </Grid>\n  </>\n);\n","import { Button, ExpandableSection, Grid, Spinner, Text } from '@patternfly/react-core';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\n\nimport { useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\n\nconst useStyles = createUseStyles({\n  quickstartContainer: {\n    margin: '24px 24px 0',\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  quickstartSpinner: {\n    margin: '0 0 -4px 5px',\n  },\n  buildCustomButton: {\n    marginTop: '20px',\n    padding: 0,\n    fontWeight: 600,\n  },\n});\n\ninterface QuickStarts {\n  version: number;\n  updateQuickStarts: (key: string, quickstarts: unknown[]) => void;\n  toggle: (quickstartId: string) => void;\n  Catalog: unknown;\n  activateQuickstart: (key: string) => Promise<void>;\n}\n\nconst quickStartExpandedKey = 'QUICKSTART_EXPANDED';\n\nexport default function QuickStart() {\n  const { isBeta, quickStarts } = useChrome();\n  // These values only need to be computed once\n  // So we wrap them in useMemos and give them an empty dependency array to prevent them from being called on every render.\n  const isPreview = useMemo(isBeta, []);\n  const quickStartExpanded = useMemo(\n    () => localStorage.getItem(quickStartExpandedKey) || 'true',\n    [],\n  );\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(quickStartExpanded === 'true');\n  const [quickStartLoading, setQuickStartLoading] = useState(false);\n  const classes = useStyles();\n\n  if (!isPreview) return <></>;\n\n  const onToggle = () =>\n    setIsExpanded((prev) => {\n      localStorage.setItem(quickStartExpandedKey, `${!prev}`);\n      return !prev;\n    });\n\n  const activateQuickStart = async () => {\n    setQuickStartLoading(true);\n    try {\n      await (quickStarts as QuickStarts)?.activateQuickstart('insights-custom-repos');\n      onToggle();\n    } catch (error) {\n      console.warn(error);\n    }\n    setQuickStartLoading(false);\n  };\n\n  return (\n    <Grid className={classes.quickstartContainer}>\n      <ExpandableSection\n        toggleText='Need help getting started with Preview features?'\n        onToggle={onToggle}\n        isExpanded={isExpanded}\n        displaySize='large'\n        aria-label='quickStart-expansion'\n        data-ouia-component-id='quickstart_expand'\n      >\n        <Text>For help getting started, access the quick start below:</Text>\n        <Button\n          className={classes.buildCustomButton}\n          iconPosition='right'\n          icon={\n            quickStartLoading ? (\n              <Spinner size='md' className={classes.quickstartSpinner} />\n            ) : (\n              <ArrowRightIcon />\n            )\n          }\n          variant='link'\n          ouiaId='quickstart_link'\n          onClick={activateQuickStart}\n          isDisabled={quickStartLoading}\n        >\n          Build an Image with Custom Content\n        </Button>\n      </ExpandableSection>\n    </Grid>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport {\n  global_danger_color_200,\n  global_info_color_200,\n  global_success_color_200,\n  global_warning_color_200,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_200.value;\nconst green = global_success_color_200.value;\nconst gold = global_warning_color_200.value;\nconst blue = global_info_color_200.value;\n\ninterface Props {\n  color: 'red' | 'green' | 'gold' | 'blue';\n  isLink?: boolean;\n  children?: React.ReactNode;\n}\n\nconst useStyles = ({ isLink }: Props) =>\n  createUseStyles({\n    fontStyle: {\n      fontWeight: 'bold',\n      fontSize: '14px',\n      ...(isLink\n        ? {\n            textDecoration: 'grey dotted underline',\n            cursor: 'pointer',\n          }\n        : {}),\n    },\n    red: { extend: 'fontStyle', color: red },\n    green: { extend: 'fontStyle', color: green },\n    gold: { extend: 'fontStyle', color: gold },\n    blue: { extend: 'fontStyle', color: blue },\n  });\n\nconst StatusText = (props: Props) => {\n  const classes = useStyles(props)();\n  const { color, children } = props;\n\n  return <span className={classes[color]}>{children}</span>;\n};\n\nexport default StatusText;\n","import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  link: {\n    alignItems: 'center',\n    display: 'flex',\n    width: 'fit-content', // Prevents overflow of clickable area beyond visible content\n  },\n  icon: {\n    marginLeft: '5px',\n  },\n});\n\ninterface Props {\n  href: string;\n}\n\nconst UrlWithExternalIcon = ({ href }: Props) => {\n  const classes = useStyles();\n  return (\n    <a href={href} className={classes.link} rel='noreferrer' target='_blank'>\n      {href} <ExternalLinkAltIcon className={classes.icon} />\n    </a>\n  );\n};\n\nexport default UrlWithExternalIcon;\n","import { createContext, ReactNode, useContext, useEffect, useState } from 'react';\nimport { fetchRBAC, Rbac } from '@redhat-cloud-services/insights-common-typescript';\nimport { Features } from '../services/Features/FeatureApi';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getRegistry as _getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { insights } from '../../package.json';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useFetchFeaturesQuery } from '../services/Features/FeatureQueries';\n\nconst getRegistry = _getRegistry as unknown as () => { register: ({ notifications }) => void };\nconst { appname } = insights;\n\nexport interface AppContextInterface {\n  rbac?: { read: boolean; write: boolean };\n  features: Features | null;\n  isFetchingFeatures: boolean;\n}\n\nexport const AppContext = createContext({} as AppContextInterface);\n\nexport const ContextProvider = ({ children }: { children: ReactNode }) => {\n  const [rbac, setRbac] = useState<Rbac | undefined>(undefined);\n  const [features, setFeatures] = useState<Features | null>(null);\n  const chrome = useChrome();\n  const { fetchFeatures, isLoading: isFetchingFeatures } = useFetchFeaturesQuery();\n\n  useEffect(() => {\n    // Get chrome and register app\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n\n    if (chrome && !rbac) {\n      // Get permissions and store them in context\n      chrome.auth.getUser().then(async () => fetchRBAC(appname).then(setRbac));\n    }\n\n    (async () => {\n      const fetchedFeatures = await fetchFeatures();\n      setFeatures(fetchedFeatures);\n    })();\n  }, [!!chrome]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        rbac: rbac\n          ? {\n              read: rbac?.hasPermission('content-sources', 'repositories', 'read'),\n              write: rbac?.hasPermission('content-sources', 'repositories', 'write'),\n            }\n          : undefined,\n        features: features,\n        isFetchingFeatures: isFetchingFeatures,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n","import axios from 'axios';\nimport { Links, Meta } from '../Content/ContentApi';\n\nexport interface AdminTaskFilterData {\n  statuses: string[];\n  accountId: string;\n  orgId: string;\n}\n\nexport interface PulpData {\n  sync?: Record<string, unknown>;\n  publication?: Record<string, unknown>;\n  distribution?: Record<string, unknown>;\n}\n\nexport interface AdminTask {\n  uuid: string;\n  account_id?: string;\n  org_id: string;\n  typename: string;\n  status: 'running' | 'failed' | 'completed' | 'canceled' | 'pending';\n  queued_at: string;\n  started_at: string;\n  finished_at: string;\n  error: string;\n  payload?: Record<string, unknown>;\n  pulp?: PulpData;\n}\n\nexport type AdminTaskList = AdminTask[];\n\nexport interface AdminTaskListResponse {\n  data: AdminTaskList;\n  links: Links;\n  meta: Meta;\n}\n\nexport const getAdminTasks: (\n  page: number,\n  limit: number,\n  filterData: AdminTaskFilterData,\n  sortBy: string,\n) => Promise<AdminTaskListResponse> = async (page, limit, filterData, sortBy) => {\n  const accountIdParam = filterData.accountId;\n  const orgIdParam = filterData.orgId;\n  const statusParam = filterData?.statuses?.join(',').toLowerCase();\n  const { data } = await axios.get(\n    `/api/content-sources/v1/admin/tasks/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&account_id=${accountIdParam}&org_id=${orgIdParam}&status=${statusParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getAdminTask: (uuid: string) => Promise<AdminTask> = async (uuid) => {\n  const { data } = await axios.get(`/api/content-sources/v1/admin/tasks/${uuid}`);\n  return data;\n};\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport {\n  AdminTaskFilterData,\n  AdminTaskListResponse,\n  getAdminTasks,\n  AdminTask,\n  getAdminTask,\n} from './AdminTaskApi';\nimport useErrorNotification from '../../Hooks/useErrorNotification';\n\nexport const ADMIN_TASK_LIST_KEY = 'ADMIN_TASK_LIST_KEY';\nexport const ADMIN_TASK_KEY = 'ADMIN_TASK_KEY';\n\nconst ADMIN_TASK_LIST_POLLING_TIME = 15000; // 15 seconds\n\nexport const useAdminTaskListQuery = (\n  page: number,\n  limit: number,\n  filterData: AdminTaskFilterData,\n  sortBy: string,\n) => {\n  const [polling, setPolling] = useState(false);\n  const [pollCount, setPollCount] = useState(0);\n  const errorNotifier = useErrorNotification();\n  return useQuery<AdminTaskListResponse>(\n    [ADMIN_TASK_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getAdminTasks(page, limit, filterData, sortBy),\n    {\n      onSuccess: (data) => {\n        const containsRunning = data?.data?.some(({ status }) => status === 'running');\n        if (polling && containsRunning) {\n          // Count each consecutive time polling occurs\n          setPollCount(pollCount + 1);\n        }\n        if (polling && !containsRunning) {\n          // We were polling, but now the data is valid, we stop the count.\n          setPollCount(0);\n        }\n        if (pollCount > 40) {\n          // If polling occurs 40 times in a row, we stop it. Likely a data/kafka issue has occurred with the API.\n          return setPolling(false);\n        }\n        // This sets the polling state based whether the data contains any \"Running\" status\n        return setPolling(containsRunning);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        setPolling(false);\n        setPollCount(0);\n        errorNotifier('Unable to get admin task list', 'An error occurred', err);\n      },\n      refetchInterval: polling ? ADMIN_TASK_LIST_POLLING_TIME : undefined,\n      refetchIntervalInBackground: false, // This prevents endless polling when our app isn't the focus tab in a browser\n      refetchOnWindowFocus: polling, // If polling and navigate to another tab, on refocus, we want to poll once more. (This is based off of the stalestime below)\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n\nexport const useFetchAdminTaskQuery = (uuid?: string) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<AdminTask>(\n    [ADMIN_TASK_KEY, uuid],\n    () => getAdminTask(uuid as string), // Will be disabled if undefined\n    {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        errorNotifier(\n          'Unable to find an Admin task with the given UUID.',\n          'An error occurred',\n          err,\n        );\n      },\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n","import axios from 'axios';\n\nexport interface ContentItem {\n  uuid: string;\n  name: string;\n  package_count: number;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  account_id: string;\n  org_id: string;\n  status: string;\n  last_introspection_error: string;\n  last_introspection_time: string;\n  failed_introspections_count: number;\n  gpg_key: string;\n  metadata_verification: boolean;\n  snapshot: boolean;\n}\n\nexport interface PopularRepository {\n  uuid: string;\n  existing_name: string;\n  suggested_name: string;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface CreateContentRequestItem {\n  name: string;\n  url: string;\n  distribution_versions?: Array<string>;\n  distribution_arch?: string;\n  gpg_key?: string;\n  metadata_verification?: boolean;\n  snapshot?: boolean;\n}\n\nexport interface ErrorItem {\n  status: number;\n  title?: string;\n  detail?: string;\n}\n\nexport interface ErrorResponse {\n  errors: ErrorItem[];\n}\n\nexport type CreateContentRequestResponse = ContentItem[] | ErrorResponse;\n\nexport type CreateContentRequest = Array<CreateContentRequestItem>;\n\nexport interface EditContentRequestItem {\n  uuid: string;\n  name: string;\n  url: string;\n  distribution_arch: string;\n  distribution_versions: string[];\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport type EditContentRequest = Array<EditContentRequestItem>;\n\nexport type ContentList = Array<ContentItem>;\n\nexport type Links = {\n  first: string;\n  last: string;\n  next: string;\n  prev: string;\n};\n\nexport type Meta = {\n  count: number;\n  limit: number;\n  offset: number;\n};\n\nexport interface ContentListResponse {\n  data: ContentList;\n  links: Links;\n  meta: Meta;\n}\n\nexport interface PopularRepositoriesResponse {\n  data: PopularRepository[];\n  links: Links;\n  meta: Meta;\n}\n\nexport interface RepositoryParamsResponse {\n  distribution_versions: Array<NameLabel>;\n  distribution_arches: Array<NameLabel>;\n}\n\nexport interface GpgKeyResponse {\n  gpg_key: string;\n}\n\nexport type NameLabel = {\n  name: string;\n  label: string;\n};\n\nexport type FilterData = {\n  searchQuery: string;\n  versions: Array<string>;\n  arches: Array<string>;\n  statuses: Array<string>;\n};\n\nexport type ValidateItem = {\n  skipped: boolean;\n  valid: boolean;\n  error: string;\n};\n\nexport interface ValidationUrl extends ValidateItem {\n  http_code: number;\n  metadata_present: boolean;\n  metadata_signature_present: boolean;\n}\n\nexport type ValidationResponse = {\n  name?: ValidateItem;\n  url?: ValidationUrl;\n  distribution_versions?: ValidateItem;\n  distribution_arch?: ValidateItem;\n  gpg_key?: ValidateItem;\n}[];\n\nexport interface PackageItem {\n  arch: string;\n  checksum: string;\n  epoch: number;\n  name: string;\n  release: string;\n  summary: string;\n  uuid: string;\n  version: string;\n}\n\nexport type PackagesResponse = {\n  data: PackageItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport type IntrospectRepositoryRequestItem = {\n  uuid: string;\n  reset_count?: boolean;\n};\n\nexport const getPopularRepositories: (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => Promise<PopularRepositoriesResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData?.searchQuery;\n  const versionParam = filterData?.versions?.join(',');\n  const archParam = filterData?.arches?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/popular_repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getContentList: (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => Promise<ContentListResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData.searchQuery;\n  const versionParam = filterData.versions.join(',');\n  const archParam = filterData.arches.join(',');\n  const statusParam = filterData?.statuses?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&status=${statusParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const fetchContentItem: (uuid: string) => Promise<ContentItem> = async (uuid: string) => {\n  const { data } = await axios.get(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const deleteContentListItem: (uuid: string) => Promise<void> = async (uuid: string) => {\n  const { data } = await axios.delete(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const AddContentListItems: (\n  request: CreateContentRequest,\n) => Promise<CreateContentRequestResponse> = async (request) => {\n  const { data } = await axios.post('/api/content-sources/v1.0/repositories/bulk_create/', request);\n  return data;\n};\n\nexport const EditContentListItem: (request: EditContentRequestItem) => Promise<void> = async (\n  request,\n) => {\n  const { data } = await axios.patch(\n    `/api/content-sources/v1.0/repositories/${request.uuid}`,\n    request,\n  );\n  return data;\n};\n\nexport const getRepositoryParams: () => Promise<RepositoryParamsResponse> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/repository_parameters/');\n  return data;\n};\n\nexport const validateContentListItems: (\n  request: CreateContentRequest,\n) => Promise<ValidationResponse> = async (request) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1.0/repository_parameters/validate/',\n    request,\n  );\n  return data;\n};\n\nexport const getGpgKey: (url: string) => Promise<GpgKeyResponse> = async (url: string) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1/repository_parameters/external_gpg_key/',\n    { url },\n  );\n  return data;\n};\n\nexport const getPackages: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<PackagesResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/rpms?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const introspectRepository: (\n  request: IntrospectRepositoryRequestItem,\n) => Promise<void> = async (request) => {\n  const { data } = await axios.post(\n    `/api/content-sources/v1/repositories/${request.uuid}/introspect/`,\n    { reset_count: request.reset_count },\n  );\n  return data;\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { useState } from 'react';\nimport { QueryClient, useMutation, useQuery } from 'react-query';\nimport { cloneDeep } from 'lodash';\n\nimport {\n  ContentListResponse,\n  deleteContentListItem,\n  getContentList,\n  RepositoryParamsResponse,\n  getRepositoryParams,\n  AddContentListItems,\n  CreateContentRequest,\n  FilterData,\n  validateContentListItems,\n  EditContentListItem,\n  EditContentRequest,\n  getGpgKey,\n  PackagesResponse,\n  getPackages,\n  getPopularRepositories,\n  PopularRepositoriesResponse,\n  CreateContentRequestResponse,\n  ContentItem,\n  introspectRepository,\n  IntrospectRepositoryRequestItem,\n  fetchContentItem,\n} from './ContentApi';\nimport { ADMIN_TASK_LIST_KEY } from '../AdminTasks/AdminTaskQueries';\nimport useErrorNotification from '../../Hooks/useErrorNotification';\nimport useNotification from '../../Hooks/useNotification';\n\nexport const CONTENT_LIST_KEY = 'CONTENT_LIST_KEY';\nexport const POPULAR_REPOSITORIES_LIST_KEY = 'POPULAR_REPOSITORIES_LIST_KEY';\nexport const REPOSITORY_PARAMS_KEY = 'REPOSITORY_PARAMS_KEY';\nexport const CREATE_PARAMS_KEY = 'CREATE_PARAMS_KEY';\nexport const PACKAGES_KEY = 'PACKAGES_KEY';\nexport const CONTENT_ITEM_KEY = 'CONTENT_ITEM_KEY';\n\nconst CONTENT_LIST_POLLING_TIME = 15000; // 15 seconds\n\nexport const useFetchContent = (uuids: string[]) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<ContentItem>([CONTENT_ITEM_KEY, ...uuids], () => fetchContentItem(uuids[0]), {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any) =>\n      errorNotifier('Unable to find associated repository.', 'An error occurred', err),\n    keepPreviousData: true,\n    staleTime: 20000,\n  });\n};\n\nexport const usePopularRepositoriesQuery = (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<PopularRepositoriesResponse>(\n    [POPULAR_REPOSITORIES_LIST_KEY, page, limit, sortBy, ...Object.values(filterData || {})], // NOTE: Update this if larger list!!!!\n    () => getPopularRepositories(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) =>\n        errorNotifier('Unable to get popular repositories list', 'An error occurred', err),\n    },\n  );\n};\n\nexport const useContentListQuery = (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => {\n  const [polling, setPolling] = useState(false);\n  const [pollCount, setPollCount] = useState(0);\n  const errorNotifier = useErrorNotification();\n  return useQuery<ContentListResponse>(\n    // Below MUST match the \"contentListKeyArray\" seen below in the useDeleteContent.\n    [CONTENT_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getContentList(page, limit, filterData, sortBy),\n    {\n      onSuccess: (data) => {\n        const containsPending = data?.data?.some(\n          ({ status }) => status === 'Pending' || status === '',\n        );\n        if (polling && containsPending) {\n          // Count each consecutive time polling occurs\n          setPollCount(pollCount + 1);\n        }\n        if (polling && !containsPending) {\n          // We were polling, but now the data is valid, we stop the count.\n          setPollCount(0);\n        }\n        if (pollCount > 40) {\n          // If polling occurs 40 times in a row, we stop it. Likely a data/kafka issue has occurred with the API.\n          return setPolling(false);\n        }\n        // This sets the polling state based whether the data contains any \"Pending\" status\n        return setPolling(containsPending);\n      },\n      onError: (err) => {\n        setPolling(false);\n        setPollCount(0);\n        errorNotifier('Unable to get repositories list', 'An error occurred', err);\n      },\n      refetchInterval: polling ? CONTENT_LIST_POLLING_TIME : undefined,\n      refetchIntervalInBackground: false, // This prevents endless polling when our app isn't the focus tab in a browser\n      refetchOnWindowFocus: polling, // If polling and navigate to another tab, on refocus, we want to poll once more. (This is based off of the stalestime below)\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n\nexport const useAddContentQuery = (queryClient: QueryClient, request: CreateContentRequest) => {\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  return useMutation(() => AddContentListItems(request.filter((item) => !!item)), {\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n\n      notify({\n        variant: AlertVariant.success,\n        title:\n          request?.length > 1\n            ? `${request?.length} custom repositories added`\n            : `Custom repository \"${request?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any) => {\n      errorNotifier('Error adding items to content list', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useAddPopularRepositoryQuery = (\n  queryClient: QueryClient,\n  request: CreateContentRequest,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n) => {\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  const popularRepositoriesKeyArray = [\n    POPULAR_REPOSITORIES_LIST_KEY,\n    page,\n    perPage,\n    undefined,\n    ...Object.values(filterData || {}),\n  ];\n  const filteredRequest = request.filter((item) => !!item);\n  return useMutation(() => AddContentListItems(filteredRequest), {\n    onMutate: async () => {\n      const { name } = filteredRequest[0];\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(popularRepositoriesKeyArray);\n      // Snapshot the previous value\n      const previousPopularData: Partial<PopularRepositoriesResponse> =\n        queryClient.getQueryData(popularRepositoriesKeyArray) || {};\n\n      queryClient.setQueryData(popularRepositoriesKeyArray, () => ({\n        ...previousPopularData,\n        data: previousPopularData.data?.map((data) => {\n          if (name === data.suggested_name && !data.uuid) {\n            return { ...data, uuid: 'temp', existing_name: name };\n          }\n          return data;\n        }),\n      }));\n      return { previousData: previousPopularData };\n    },\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n      notify({\n        variant: AlertVariant.success,\n        title: `Custom repository \"${data?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: PopularRepositoriesResponse;\n        };\n        queryClient.setQueryData(popularRepositoriesKeyArray, previousData);\n      }\n      errorNotifier('Error deleting item from popularRepo', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useEditContentQuery = (queryClient: QueryClient, request: EditContentRequest) => {\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  return useMutation(() => EditContentListItem(request[0]), {\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: `Successfully edited ${request.length} ${request.length > 1 ? 'items' : 'item'}`,\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any) => {\n      errorNotifier('Error editing items on content list', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useValidateContentList = () => {\n  const errorNotifier = useErrorNotification();\n  return useMutation((request: CreateContentRequest) => validateContentListItems(request), {\n    onError: (err) => {\n      errorNotifier('Error validating form fields', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useDeletePopularRepositoryMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n) => {\n  const popularRepositoriesKeyArray = [\n    POPULAR_REPOSITORIES_LIST_KEY,\n    page,\n    perPage,\n    undefined,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(popularRepositoriesKeyArray);\n      // Snapshot the previous value\n      const previousPopularData: Partial<PopularRepositoriesResponse> =\n        queryClient.getQueryData(popularRepositoriesKeyArray) || {};\n\n      queryClient.setQueryData(popularRepositoriesKeyArray, () => ({\n        ...previousPopularData,\n        data: previousPopularData.data?.map((data) => {\n          if (data.uuid === uuid) {\n            return { ...data, uuid: undefined };\n          }\n          return data;\n        }),\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData: previousPopularData, queryClient };\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: PopularRepositoriesResponse;\n        };\n        queryClient.setQueryData(popularRepositoriesKeyArray, previousData);\n      }\n      errorNotifier('Unable to delete the given repository.', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => uuid !== data.uuid),\n        meta: previousData.meta\n          ? {\n              ...previousData.meta,\n              count: previousData.meta.count ? previousData.meta.count - 1 : 1,\n            }\n          : undefined,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { previousData } = context as {\n        previousData: ContentListResponse;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = previousData?.meta?.count - 1;\n        }\n\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n      }\n      errorNotifier('Unable to delete the given repository.', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useRepositoryParams = () =>\n  useQuery<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY, getRepositoryParams, {\n    keepPreviousData: true,\n    staleTime: Infinity,\n  });\n\nexport const useFetchGpgKey = () => {\n  const errorNotifier = useErrorNotification();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchGpgKey = async (url: string): Promise<string> => {\n    setIsLoading(true);\n    let gpg_key = url;\n    try {\n      const data = await getGpgKey(url);\n      gpg_key = data.gpg_key;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      errorNotifier('Error fetching GPG key from provided URL', 'An error occurred', err);\n    }\n    setIsLoading(false);\n    return gpg_key;\n  };\n\n  return { fetchGpgKey, isLoading };\n};\n\nexport const useGetPackagesQuery = (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<PackagesResponse>(\n    [PACKAGES_KEY, uuid, page, limit, searchQuery, sortBy],\n    () => getPackages(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        errorNotifier('Unable to find packages with the given UUID.', 'An error occurred', err);\n      },\n    },\n  );\n};\n\nexport const useIntrospectRepositoryMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  return useMutation(introspectRepository, {\n    onMutate: async (item: IntrospectRepositoryRequestItem) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      const previousStatus = previousData.data?.find((data) => item.uuid == data.uuid)?.status;\n      const newData = cloneDeep(previousData);\n      if (previousStatus) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        newData.data.filter((data) => item.uuid == data.uuid).at(0).status = 'Pending';\n      }\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...newData,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: 'Repository introspection in progress',\n      });\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n      }\n      errorNotifier('Error introspecting repository', 'An error occurred', err);\n    },\n  });\n};\n","import axios from 'axios';\n\nexport interface Feature {\n  enabled: boolean;\n  accessible: boolean;\n}\n\nexport interface Features {\n  snapshots?: Feature;\n  admintasks?: Feature;\n}\n\nexport const getFeatures: () => Promise<Features> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/features/');\n  return data;\n};\n","import { useState } from 'react';\nimport { Features, getFeatures } from './FeatureApi';\nimport useErrorNotification from '../../Hooks/useErrorNotification';\n\nexport const useFetchFeaturesQuery = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const errorNotifier = useErrorNotification();\n\n  const fetchFeatures = async (): Promise<Features | null> => {\n    setIsLoading(true);\n    let features: Features | null = null;\n    try {\n      features = await getFeatures();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      errorNotifier('Error fetching features', 'An error occurred', err);\n    }\n    setIsLoading(false);\n    return features;\n  };\n\n  return { fetchFeatures, isLoading };\n};\n","import { initStore, restoreStore } from '@redhat-cloud-services/insights-common-typescript';\nimport { Middleware } from 'redux';\n\nexport const createStore = (...middleware: Middleware[]) => initStore({}, {}, ...middleware);\n\nexport const resetStore = () => restoreStore();\n"],"names":["module","exports","debug","useProxy","proxyVerbose","interceptChromeConfig","sassPrefix","appUrl","routes","host","plugins","moduleFederation","exclude","shared","singleton","useAppContext","rbac","isFetchingFeatures","Bullseye","Spinner","size","read","NoPermissionsPage","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","logger","store","useMemo","resetStore","createStore","useEffect","insights","chrome","appAction","QueryClientProvider","client","ContextProvider","value","delay","useState","debouncedValue","setDebouncedValue","isEqual","setTimeout","clearTimeout","useDeepCompareMemoize","ref","useRef","current","callback","dependencies","map","notify","defaultTitle","defaultDescription","err","title","description","response","data","errors","find","errTitle","detail","errDescription","variant","AlertVariant","danger","dispatch","useDispatch","payload","addNotification","useStyles","createUseStyles","mainContainer","backgroundColor","global_BackgroundColor_100","display","flexDirection","mainContainer100Height","composes","minHeight","topContainer","justifyContent","padding","height","bottomContainer","invisible","opacity","formatDate","date","format","perPageKey","classes","navigate","useNavigate","storedPerPage","Number","localStorage","getItem","page","setPage","perPage","setPerPage","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","accountId","orgId","statuses","filterData","setFilterData","clearFilters","notFiltered","length","useAdminTaskListQuery","isLoading","error","isError","isFetching","meta","count","limit","offset","actionTakingPlace","onSetPage","_","newPage","onPerPageSelect","newPerPage","setItem","toString","columnHeaders","adminTaskList","itemName","notFilteredBody","countIsZero","Grid","className","Outlet","Flex","values","FlexItem","hide","Pagination","id","widgetId","perPageComponent","isDisabled","itemCount","isCompact","SkeletonTable","rowSize","colSize","TableVariant","compact","TableComposable","ouiaId","Thead","Tr","columnHeader","index","Th","sort","columnIndex","sortBy","direction","defaultDirection","onSort","_event","Tbody","adminTask","Td","org_id","account_id","typename","queued_at","status","width","Button","onClick","uuid","PaginationVariant","bottom","chipsContainer","paddingTop","marginLeft","searchInput","paddingRight","marginRight","searchIcon","color","global_secondary_color_100","position","top","left","pointerEvents","statusValues","filters","filterType","setFilterType","setAccountId","setOrgId","selectedStatuses","setSelectedStatuses","debouncedAccountId","debouncedOrgId","debouncedSelectedStatuses","Filter","TextInput","placeholder","onChange","SearchIcon","toggleAriaLabel","toggleId","options","SelectVariant","checkbox","selectedProp","setSelected","placeholderText","InputGroup","single","toggleIcon","FilterIcon","fullWidth","default","ChipGroup","categoryName","Chip","filter","chip","isInline","red","global_danger_color_100","green","global_success_color_100","gold","global_warning_color_100","spinner","animationDuration","margin","alignContent","spacer","ExclamationCircleIcon","CheckCircleIcon","BanIcon","ClockIcon","jsonView","fontSize","useParams","onClose","BASE_ROUTE","ADMIN_TASKS_ROUTE","activeTabKey","setActiveTabKey","detailRef","createRef","useFetchAdminTaskQuery","tabs","push","contentRef","pulp","sync","distribution","publication","showLoading","Modal","ModalVariant","medium","ouiaSafe","isOpen","header","Tabs","activeKey","onSelect","tabIndex","Tab","TabTitleText","eventKey","tabContentRef","TabContent","hidden","name","src","enableClipboard","copy","navigator","clipboard","writeText","JSON","stringify","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","started_at","finished_at","useQueryClient","searchQuery","versions","arches","useRepositoryParams","repositoryParamsLoading","repositoryParamsError","repositoryParamsIsError","distribution_versions","distribution_arches","distVersions","distArches","columnSortAttributes","sortString","useContentListQuery","useDeleteContentItemMutate","deleteItem","isDeleting","useIntrospectRepositoryMutate","introspectRepository","isIntrospecting","introspectRepoForUuid","reset_count","archesDisplay","arch","label","contentList","rowActions","useCallback","rowData","then","showLoader","notFilteredButton","content","show","write","setDisabled","time","url","distribution_arch","last_introspection_time","href","includes","join","undefined","fromNow","retryHandler","isActionCell","ActionsColumn","items","global_Color_200","removeSideBorder","borderLeft","toggleAllRow","cursor","borderBottom","global_link_Color","fill","colHeader","mainContentCol","toggleAction","addRepositoryButton","marginBottom","saveButton","transition","removeButton","singleContentCol","gpgKeyInput","backgroundPositionX","defaultTouchedState","gpgKey","changeVerified","setChangeVerified","gpgKeyList","setGpgKeyList","formik","useFormik","initialValues","defaultFormikValues","validateOnBlur","validateOnChange","validationSchema","makeValidationSchema","initialTouched","onSubmit","updateGpgKey","updatedData","useFetchGpgKey","fetchGpgKey","isFetchingGpgKey","debouncedGpgKeyList","getQueryData","REPOSITORY_PARAMS_KEY","list","Promise","all","updateValue","isValidURL","result","metadataVerification","validationList","metadata_signature_present","setValues","distributionArches","distributionVersions","forEach","useAddContentQuery","mapFormikToAPIValues","addContent","isAdding","createDataLengthOf1","allExpanded","some","updateVariable","newValue","getFieldValidation","field","touched","setTouchedOnLastItemIfUntouchedAndCollapsed","lastItem","updatedTouched","setTouched","debouncedValues","useValidateContentList","validateContentList","isValidating","newTouchedValues","gpg_key","metadata_verification","validationData","validateForm","formikErrors","mappedErrorData","mapValidationData","setErrors","onToggle","expanded","help","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","footer","Stack","StackItem","isValid","vals","icon","PlusCircleIcon","isExpanded","expand","rowIndex","dataLabel","gpgLoading","newValues","splice","newTouched","newErrors","removeRepository","MinusCircleIcon","colSpan","Form","FormGroup","isRequired","fieldId","validated","helperTextInvalid","type","onBlur","newVersion","isEmpty","updateArchAndVersion","labelIcon","Tooltip","menuAppendTo","document","body","Object","keys","key","typeaheadMulti","valueToUpdate","val","setVersionSelected","FileUpload","filenamePlaceholder","textAreaPlaceholder","spellCheck","onDataChange","onTextChange","onClearClick","dropzoneProps","maxSize","maxUploadSize","onDropRejected","files","failedFileUpload","allowEditingUploadedText","browseButtonText","Radio","isChecked","fontWeight","loading","allTouched","every","noErrors","hasTouchedError","REGEX_URL","regex","RegExp","match","formikValues","updatedValidationData","rest","metadata_present","http_code","mapNoMetaDataError","Yup","addMethod","object","propertyName","message","this","test","parent","v","createError","path","array","shape","string","min","max","required","uniqueProperty","versionNamesLabels","setVersionNamesLabels","archNamesLabels","setArchNamesLabels","setSearchQuery","selectedVersions","setSelectedVersions","selectedArches","setSelectedArches","debouncedSearchQuery","debouncedSelectedVersions","debouncedSelectedArches","getLabels","names","namesLabels","labels","found","chips","setChips","version","setIsValid","setIsLoading","setUpdatedValues","mapToDefaultFormikValues","hasNotChanged","open","mapFormikToEditAPIValues","urlOnBlur","noVerticalAlign","search","useLocation","initialLoad","setInitialLoad","updatedValues","uuids","URLSearchParams","get","split","useEditContentQuery","editContent","isEditing","useFetchContent","valuesHaveChanged","mapToContentItemsToEditContentRequest","invalidateQueries","CONTENT_ITEM_KEY","text","global_disabled_color_100","link","package_count","isContentLeftAligned","Text","paddingBottom","useGetPackagesQuery","sortParams","packageList","fetchingOrLoading","notLoadingZeroCount","hasNoBodyWrapper","InnerScrollContainer","release","clearSearch","emptyStateContainer","flexGrow","EmptyState","EmptyStateVariant","full","EmptyStateIcon","Title","headingLevel","EmptyStateBody","extend","relativeTime","PopoverDescription","timeText","PopoverFooter","failedIntrospectionsCount","lastIntrospectionTime","alertSeverityVariant","headerIcon","footerContent","isLink","ExclamationTriangleIcon","addRepositoriesButton","checkboxMinWidth","minWidth","disabled","checkedRepositories","setCheckedRepositories","selectedData","setSelectedData","selectedUUID","setSelectedUUID","searchValue","setSearchValue","debouncedSearchValue","usePopularRepositoriesQuery","areAllReposAdded","atLeastOneRepoChecked","areAllReposSelected","useAddPopularRepositoryQuery","addContentQuery","useDeletePopularRepositoryMutate","popularData","request","checked","suggested_name","select","isSelected","isHeaderSelectDisabled","existing_name","isSelecting","disable","newData","tab","textDecoration","outlineOffset","pathname","currentRoute","last","route","keyParams","Link","accessKey","to","containerMargin","Math","random","Routes","Route","element","Element","ChildRoutes","ErrorPage","childRouteKey","ChildRouteElement","Navigate","DEFAULT_ROUTE","replace","POPULAR_REPOSITORIES_ROUTE","features","hasWrite","admintasks","enabled","accessible","children","cloneElement","selected","Array","isArray","setIsOpen","selectFrom","option","SelectOption","Select","selection","remaining","item","selections","isCheckboxSelectionBadgeHidden","emptyStateBody","ErrorBoundaryPage","headerTitle","errorTitle","errorDescription","PageHeader","subtext","global_Color_100","PageHeaderTitle","style","LockIcon","quickstartContainer","quickstartSpinner","buildCustomButton","marginTop","quickStartExpandedKey","useChrome","isBeta","quickStarts","isPreview","quickStartExpanded","setIsExpanded","quickStartLoading","setQuickStartLoading","prev","ExpandableSection","toggleText","displaySize","iconPosition","ArrowRightIcon","activateQuickstart","console","warn","global_danger_color_200","global_success_color_200","global_warning_color_200","blue","global_info_color_200","props","fontStyle","alignItems","rel","target","ExternalLinkAltIcon","getRegistry","appname","AppContext","createContext","setRbac","setFeatures","useFetchFeaturesQuery","fetchFeatures","register","notifications","notificationsReducer","auth","getUser","fetchRBAC","fetchedFeatures","Provider","hasPermission","useContext","getAdminTasks","accountIdParam","orgIdParam","statusParam","toLowerCase","getAdminTask","ADMIN_TASK_LIST_KEY","ADMIN_TASK_KEY","polling","setPolling","pollCount","setPollCount","errorNotifier","useQuery","onSuccess","containsRunning","onError","refetchInterval","refetchIntervalInBackground","keepPreviousData","staleTime","getPopularRepositories","versionParam","archParam","getContentList","fetchContentItem","deleteContentListItem","delete","AddContentListItems","post","EditContentListItem","patch","getRepositoryParams","validateContentListItems","getGpgKey","getPackages","CONTENT_LIST_KEY","POPULAR_REPOSITORIES_LIST_KEY","CREATE_PARAMS_KEY","PACKAGES_KEY","containsPending","useMutation","hasPending","success","popularRepositoriesKeyArray","filteredRequest","onMutate","cancelQueries","previousPopularData","setQueryData","previousData","_newData","context","contentListKeyArray","_data","_variables","setQueriesData","Infinity","optimisticResults","previousStatus","cloneDeep","at","getFeatures","initStore","middleware","restoreStore"],"sourceRoot":""}