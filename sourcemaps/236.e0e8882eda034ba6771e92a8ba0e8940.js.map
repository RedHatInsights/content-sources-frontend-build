{"version":3,"file":"js/236.1687895731055.4c21d234e8e2dbb9be98.js","mappings":"ypDAAA,SACA,kBACA,cACA,WACA,WACA,cACA,UAEA,WACA,WACA,WACA,WACA,WAEMA,EAAc,cACZC,EAAY,EAAAC,SAAQ,QAE5B,gCACQ,GAAoB,IAAAC,iBAAlBC,EAAI,OAAEC,EAAO,UACfC,GAAS,eAaf,QAXA,IAAAC,YAAU,WAESP,IACRQ,SAAS,CAAEC,cAAe,EAAAC,uBAE/BJ,IAAWF,GAEbE,EAAOK,KAAKC,UAAUC,MAAK,2EAAY,cAAAC,WAAUb,GAASY,KAAKR,G,SAEnE,GAAG,GAAGC,KAEE,GACN,KAAMF,EACJ,OACE,SAAC,EAAAW,SAAQ,WACP,SAAC,EAAAC,QAAO,CAACC,KAAK,SAGpB,KAAKb,aAAI,EAAJA,EAAMc,KACT,OACE,iCACE,SAAC,UAAmB,KACpB,SAAC,UAAM,OAIb,QACE,OAAO,SAAC,EAAAC,kBAAiB,IAE/B,C,qhCClDA,cACA,WACA,WAGA,cACA,WACA,WAEMC,EAAc,IAAI,EAAAC,YAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,MAS5B,mBAAiC,G,IAAEC,EAAM,SACjCC,EAAQ,UAAMC,SAAQ,WAE1B,OADA,IAAAC,cACIH,GACK,IAAAI,aAAYJ,GAAQC,OAEtB,IAAAG,eAAcH,KACvB,GAAG,CAACD,IAMJ,OAJA,IAAAlB,YAAU,W,QACmB,QAA3B,EAAgB,QAAhB,EAAQ,OAARL,eAAQ,IAARA,cAAQ,EAARA,SAAUI,cAAM,eAAEwB,iBAAS,gBAAG,iBAChC,GAAG,KAGD,SAAC,WAAa,GAACJ,MAAOA,GAAK,WACzB,SAAC,EAAAK,gBAAe,WACd,SAAC,EAAAC,oBAAmB,GAACC,OAAQb,GAAW,WACtC,SAAC,UAAG,WAKd,C,mEC3CA,eACA,WAmBA,UAjBA,SAAwBc,EAAUC,GAC1B,OAAsC,IAAAC,UAAYF,GAAjDG,EAAc,KAAEC,EAAiB,KAaxC,OAXA,IAAA/B,YAAU,WAER,KAAK,IAAAgC,SAAQL,EAAOG,GAAiB,CACnC,IAAM,EAAQG,YAAW,WAAM,OAAAF,EAAkBJ,EAAlB,GAA0BC,GAAS,KAElE,OAAO,WACLM,aAAa,EACf,C,CAEJ,GAAG,CAACP,EAAOC,IAEJE,CACT,C,mEClBA,eACA,WAEA,SAASK,EAAsBR,GAC7B,IAAMS,GAAM,IAAAC,UAQZ,OAJK,IAAAL,SAAQL,EAAOS,EAAIE,WACtBF,EAAIE,QAAUX,GAGTS,EAAIE,OACb,CAEA,mBAA6CC,EAAUC,IACrD,IAAAxC,WAAUuC,EAAUC,EAAaC,IAAIN,GACvC,C,iZCjBA,WAWA,WAYA,WACA,WACA,WAMA,WAEA,WAMA,cACA,cACA,aACA,WACA,cACA,cACA,cACA,cACA,WACA,cACA,cAEMO,GAAY,IAAAC,iBAAgB,CAChCC,cAAe,CACbC,gBAAiB,EAAAC,2BAA2BnB,MAC5CoB,QAAS,OACTC,cAAe,UAEjBC,uBAAwB,CACtBC,SAAU,CAAC,kBACXC,UAAW,QAEbC,aAAc,CACZC,eAAgB,gBAChBC,QAAS,YACTC,OAAQ,eAEVC,gBAAiB,CACfH,eAAgB,gBAChBE,OAAQ,eAEVE,UAAW,CACTC,QAAS,KAiTb,UA7SyB,W,UACjBC,EAAUjB,IACV7B,GAAc,IAAA+C,kBACZ/D,GAAS,IAAAD,iBAAe,KAC1BiE,EAAgBC,OAAOC,aAAaC,QAAQ,aAAe,GAC3D,GAAkB,IAAAnC,UAAS,GAA1BoC,EAAI,KAAEC,EAAO,KACd,GAAwB,IAAArC,UAASgC,GAAhCM,EAAO,KAAEC,EAAU,KACpB,GAAoC,IAAAvC,WAAS,GAA5CwC,EAAa,KAAEC,EAAgB,KAChC,GAA8B,IAAAzC,UAAwB,IAArD0C,EAAU,KAAEC,EAAa,KAC1B,GAAwC,IAAA3C,UAAiB,GAAxD4C,EAAe,KAAEC,EAAkB,KACpC,GAAgD,IAAA7C,UAAyB,OAAxE8C,EAAmB,KAAEC,EAAsB,KAE5C,GAA8B,IAAA/C,UAAqB,CACvDgD,YAAa,GACbC,SAAU,GACVC,OAAQ,GACRC,SAAU,KAJLC,EAAU,KAAEC,EAAa,KAO1BC,EAAe,WACnB,OAAAD,EAAc,CAAEL,YAAa,GAAIC,SAAU,GAAIC,OAAQ,GAAIC,SAAU,IAArE,EAEII,IACc,QAAjB,EAAAH,EAAWF,cAAM,eAAEM,SACO,KAA3BJ,EAAWJ,eACS,QAAnB,EAAAI,EAAWH,gBAAQ,eAAEO,WACF,QAAnB,EAAAJ,EAAWD,gBAAQ,eAAEK,QAElB,GAQF,IAAAC,uBAPSC,EAAuB,YAC3BC,EAAqB,QACnBC,EAAuB,UAChC,IAAAC,KAAA,cAAiF,CAC/EC,sBAAuB,GACvBC,oBAAqB,IACtB,EAH8BC,GAAY,yBAAuBC,GAAU,uBAMxEC,GAAuB,CAC3B,OACA,oBACA,wBACA,gBACA,0BACA,UAGIC,GAAa,WACjB,OAAAD,GAAqBtB,GAAmB,IAAME,CAA9C,EAEI,IAMF,IAAAsB,qBAAoBhC,EAAME,EAASc,EAAYe,MALjDE,GAAS,aACTC,GAAK,SACLC,GAAO,WACPC,GAAU,cACV,MAAAX,KAAAA,QAAI,IAAG,IAAEA,KAAM,GAAIY,KAAM,CAAEC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAAK,GAGzD,IAAqD,IAAAC,4BACzD7F,EACAoD,EACAE,EACAc,EACAe,MALmBW,GAAU,eAAaC,GAAU,aAQhD,IACJ,IAAAC,+BAA8BhG,EAAaoD,EAAME,EAASc,EAAYe,MADnDc,GAAoB,eAAaC,GAAe,aAG/DC,GAAwB,SAACC,GAC7B,OAAAH,GAAqB,CAAEG,KAAMA,EAAMC,aAAa,GAAhD,EAGIC,GAAoBP,IAAcP,IAAcd,GAA2BwB,GAE3EK,GAAuB,SAACC,EAAGC,GAAY,OAAApD,EAAQoD,EAAR,EAEvCC,GAAmC,SAACF,EAAGG,EAAYF,GAEvDvD,aAAa0D,QAAQ,UAAWD,EAAWE,YAC3CtD,EAAWoD,GACXtD,EAAQoD,EACV,EAeMK,GAAgB,CACpB,OACA,eACA,WACA,WACA,qBACA,UAGIC,GAAgB,SAACC,GAAY,MAAK,OAA8C,QAA9C,EAAA/B,GAAWgC,MAAK,SAAC,G,IAAEC,EAAK,QAAO,OAAAF,IAASE,CAAT,WAAe,eAAEC,IAAI,EAY5F,GAAI5B,GAAS,MAAMD,GACnB,GAAIV,EAAyB,MAAMD,EAGjC,OAEEE,GAAI,KAFAuC,QAAW,IAAG,MAAE,GACd,GACNvC,GAAI,WADEa,QAAK,IAAG,KAAC,GAGb2B,IAAa,IAAAC,cACjB,SAACC,GAAoC,OACnC,CACEC,MAAO,SACPC,QAAS,WACP,OAAA3B,GAAWyB,aAAO,EAAPA,EAASnB,MAAM3G,MAAK,WAEzB2D,EAAO,GAAKsC,GAAQpC,EAAU,GAAKF,IAASsC,GAAQ,GAAKpC,GAAY,GACvED,EAAQD,EAAO,EAEnB,GALA,GAOJ,CACEsE,WAAYpB,GACZkB,MAAO,OACPC,QAAS,WACP9D,EAAc,CAAC4D,IACf9D,GAAiB,EACnB,GAEF,CACEiE,WAAYpB,IAAwC,aAAnBiB,aAAO,EAAPA,EAASI,QAC1CH,MAAO,iBACPC,QAAS,WAAM,OAAAtB,GAAsBoB,aAAO,EAAPA,EAASnB,KAA/B,GAtBkB,GAyBrC,CAACE,KAGGsB,GAAwB,IAAVlC,GAEpB,OAAIkC,IAAerD,IAAgBc,IAE/B,SAAC,EAAA1F,SAAQ,qBAAkB2G,GAAiB,yBAAyB,qBAAmB,WACtF,SAAC,UAAe,CAAC/B,YAAaA,EAAaD,aAAcA,QAK7D,UAAC,EAAAuD,KAAI,qBACcvB,GAAiB,yBACX,oBACvBwB,UAAWF,GAAc9E,EAAQV,uBAAyBU,EAAQf,eAAa,YAE/E,SAAC,UAAgB,CACfgG,OAAQrE,EACRsE,KAAMxE,EACNyE,UAAW,WACTxE,GAAiB,GACjBE,EAAc,GAChB,KAEF,UAAC,EAAAuE,KAAI,GAACJ,UAAWhF,EAAQP,cAAY,YACnC,SAAC,UAAkB,CACjB8C,UAAWA,GACXhB,cAAe,SAAC0D,GACd1D,EAAc0D,GACd1E,EAAQ,EACV,EACAe,WAAYA,KAEd,SAAC,EAAA+D,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMR,IAAW,WACrB,SAAC,EAAAS,WAAU,CACTC,GAAG,oBACHC,SAAS,wBACTC,iBAAiB,SACjBd,WAAYrC,GACZoD,UAAW/C,GACXpC,QAASA,EACTF,KAAMA,EACNmD,UAAWA,GACXmC,WAAS,EACThC,gBAAiBA,eAKzB,SAAC,UAAI,GAAC0B,MAAO/C,IAAS,WACpB,SAAC,EAAAwC,KAAI,GAACC,UAAWhF,EAAQf,eAAa,WACpC,SAAC,EAAA4G,cAAa,CACZC,QAAStF,EACTuF,QAAS/B,GAActC,OACvBsE,QAAS,EAAAC,aAAaC,iBAI5B,SAAC,UAAI,GAACZ,KAAMR,IAAevC,IAAS,WAClC,iCACE,UAAC,EAAA4D,gBAAe,gBACH,4BACXC,OAAO,4BACPJ,QAAQ,WAAS,YAEjB,SAAC,EAAAK,MAAK,WACJ,UAAC,EAAAC,GAAE,WACAtC,GAAclF,KAAI,SAACyH,EAAcC,GAAU,OAC1C,SAAC,EAAAC,GAAE,GAA+BC,MA3I9BC,EA2I+CH,EA3IN,CAC3DI,OAAQ,CACNJ,MAAO1F,EACP+F,UAAW7F,EACX8F,iBAAkB,OAEpBC,OAAQ,SAACC,EAAQR,EAAOK,GACtB9F,EAAmByF,GACnBvF,EAAuB4F,EACzB,EACAF,YAAW,KAiI4D,UACtDJ,IADMA,EAAe,UA3IrB,IAACI,CA0IsC,KAK5C,SAAC,EAAAF,GAAE,WACD,SAAC,EAAA3J,QAAO,CAACC,KAAK,KAAKiI,UAAWxB,GAAoB,GAAKxD,EAAQF,oBAIrE,SAAC,EAAAmH,MAAK,UACH3C,GAAYxF,KAAI,SAAC2F,GAEd,IAzHkByC,EANV/F,EA+HRmC,EAMEmB,EAAO,KALTJ,EAKEI,EAAO,KAJT0C,EAIE1C,EAAO,IAHT2C,EAGE3C,EAAO,kBAFTzC,EAEEyC,EAAO,sBADT4C,EACE5C,EAAO,wBACX,OACE,UAAC,EAAA6B,GAAE,YACD,UAAC,EAAAgB,GAAE,WACAjD,GACD,mBACA,SAAC,UAAmB,CAACkD,KAAMJ,QAE7B,SAAC,EAAAG,GAAE,UAAErD,GAAcmD,MACnB,SAAC,EAAAE,GAAE,WA9IGnG,EA8Ica,EA7IpCE,GACGsF,QAAO,SAAC,G,IAAEpD,EAAK,QAAO,OAAAjD,aAAQ,EAARA,EAAUsG,SAASrD,EAAnB,IACtBtF,KAAI,SAAC,GAAa,OAAP,MAAO,IAClB4I,KAAK,UA2IQ,SAAC,EAAAJ,GAAE,WACD,SAAC,UAAY,CAAC7C,QAASA,OAEzB,SAAC,EAAA6C,GAAE,WA5IaJ,EA4IcG,EA3IrC,KAATH,QAAwBS,IAATT,EAAqB,SAAU,aAAMA,GAAMU,cA4I1C,SAAC,EAAAN,GAAE,WACD,SAAC,UAAU,CAAC7C,QAASA,EAASoD,aAAcxE,QAE9C,SAAC,EAAAiE,GAAE,GAACQ,cAAY,cACd,SAAC,UAAkB,GACjBC,QACqB,YAAnBtD,aAAO,EAAPA,EAASI,QACL,+BACA,mEAENmD,OAAO9L,aAAI,EAAJA,EAAM+L,QAA6B,aAApBxD,aAAO,EAAPA,EAASI,QAC/BqD,aAAW,cAEX,SAAC,EAAAC,cAAa,CAACC,MAAO7D,GAAWE,aAzB9BnB,EA8Bb,WAGJ,UAAC,EAAA8B,KAAI,GAACJ,UAAWhF,EAAQH,iBAAe,YACtC,SAAC,EAAAwF,SAAQ,KACT,SAAC,EAAAA,SAAQ,WACP,SAAC,EAAAE,WAAU,CACTC,GAAG,uBACHC,SAAS,2BACTC,iBAAiB,SACjBC,UAAW/C,GACXpC,QAASA,EACTF,KAAMA,EACNmD,UAAWA,GACXuC,QAAS,EAAAqC,kBAAkBC,OAC3B1E,gBAAiBA,kBAM3B,SAAC,UAAI,GAAC0B,MAAOR,IAAevC,IAAS,WACnC,SAAC,UAAe,CAACd,YAAaA,EAAaD,aAAcA,UAIjE,C,w+DCtXA,WAeA,WAKA,WACA,WACA,WACA,WACA,WACA,cACA,WASA,WACA,cACA,WAOA,aACA,WACA,cACA,WACA,WACA,cACA,cAMMzC,GAAY,IAAAC,iBAAgB,CAChCuJ,YAAa,CACXC,WAAY,OACZC,MAAO,EAAAC,iBAAiB1K,OAE1B2K,iBAAkB,CAChB,UAAW,CACTC,WAAY,mBAGhBC,aAAc,CACZtJ,SAAU,CAAC,qBACXuJ,OAAQ,UACRC,aAAc,iBACd,OAAQ,CACNN,MAAO,EAAAO,kBAAkBhL,MAAQ,aACjC2B,QAAS,mBAEX,QAAS,CACPsJ,KAAM,EAAAD,kBAAkBhL,MAAQ,aAChC2B,QAAS,KAGbuJ,UAAW,CACT,OAAQ,CACN,qBAAsB,CAAEJ,OAAQ,WAChCnJ,QAAS,oBAGbwJ,eAAgB,CACd5J,SAAU,CAAC,qBACXI,QAAS,gCAEXyJ,aAAc,CACZ7J,SAAU,CAAC,qBACX,WAAY,CACVI,QAAS,QAGb0J,oBAAqB,CACnBC,aAAc,QAEhBC,WAAY,CACVC,YAAa,OACbC,WAAY,mBAEdC,aAAc,CACZtK,QAAS,iBACTM,eAAgB,YAElBiK,iBAAkB,CAChBhK,QAAS,0BAEXiK,YAAa,CACX,uBAAwB,CACtBC,oBAAqB,yBAKrBC,EAA8B,CAClCzF,KAAM,GACN8C,IAAK,GACL4C,OAAQ,GACR7F,KAAM,MACN/C,SAAU,CAAC,OACX6I,YAAY,EACZC,UAAU,EACVC,sBAAsB,GAGlBC,EAAsB,CAAE9F,MAAM,EAAO8C,KAAK,EAAO4C,QAAQ,GAglB/D,UA9kBmB,SAAC,G,MAAcK,EAAgB,aAC1C,GAAoC,IAAAnO,iBAAlCoO,EAAuB,0BAAEnO,EAAI,OAC/B,GAAgC,IAAAgC,WAAS,GAAxCoM,EAAW,KAAEC,EAAc,KAC5B,GAAsC,IAAArM,WAAS,GAA9CsM,EAAc,KAAEC,EAAiB,KAClC,GAA8B,IAAAvM,UAAwB,CAAC,KAAtDwM,EAAU,KAAEC,EAAa,KAC1B3K,EAAUjB,IACV7B,GAAc,IAAA+C,kBACd2K,GAAS,IAAAC,WAAU,CACvBC,cAAe,CAAChB,GAChBiB,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,IAAAC,wBAClBC,eAAgB,CAAChB,GACjBiB,SAAU,WAAM,IAGZC,EAAe,SAAC7E,EAAexI,GACnCyM,GAAkB,GAClB,IAAMa,EAAW,KAAsBZ,GAAU,GACjDY,EAAY9E,GAASxI,EACrB2M,EAAcW,EAChB,EAEM,GAA+C,IAAAC,kBAA7CC,EAAW,cAAaC,EAAgB,YAE1CC,GAAsB,aAAYhB,EAAY,KAsC9C,EACJxN,EAAYyO,aAAuC,EAAAC,wBAA0B,CAAC,EADxE,IAAA3J,oBAAqBE,OAAU,IAAG,KAAE,EAAE,IAAAH,sBAAuBE,OAAY,IAAG,KAAE,GAGtF,IAAA7F,YAAU,WAvCe,IAAOwP,IAwCbH,EAxCgC,mC,wDAC7B,SAAMI,QAAQC,IAChC,KAAInB,EAAO3F,QAAM,GAAEnG,KAAI,SAAOmG,EAAQuB,GAAK,0C,yEACnCwF,EAAcH,EAAKrF,IACrB,IAAAyF,YAAWD,GACE,GAAMR,EAAYQ,IAD/B,M,OAGF,IAFME,EAAS,YAEAF,EAEb,OADAX,EAAa7E,EAAO0F,GACb,CAAP,WACKjH,GAAM,CACT8E,OAAQmC,KACH7B,GAA6C,KAAlBpF,EAAO8E,QAAmBiC,EACtD,CACE9B,wBACgC,QAA5B,EAAuB,QAAvB,EAAAiC,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,6BAEpC,CAAC,I,iBAIX,MAAO,CAAP,WACKnH,GAAM,CACT8E,OAAQiC,KACH3B,GAA6C,KAAlBpF,EAAO8E,QAAmBiC,EACtD,CACE9B,wBAAoD,QAA5B,EAAuB,QAAvB,EAAAiC,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,6BAExD,CAAC,I,0BA3BLd,EAAc,SAgCpBV,EAAOyB,UAAUf,G,UAQnB,GAAG,CAACI,IAEE,QAA+C,IAAAjO,UAAQ,WAC3D,IAAM6O,EAAqB,CAAC,EACtBC,EAAuB,CAAC,EAG9B,OAFApK,EAAWqK,SAAQ,SAAC,G,IAAEnI,EAAI,OAAED,EAAK,QAAO,OAACkI,EAAmBjI,GAAQD,CAA5B,IACxClC,EAAasK,SAAQ,SAAC,G,IAAEnI,EAAI,OAAED,EAAK,QAAO,OAACmI,EAAqBlI,GAAQD,CAA9B,IACnC,CAAEkI,mBAAkB,EAAEC,qBAAoB,EACnD,GAAG,CAACpK,EAAYD,IANRoK,GAAkB,sBAAEC,GAAoB,wBAU1CE,GAAa,WACjBlC,GAAe,GACfK,EAAO8B,WAAW,CAACvC,IACnBS,EAAO+B,YACPhC,EAAc,CAAC,IACjB,EAEM,IAAmD,IAAAiC,oBACvD1P,GACA,IAAA2P,sBAAqBjC,EAAO3F,SAFT6H,GAAU,eAAaC,GAAQ,aAK9CC,GAA+C,IAAzBpC,EAAO3F,OAAOvD,OAEpCuL,IAAerC,EAAO3F,OAAOiI,MAAK,SAAC,GAAiB,OAAP,UAAO,IAOpDC,GAAiB,SAAC3G,EAAe4G,EAAUxO,GAC/C6L,GAAkB,GAClB,IAAMa,EAAc,EAAH,GAAOV,EAAO3F,QAAM,GACrCqG,EAAY9E,GAAS,EAAH,KAAQ8E,EAAY9E,IAAW4G,GACjDxC,EAAOyB,UAAUf,GAAa3O,KAAKiC,EACrC,EA0BMyO,GAAqB,SACzB7G,EACA8G,G,UAEMtP,KAA8B,QAApB,EAAA4M,EAAO3F,OAAOuB,UAAM,eAAG8G,IACjCC,KAA+B,QAApB,EAAA3C,EAAO2C,OAAO/G,UAAM,eAAG8G,IAClCE,EAA+B,QAArB,EAAA5C,EAAO4C,QAAQhH,UAAM,eAAG8G,GACxC,QAAQ,GACN,KAAKC,GAAUC,EACb,MAAO,QACT,IAAe,WAAVF,EACH,MAAO,UACT,KAAKtP,GAASwP,EACZ,MAAO,UACT,QACE,MAAO,UAEb,EAIMC,GAA8C,W,MAC5CC,GAAyB,QAAd,EAAA9C,EAAO4C,eAAO,eAAE9L,QAAS,GAAK,EACzC,EAAgBkJ,EAAO4C,QAAQE,IAAa,CAAC,EAA3CrJ,EAAI,OAAE8C,EAAG,MACjB,IAAK9C,IAAS8C,EAAK,CACjB,IAAMwG,EAAiB,EAAH,GAAO/C,EAAO4C,SAAO,GACzCG,EAAeD,GAAY,EAAH,KAAQC,EAAeD,IAAS,CAAErJ,MAAM,EAAM8C,KAAK,IAC3EyD,EAAO8B,WAAWiB,E,CAEtB,EAEIC,IAAkB,aAAYhD,EAAO3F,SAAW,GAE9C,IAIF,IAAA4I,0BAHWC,GAAmB,eAC1B3B,GAAc,QACT4B,GAAY,cAGzB,cAAqB,WAEnB,GAAIzD,EAAa,CACXsD,GAAgBlM,SAAWkJ,EAAO3F,OAAOvD,SAAQkM,GAAkBhD,EAAO3F,QAC9E,IAAM,EAAmB,EAAH,GAAO2F,EAAO4C,SAAO,GAC3CM,GACEF,GAAgB9O,KAAI,SAAC,EAA6C0H,G,UAA3CnC,EAAI,OAAE8C,EAAG,MAAE4C,EAAM,SAAEG,EAAoB,uBAU5D,QAT4B,QAAvB,IAAiB1D,UAAM,eAAEnC,OAAQA,IACpC,EAAiBmC,GAAS,EAAH,KAAQ,EAAiBA,IAAM,CAAEnC,MAAM,OAEpC,QAAvB,IAAiBmC,UAAM,eAAEW,MAAOA,IACnC,EAAiBX,GAAS,EAAH,KAAQ,EAAiBA,IAAM,CAAEW,KAAK,OAEnC,QAAvB,IAAiBX,UAAM,eAAEuD,SAAUA,IACtC,EAAiBvD,GAAS,EAAH,KAAQ,EAAiBA,IAAM,CAAEuD,QAAQ,KAE3D,CACL1F,KAAI,EACJ8C,IAAG,EACH6G,QAASjE,EACTkE,sBAAuB/D,EAE3B,KACAvN,MAAK,SAAOuR,GAAc,0C,0DACL,SAAMtD,EAAOuD,aAAaP,K,cAAzCQ,EAAe,SACfC,GAAkB,IAAAC,mBAAkBJ,EAAgBE,GAC1DxD,EAAO2D,UAAUF,GACjB5D,GAAkB,GAClBG,EAAO8B,WAAW,G,cAGxB,GAAG,CAACkB,GAAiBA,GAAgBlM,OAAQ4I,IAE7C,IAAMkE,GAAW,SAAChI,G,OACQ,QAApB,EAAAoE,EAAO3F,OAAOuB,UAAM,eAAEyD,WACxBkD,GAAe3G,EAAO,EAAF,KAAOoE,EAAO3F,OAAOuB,IAAM,CAAEyD,UAAU,KAC3DwD,MACKN,GAAe3G,EAAO,EAAF,KAAOoE,EAAO3F,OAAOuB,IAAM,CAAEyD,UAAU,IACpE,EA6CQwE,IAAW,IAAAC,mBAAiB,OAE9BlL,GAAoBiI,GAAoBsB,IAAYgB,KAAiBvD,EAE3E,OACE,iCACE,SAAC,UAAkB,GACjBzC,QAAQ,mEACRC,OAAO9L,aAAI,EAAJA,EAAM+L,OACbC,aAAW,cAEX,SAAC,EAAAyG,OAAM,GACLnJ,GAAG,4BACHY,OAAO,wBACPJ,QAAQ,UACRpB,WAAYwF,EACZzF,QAhMkB,WAAM,OAAA4F,GAAgBD,EAAhB,GAgME,mCAK7BA,GACC,SAAC,EAAAsE,MAAK,GACJC,SAAS,MACT7I,QAAS,EAAA8I,aAAaC,OACtBrK,MAAM,0BACN0B,OAAO,wBACP4I,UAAWxL,GACXyL,MACE,SAAC,EAAAC,QAAO,GACNC,eAAe,qDACfC,aAAa,sFAAkE,WAE/E,SAAC,EAAAT,OAAM,GAAC3I,QAAQ,QAAO,aAAY,QAAM,WACvC,SAAC,EAAAqJ,2BAA0B,UAIjC9G,aACE,gBAAGvD,UAAWhF,EAAQuI,aAAW,yFAInC+G,QAAM,EACNC,QAAS9C,GACT+C,QACE,UAAC,EAAAC,MAAK,YACJ,SAAC,EAAAC,UAAS,WACR,SAAC,EAAAf,OAAM,GACL/J,YAAagG,EAAO+E,SAAW/E,EAAO3F,OAAOvD,OAAS,GACtDsD,UAAWhF,EAAQqJ,oBACnBrD,QAAQ,OACRrB,QAtMM,WACpBiG,EAAO8B,WAAW,EAAD,KAAK9B,EAAO4C,SAAS,GAAF,CAAErD,IAAmB,IACzDS,EAAOyB,UAAU,EAAD,KACXzB,EAAO3F,OAAOnG,KAAI,SAAC8Q,GAAS,cAAMA,GAAI,CAAE3F,UAAU,GAAtB,KAA+B,IAC9DH,I,IAEFW,GAAkB,EACpB,EAgMgBoF,MAAM,SAAC,EAAAC,eAAc,IACrB1J,OAAO,WAAS,yCAKpB,UAAC,EAAAsJ,UAAS,YACR,SAAC,EAAAf,OAAM,GACL3J,UAAWhF,EAAQuJ,WAEnBnD,OAAO,aACPJ,QAAQ,UACRzD,UAAWiB,GACXoB,YACG4F,IACAI,EAAO+E,SACRnM,KACa,QAAb,EAAAoH,EAAO3F,cAAM,eAAEvD,WAAWkM,cAAe,EAAfA,GAAiBlM,QAE7CiD,QAAS,WAAM,OAAAmI,KAAanQ,KAAK8P,GAAlB,GAA6B,mBAVxC,YAcN,SAAC,EAAAkC,OAAM,GAAc3I,QAAQ,OAAOrB,QAAS8H,GAAYrG,OAAO,gBAAc,qBAAlE,iBAIR,WAGV,UAAC,EAAAD,gBAAe,gBAAY,2BAA2BC,OAAO,mBAAiB,YAC7E,SAAC,UAAI,GAACd,KAAM0H,IAAmB,WAC7B,SAAC,EAAA/F,MAAK,GAAC8I,WAAY9C,IAAW,WAC5B,UAAC,EAAA3G,GAAE,GAAC3B,QApPM,WACtBiG,EAAOyB,UAAU,EAAD,GAAKzB,EAAO3F,OAAOnG,KAAI,SAAC8Q,GAAS,cAAMA,GAAI,CAAE3F,UAAWgD,IAAvB,KAAsC,IACvFQ,IACF,EAiP4CzI,UAAWhF,EAAQ6I,cAAY,YAC3D,SAAC,EAAAvB,GAAE,CACDtC,UAAWhF,EAAQoJ,aACnBtB,cAAY,EACZkI,OAAQ,CACNC,SAAU,EACVF,WAAY9C,OAGhB,SAAC,EAAA3F,GAAE,GAAC4I,UAAU,mBAAiB,UAAEjD,GAAc,eAAiB,0BAIrErC,EAAO3F,OAAOnG,KACb,SACE,EACA0H,G,sBADEyD,EAAQ,WAAE5F,EAAI,OAAE8C,EAAG,MAAEjD,EAAI,OAAE6F,EAAM,SAAE5I,EAAQ,WAAE6I,EAAU,aAAEE,EAAoB,uBAE5E,OACH,UAAC,EAAAjD,MAAK,GAAa8I,WAAY/C,QAAsBrF,EAAYsC,GAAQ,YACvE,SAAC,UAAI,GAAC3E,KAAM0H,IAAmB,WAC7B,UAAC,EAAA1G,GAAE,GAACtB,UAAWhF,EAAQkJ,WAAS,YAC9B,SAAC,EAAA5B,GAAE,CACD3C,QAAS,WAAM,OAAA6J,GAAShI,EAAT,EACfxB,UAAWhF,EAAQoJ,aACnBtB,cAAY,EACZkI,OAAQ,CACNC,SAAUzJ,EACVuJ,WAAY9F,MAGhB,SAAC,EAAA3C,GAAE,GAAC6I,MAAO,GAAIxL,QAAS,WAAM,OAAA6J,GAAShI,EAAT,EAAiB0J,UAAW7L,GAAI,UAC3DA,GAAQ,kBAEX,SAAC,EAAAiD,GAAE,GAAC3C,QAAS,WAAM,OAAA6J,GAAShI,EAAT,EAAiB0J,UAAU,YAAU,WACtD,SAAC,UAAe,CACd1C,QAAS5C,EAAO4C,QAAQhH,GACxB+G,OAAQ3C,EAAO2C,OAAO/G,SAG1B,SAAC,EAAAc,GAAE,GAAC4I,UAAU,eAAelL,UAAWhF,EAAQ0J,cAAY,WAC1D,SAAC,UAAI,GAACpE,KAA+B,IAAzBsF,EAAO3F,OAAOvD,QAAY,WACpC,SAAC,EAAAiN,OAAM,GACLhK,QAAS,WAAM,OAzQhB,SAAC6B,GACxB,IAAM4J,EAAYxF,EAAO3F,OACzBmL,EAAUC,OAAO7J,EAAO,GAExB,IAAM8J,EAAa1F,EAAO4C,QAC1B8C,EAAWD,OAAO7J,EAAO,GAEzB,IAAM+J,EAAY3F,EAAO2C,OACzBgD,EAAUF,OAAO7J,EAAO,GAExBoE,EAAO8B,WAAW4D,GAClB1F,EAAO2D,UAAUgC,GACjB3F,EAAOyB,UAAU+D,EACnB,CA4PyCI,CAAiBhK,EAAjB,EACfR,QAAQ,OACR6J,MAAM,SAAC,EAAAY,gBAAe,KAAG,oCAQnC,SAAC,EAAAnK,GAAE,GAACyJ,WAAY/C,QAAsBrF,EAAYsC,GAAQ,WACxD,SAAC,EAAA3C,GAAE,GACDoJ,QAAS,EACT1L,UACEgI,GAAsBhN,EAAQ2J,iBAAmB3J,EAAQmJ,gBAAc,WAGzE,UAAC,EAAAwH,KAAI,YACH,SAAC,EAAAC,UAAS,GACRxM,MAAM,OACNyM,YAAU,EACVC,QAAQ,YACRC,UAAW1D,GAAmB7G,EAAO,QACrCwK,kBAAuC,QAApB,EAAApG,EAAO2C,OAAO/G,UAAM,eAAEnC,MAAI,WAE7C,SAAC,EAAA4M,UAAS,CACRJ,YAAU,EACVrL,GAAG,OACHnB,KAAK,OACLD,MAAM,OACNgC,OAAO,aACP8K,KAAK,OACLH,UAAW1D,GAAmB7G,EAAO,QACrC2K,SAAU,SAACnT,GACTmP,GAAe3G,EAAO,CAAEnC,KAAMrG,GAChC,EACAA,MAAOqG,GAAQ,GACf+M,YAAY,mBAGhB,SAAC,EAAAR,UAAS,GACRxM,MAAM,MACNyM,YAAU,EACVC,QAAQ,MACRC,UAAW1D,GAAmB7G,EAAO,OACrCwK,kBAAuC,QAApB,EAAApG,EAAO2C,OAAO/G,UAAM,eAAEW,KAAG,WAE5C,SAAC,EAAA8J,UAAS,CACRJ,YAAU,EACVK,KAAK,MACLH,UAAW1D,GAAmB7G,EAAO,OACrC6K,OAAQ,WAAM,OA9NX,SAAC7K,G,0BACtBW,EAA0B,QAApB,EAAAyD,EAAO3F,OAAOuB,UAAM,eAAEW,IAClC,IACE,IAAA8E,YAAW9E,KACqB,SAAX,QAApB,EAAAyD,EAAO3F,OAAOuB,UAAM,eAAEtC,OAAuD,QAArC0G,EAAO3F,OAAOuB,GAAOrF,SAAS,IACvE,CACA,IAAM+C,EAC4B,SAAX,QAApB,EAAA0G,EAAO3F,OAAOuB,UAAM,eAAEtC,QAAsC,QAApB,EAAA0G,EAAO3F,OAAOuB,UAAM,eAAEtC,QACgB,QAA/E,EAAA/B,EAAWgC,MAAK,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIM,SAASpD,IAAS8C,EAAIM,SAASrD,EAAnC,WAA0C,eAAEA,QACjF,MAEEjD,EAA0B,GAC9B,IAAkC,QAA9B,EAAoB,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAErF,gBAAQ,eAAEO,SAA+C,QAArCkJ,EAAO3F,OAAOuB,GAAOrF,SAAS,GAC1EA,EAA+B,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAErF,aAC5B,CACL,IAAMmQ,EAEL,QAFkB,EAAApP,EAAaiC,MAC9B,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIM,SAASpD,IAAS8C,EAAIM,SAAS,IAAMrD,EAAzC,WACtB,eAAEA,MACCkN,IAAYnQ,EAAW,CAACmQ,KACxB,IAAAC,SAAQpQ,KAAWA,EAAW,CAAC,O,CAErC,IAAwB,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAEtC,QAASA,KAAS,IAAA7F,SAAQ8C,EAA8B,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAEtC,MAAO,CACzF,IAAMoH,EAAc,EAAH,GAAOV,EAAO3F,QAAM,GACrCqG,EAAY9E,GAAS,EAAH,KAAQ8E,EAAY9E,IAAW,CAAEtC,KAAI,EAAE/C,SAAQ,IACjEyJ,EAAOyB,UAAUf,E,EAGvB,CAmMwCkG,CAAqBhL,EAArB,EACd2K,SAAU,SAACnT,GACLmJ,IAAQnJ,GACVmP,GAAe3G,EAAO,CAAEW,IAAKnJ,GAEjC,EACAA,MAAOmJ,GAAO,GACdiK,YAAY,WACZ5L,GAAG,MACHnB,KAAK,MACLD,MAAM,MACNgC,OAAO,kBAGX,SAAC,EAAAwK,UAAS,GACRxM,MAAM,wBAAuB,aAClB,2BACXqN,WACE,SAAC,EAAAC,QAAO,GAAC3J,QAAQ,2DAAyD,WACxE,SAAC,EAAAsH,2BAA0B,CACzBrK,UAAU,aACVyD,MAAO,EAAAC,iBAAiB1K,WAI9B8S,QAAQ,QAAM,WAEd,SAAC,UAAc,CACb1K,OAAO,2BACPuL,aAAcC,SAASC,KACvBC,SAAU,gBAAkBtL,EAC5BuL,QAASC,OAAOC,KAAK3F,IACrBtG,QAAS,EAAAkM,cAAcC,OACvBC,aAAcJ,OAAOC,KAAK3F,IAAoBnI,MAC5C,SAACkO,GAAgB,OAAAnO,IAASoI,GAAmB+F,EAA5B,IAEnBC,YAAa,SAACtU,GACZ,OAAAmP,GAAe3G,EAAO,CAAEtC,KAAMoI,GAAmBtO,IAAjD,QAIN,SAAC,EAAA4S,UAAS,GACRxM,MAAM,sBAAqB,aAChB,yBACXqN,WACE,SAAC,EAAAC,QAAO,GAAC3J,QAAQ,yDAAuD,WACtE,SAAC,EAAAsH,2BAA0B,CACzBrK,UAAU,aACVyD,MAAO,EAAAC,iBAAiB1K,WAI9B8S,QAAQ,WAAS,WAEjB,SAAC,UAAc,CACb1K,OAAO,yBACPuL,aAAcC,SAASC,KACvBC,SAAU,mBAAqBtL,EAC/BuL,QAASC,OAAOC,KAAK1F,IACrBvG,QAAS,EAAAkM,cAAcK,eACvBH,aAAcJ,OAAOC,KAAK1F,IAAsB/E,QAAO,SAAC6K,GACtD,OAAAlR,aAAQ,EAARA,EAAUsG,SAAS8E,GAAqB8F,GAAxC,IAEFG,iBAAiBrR,aAAQ,EAARA,EAAUO,QAAS,GAAK,cACzC4Q,YAAa,SAACtU,GAAU,OAjQvB,SAACA,EAAiBwI,GAC3C,IAAIiM,EAAgBzU,EAAMc,KAAI,SAAC4T,GAAQ,OAAAnG,GAAqBmG,EAArB,IAClB,IAAjB1U,EAAM0D,QAAoD,QAApC+Q,EAAczU,EAAM0D,OAAS,KACrD+Q,EAAgB,CAAC,QAEfA,EAAc/Q,OAAS,GAAK+Q,EAAchL,SAAS,SACrDgL,EAAgBA,EAAcjL,QAAO,SAACkL,GAAQ,MAAQ,QAARA,CAAA,KAGhDvF,GAAe3G,EAAO,CACpBrF,SAAUsR,GAEd,CAqPkDE,CAAmB3U,EAAOwI,EAA1B,QAG5B,SAAC,EAAAoK,UAAS,GACRxM,MAAM,UACNqN,WACE,SAAC,EAAAC,QAAO,GAAC3J,QAAQ,qCAAmC,WAClD,SAAC,EAAAsH,2BAA0B,CACzBrK,UAAU,aACVyD,MAAO,EAAAC,iBAAiB1K,WAI9B8S,QAAQ,SACRC,UAAW1D,GAAmB7G,EAAO,UACrCwK,kBAAuC,QAApB,EAAApG,EAAO2C,OAAO/G,UAAM,eAAEuD,QAAM,WAE/C,SAAC,EAAA6I,WAAU,CACT5N,UAAWhF,EAAQ4J,YACnBmH,UAAW1D,GAAmB7G,EAAO,UACrChB,GAAG,kBAAiB,aACT,wBACX0L,KAAK,OACL2B,oBAAoB,iCACpBC,oBAAoB,4BACpB9U,MAAO0M,EAAWlE,GAClBjE,UAAWyH,EACX+I,YAAY,EACZC,aAAc,SAAChV,GAAU,OAAAqN,EAAa7E,EAAOxI,EAApB,EACzBiV,aAAc,SAACjV,GAAU,OAAAqN,EAAa7E,EAAOxI,EAApB,EACzBkV,aAAc,WAAM,OAAA7H,EAAa7E,EAAO,GAApB,EACpB2M,cAAe,CACbC,QAAS,EAAAC,cACTC,eAAgB,SAACC,GAAU,WAAAC,kBAAiBD,EAAO9E,GAAxB,GAE7BgF,0BAAwB,EACxBC,iBAAiB,eAGrB,SAAC,UAAI,GAACpO,KAAM+E,IAA4BN,GAAM,WAC5C,UAAC,EAAA6G,UAAS,GACRE,QAAQ,uBACR1M,MAAM,kBACNuP,UAAQ,eAER,SAAC,EAAAC,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAuH,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,4BAEhC5G,GAAG,4BACHnB,KAAK,4BACLD,MAAM,4BACNyP,WAAY3J,EACZiH,SAAU,WACR,OAAAhE,GAAe3G,EAAO,CAAE0D,sBAAsB,GAA9C,KAGJ,SAAC,UAAkB,GACjBlC,MAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAmE,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,4BAEhCrE,QAAQ,oFAAkF,WAE1F,SAAC,EAAA6L,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAuH,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,4BAEhC5G,GAAG,sCACHnB,KAAK,sCACLD,MAAM,oCACNyP,UAAW3J,EACXiH,SAAU,WACR,OAAAhE,GAAe3G,EAAO,CAAE0D,sBAAsB,GAA9C,0BAnNN1D,E,WAiOlB,KAKV,C,iUC7sBA,WAEA,WACA,WACA,WAEMsN,EAAM,EAAAC,wBAAwB/V,MAC9BgW,EAAQ,EAAAC,yBAAyBjW,MAEjCe,GAAY,IAAAC,iBAAgB,CAChC8U,IAAK,CAAErL,MAAOqL,EAAKI,WAAY,OAAQC,SAAU,QACjDH,MAAO,CAAEvL,MAAOuL,EAAOE,WAAY,OAAQC,SAAU,UA4DvD,UAvCwB,SAAC,G,IAAE3G,EAAO,UAAED,EAAM,SAAE6G,EAAO,UAC3CpU,EAAUjB,IAEVsV,EADW,CAAC,OAAQ,OACEC,OAAM,SAAC5B,GAAQ,OAAAlF,aAAO,EAAPA,EAAUkF,EAAV,IACrC6B,EAAWvC,OAAO/M,OAAOsI,GAAU,CAAC,GAAG+G,OAAM,SAAC5B,GAAQ,OAACA,CAAD,IACtD8B,EAAkBxC,OAAOC,KAAKzE,GAAW,CAAC,GAC7ChG,QAAO,SAAC6K,GAAQ,SAAE7E,aAAO,EAAPA,EAAU6E,GAAZ,IAChBnF,MAAK,SAACmF,GAAQ,OAAA9E,aAAM,EAANA,EAAS8E,EAAT,IAEjB,QAAQ,GACN,KAAK+B,EACH,OAAO,SAAC,EAAAtX,QAAO,CAACC,KAAK,OACvB,KAAKsX,GAAcE,EACjB,OACE,UAAC,EAAAnP,KAAI,GAACqP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAArP,SAAQ,GAACsP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAE,gBAAe,CAACnM,MAAOuL,QAE1B,SAAC,EAAA3O,SAAQ,WACP,mBAAML,UAAWhF,EAAQgU,OAAK,2BAItC,KAAKQ,EACH,OACE,UAAC,EAAApP,KAAI,GAACqP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAArP,SAAQ,GAACsP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAG,sBAAqB,CAACpM,MAAOqL,QAEhC,SAAC,EAAAzO,SAAQ,WACP,mBAAML,UAAWhF,EAAQ8T,KAAG,6BAIpC,QACE,OAAO,wBAEb,C,0+CCrEA,eACA,cAIA,cACA,WAaa,EAAAgB,UACX,sGAEW,EAAA7I,WAAa,SAACyG,GACzB,IAAKA,EAAK,OAAO,EACjB,IAAMqC,EAAQ,IAAIC,OAAO,EAAAF,WACzB,OAAOpC,EAAIuC,MAAMF,EACnB,EAEa,EAAAlI,qBAAuB,SAACqI,GACnC,OAAAA,EAAapW,KAAI,SAAC,GAAgE,OAChFuF,KADsB,OAEtB8C,IAF2B,MAG3BC,kBAHiC,OAIjCpF,sBAJ2C,WAK3CgM,QALmD,SAMnDC,sBANyE,uBAAO,GAAlF,EAuBW,EAAAK,kBAAoB,SAC/BJ,EACAE,GAEA,IAAM+G,EAlBmB,SAACjH,GAC1B,OAAAA,EAAepP,KAAI,SAAC,GAAE,IAAAqI,EAAG,MAAKiO,EAAI,IAAd,SAAqB,cACpCA,GAAI,CACPjO,IAAK,EAAF,KACEA,GAAG,CACN3E,OACG2E,aAAG,EAAHA,EAAK3E,SAAU2E,aAAG,EAAHA,EAAKkO,kBAIjBlO,aAAG,EAAHA,EAAK3E,MAHL,yDAAkD2E,aAAG,EAAHA,EAAKmO,UAAS,aAC9DnO,EAAM,UAAWA,EAAImO,WAAa,O,GAP9C,CAiB8BC,CAAmBrH,GAC3CX,EAAS4H,EAAsBrW,KAAI,SAAC,EAAgC0H,G,IAA9BnC,EAAI,OAAE8C,EAAG,MAAW4C,EAAM,UAAsB,mBAEtF1F,aAAI,EAAJA,EAAM7B,OAAQ,CAAE6B,KAAMA,aAAI,EAAJA,EAAM7B,OAAU,CAAC,IACvC2E,aAAG,EAAHA,EAAK3E,OAAQ,CAAE2E,IAAKA,aAAG,EAAHA,EAAK3E,OAAU,CAAC,IACpCuH,aAAM,EAANA,EAAQvH,OAAQ,CAAEuH,OAAQA,aAAM,EAANA,EAAQvH,OAAU,CAAC,GAE9C4L,EAAa5H,GAN0E,IAS5F,OAAI+G,EAAO+G,OAAM,SAACkB,GAAQ,WAAAjE,SAAQiE,EAAR,IACjB,GAGFjI,CACT,EAEa,EAAArC,qBAAuB,WAmBlC,OAjBAuK,EAAIC,UAAUD,EAAIE,OAAQ,kBAAkB,SAAUC,EAAcC,GAClE,OAAOC,KAAKC,KAAK,SAAUF,GAAS,SAAU7X,GAC5C,IAAKA,IAAUA,EAAM4X,GACnB,OAAO,EAET,GACEE,KAAKE,OAAOxO,QAAO,SAACyO,GAAM,OAAAA,IAAMjY,CAAN,IAAakP,MAAK,SAAC+I,GAAM,OAAAA,EAAEL,KAAkB5X,EAAM4X,EAA1B,IAEnD,MAAME,KAAKI,YAAY,CACrBC,KAAM,UAAGL,KAAKK,KAAI,YAAIP,KAI1B,OAAO,CACT,GACF,IAEOH,EAAIW,MACTX,EAAIE,SACDU,MAAM,CACLhS,KAAMoR,EAAIa,SAASC,IAAI,EAAG,cAAcC,IAAI,GAAI,aAAaC,SAAS,YACtEtP,IAAKsO,EAAIa,SAASnP,IAAI,eAAesP,SAAS,cAI/CC,eAAe,OAAQ,wBACvBA,eAAe,MAAO,wBAE7B,EAEa,EAAArD,cAAgB,KAChB,EAAAG,iBAAmB,SAACD,EAAe9E,GAC9C,IAAIlG,EAAc,gCACE,GAAhBgL,EAAM7R,OACR6G,EAAc,0CACLgL,EAAM,GAAGxW,KAAO,EAAAsW,gBACzB9K,EAAc,2BAA6B,EAAA8K,cAAgB,WAE7D5E,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,2CACP6D,YAAW,GAEf,C,6mBCtHA,WACA,WAUA,aACA,WACA,WACA,cAEA,WACA,WACA,cACA,cACA,WACA,WACA,WACA,cAQMxJ,GAAY,IAAAC,iBAAgB,CAChC6X,eAAgB,CACd3X,gBAAiB,EAAAC,2BAA2BnB,MAC5CwK,WAAY,QAEdhH,aAAc,CACZsV,WAAY,QAEdC,YAAa,CACXC,aAAc,OACdxN,YAAa,SAEfyN,WAAY,CACVxO,MAAO,EAAAyO,2BAA2BlZ,MAClC6Q,SAAU,WACVsI,IAAK,MACLC,KAAM,OACNC,cAAe,UAIbC,EAAe,CAAC,UAAW,UAAW,cAAe,SAgQ3D,UA7P2B,SAAC,G,IAAE/U,EAAS,YAAEhB,EAAa,gBAAED,EAAU,aAC1DtB,EAAUjB,IACR7C,GAAS,IAAAD,iBAAe,KAC1BiB,GAAc,IAAA+C,kBAEd,GAA8B,IAAA/B,UAAkB,YAA/CqZ,EAAU,KAAEC,EAAa,KAC1B,GAA8C,IAAAtZ,UAAS,CAAC,GAAvDuZ,EAAkB,KAAEC,EAAqB,KAC1C,GAAwC,IAAAxZ,UAAS,CAAC,GAAjDyZ,EAAe,KAAEC,EAAkB,KACpC,GAAgC,IAAA1Z,UAAS,IAAxCgD,EAAW,KAAE2W,EAAc,KAC5B,GAA0C,IAAA3Z,UAAmB,IAA5D4Z,EAAgB,KAAEC,EAAmB,KACtC,GAAsC,IAAA7Z,UAAmB,IAAxD8Z,EAAc,KAAEC,EAAiB,KAClC,GAA0C,IAAA/Z,UAAmB,IAA5Dga,EAAgB,KAAEC,EAAmB,KAEtC,EACJjb,EAAYyO,aAAuC,EAAAC,wBAA0B,CAAC,EADxE,IAAA3J,oBAAAA,OAAmB,IAAG,KAAE,EAAE,IAAAD,sBAAAA,OAAqB,IAAG,KAAE,EAGtDR,EAAe,WACnBqW,EAAe,IACfE,EAAoB,IACpBE,EAAkB,IAClBE,EAAoB,IACpB5W,EAAc,CAAEL,YAAa,GAAIC,SAAU,GAAIC,OAAQ,GAAIC,SAAU,IACvE,GAEA,IAAAhF,YAAU,WAGuB,IAA7BiF,EAAWF,OAAOM,QACa,IAA/BJ,EAAWH,SAASO,QACW,IAA/BJ,EAAWD,SAASK,QACO,KAA3BJ,EAAWJ,aACM,KAAhBA,GAC2B,IAA1B8W,EAAetW,QACa,IAA5BoW,EAAiBpW,QACW,IAA5BwW,EAAiBxW,QAEnBF,GAEJ,GAAG,CAACF,IAEE,OAKF,aAAY,CACdJ,YAAW,EACX4W,iBAAgB,EAChBE,eAAc,EACdE,iBAAgB,IARHE,EAAoB,cACfC,EAAyB,mBAC3BC,GAAuB,iBACrBC,GAAyB,mBAQvCC,GAAY,SAACtH,EAAcuH,GAC/B,IAAMC,EAAuB,SAATxH,EAAkBjP,EAAsBD,EAEtD2W,EAAwB,GAO9B,OANAF,EAAMjM,SAAQ,SAACnI,GACb,IAAMuU,EAAQF,EAAYvU,MAAK,SAAC8R,GAAM,OAAAA,EAAE5R,OAASA,CAAX,IAClCuU,GACFD,EAAOE,KAAKD,EAAMxU,MAEtB,IACOuU,CACT,GAEA,IAAAtc,YAAU,WACRkF,EAAc,CACZL,YAAakX,EACbjX,SAAUqX,GAAU,UAAWH,GAC/BjX,OAAQoX,GAAU,OAAQF,IAC1BjX,SAAUkX,IAEd,GAAG,CACDH,EACAC,EACAC,GACAC,KAGF,IAAMvV,GAAa,SAACwC,EAAYsT,EAAOC,GAGrCA,EAFoB,EAAH,GAAOD,GAAK,GACItR,QAAO,SAACwR,GAAS,OAAAA,IAASxT,CAAT,IAEpD,EAkFA,OAhFA,IAAAnJ,YAAU,WACR,IACE,IAAAkV,SAAQkG,KACR,IAAAlG,SAAQoG,IACuB,IAA/B1V,EAAoBP,QACa,IAAjCM,EAAsBN,OACtB,CACA,IAAM,EAAS,CAAC,EACV,EAAW,CAAC,EAClBO,EAAoBuK,SAAQ,SAACtI,GAAS,OAAC,EAAOA,EAAKG,MAAQH,EAAKE,KAA1B,IACtCpC,EAAsBwK,SAAQ,SAACyM,GAAY,OAAC,EAASA,EAAQ5U,MAAQ4U,EAAQ7U,KAAlC,IAC3CsT,EAAsB,GACtBE,EAAmB,E,CAEvB,GAAG,CAAC3V,EAAqBD,KAmEvB,UAAC,EAAAoD,KAAI,YACH,SAAC,EAAAC,SAAQ,WACP,UAAC,EAAA6T,WAAU,YACT,SAAC,EAAA7T,SAAQ,WACP,SAAC,UAAc,CACbyM,SAAS,0BACT1L,OAAO,cACPxB,WAAYrC,EACZwP,QA1KI,CAAC,WAAY,UAAW,eAAgB,UA2K5C/L,QAAS,EAAAkM,cAAcC,OACvBC,aAAcmF,EACdjF,YAAakF,EACbhF,gBAAgB,SAChB2G,YAAY,SAAC,EAAAC,WAAU,SAG3B,SAAC,EAAA/T,SAAQ,UAjFU,WACzB,OAAQkS,GACN,IAAK,WACH,OACE,UAAC,EAAAnS,KAAI,YACH,SAAC,EAAA6L,UAAS,CACRrM,WAAYrC,EACZiD,GAAG,SACHY,OAAO,gBACPgL,YAAY,qBACZpT,MAAOkD,EACPiQ,SAAU,SAACnT,GAAU,OAAA6Z,EAAe7Z,EAAf,EACrBgH,UAAWhF,EAAQ+W,eAErB,SAAC,EAAAsC,WAAU,CAACtc,KAAK,KAAKiI,UAAWhF,EAAQiX,gBAG/C,IAAK,UACH,OACE,SAAC,UAAc,CACbqC,gBAAgB,iBAChBxH,SAAS,gBACT1L,OAAO,iBACPxB,WAAYrC,EACZwP,QAASC,OAAOC,KAAKwF,GACrBzR,QAAS,EAAAkM,cAAcqH,SACvBnH,aAAc0F,EACdxF,YAAayF,EACbvF,gBAAgB,sBAGtB,IAAK,eACH,OACE,SAAC,UAAc,CACb8G,gBAAgB,sBAChBxH,SAAS,aACT1L,OAAO,cACPxB,WAAYrC,EACZwP,QAASC,OAAOC,KAAK0F,GACrB3R,QAAS,EAAAkM,cAAcqH,SACvBnH,aAAc4F,EACd1F,YAAa2F,EACbzF,gBAAgB,2BAGtB,IAAK,SACH,OACE,SAAC,UAAc,CACb8G,gBAAgB,gBAChBxH,SAAS,eACT1L,OAAO,gBACPxB,WAAYrC,EACZwP,QAASuF,EACTtR,QAAS,EAAAkM,cAAcqH,SACvBnH,aAAc8F,EACd5F,YAAa6F,EACb3F,gBAAgB,qBAGtB,QACE,OAAO,wBAEb,CAmBmBgH,WAGf,SAAC,EAAAnU,SAAQ,WACP,SAAC,UAAkB,GACjB0C,QAAQ,mEACRC,OAAO9L,aAAI,EAAJA,EAAM+L,OACbC,aAAW,cAEX,SAAC,UAAU,CAACtD,WAAYrC,UAG5B,SAAC,UAAI,GACH+C,OAEIwS,EAAiBpW,QACjBsW,EAAetW,QACfwW,EAAiBxW,QACF,IAAfR,IACD,WAGH,UAAC,EAAAmE,SAAQ,GAACoU,UAAW,CAAE/E,QAAS,aAAe1P,UAAWhF,EAAQ6W,gBAAc,YAC9E,SAAC,EAAA6C,UAAS,GAACC,aAAa,WAAS,UAC9B7B,EAAiBhZ,KAAI,SAACma,GAAY,OACjC,SAAC,EAAAW,KAAI,GAEHjV,QAAS,WAAM,OAAA3B,GAAWiW,EAASnB,EAAkBC,EAAtC,GAA0D,UAExEkB,IAHIA,EAF0B,QASrC,SAAC,EAAAS,UAAS,GAACC,aAAa,gBAAc,UACnC3B,EAAelZ,KAAI,SAACoF,GAAS,OAC5B,SAAC,EAAA0V,KAAI,GAAYjV,QAAS,WAAM,OAAA3B,GAAWkB,EAAM8T,EAAgBC,EAAjC,GAAmD,UAChF/T,IADQA,EADiB,QAMhC,SAAC,EAAAwV,UAAS,GAACC,aAAa,UAAQ,UAC7BzB,EAAiBpZ,KAAI,SAAC+F,GAAW,OAChC,SAAC,EAAA+U,KAAI,GAEHjV,QAAS,WAAM,OAAA3B,GAAW6B,EAAQqT,EAAkBC,EAArC,GAAyD,UAEvEtT,IAHIA,EAFyB,OASnB,KAAhB3D,IACC,SAAC,EAAAwY,UAAS,GAACC,aAAa,YAAU,WAChC,SAAC,EAAAC,KAAI,GAAmBjV,QAAS,WAAM,OAAAkT,EAAe,GAAf,GAAkB,UACtD3W,IADO,mBAKc,KAAzBkX,GAA+C,KAAhBlX,MAC9B4W,aAAgB,EAAhBA,EAAkBpW,YAClBsW,aAAc,EAAdA,EAAgBtW,YAChBwW,aAAgB,EAAhBA,EAAkBxW,WACpB,SAAC,EAAAiN,OAAM,GAAC3J,UAAWhF,EAAQwB,aAAcmD,QAASnD,EAAcwE,QAAQ,OAAO2N,UAAQ,yCAQnG,C,w+DClTA,WAeA,WACA,WACA,WAKA,WACA,WACA,WACA,cACA,cACA,WAOA,aACA,WACA,WAOA,cACA,WAMA,WACA,cACA,WACA,WACA,cAEMK,EAAQ,EAAAC,yBAAyBjW,MAEjCe,GAAY,IAAAC,iBAAgB,CAChCuJ,YAAa,CACXC,WAAY,OACZC,MAAO,EAAAC,iBAAiB1K,OAE1B2K,iBAAkB,CAChB,UAAW,CACTC,WAAY,mBAGhBC,aAAc,CACZtJ,SAAU,CAAC,qBACXuJ,OAAQ,UACRC,aAAc,iBACd,OAAQ,CACNN,MAAO,EAAAO,kBAAkBhL,MAAQ,aACjC2B,QAAS,oBAEX,QAAS,CACPsJ,KAAM,EAAAD,kBAAkBhL,MAAQ,aAChC2B,QAAS,KAGbuJ,UAAW,CACT,OAAQ,CACN,qBAAsB,CAAEJ,OAAQ,WAChCnJ,QAAS,qBAGbwJ,eAAgB,CACd5J,SAAU,CAAC,qBACXI,QAAS,gCAEXyJ,aAAc,CACZ7J,SAAU,CAAC,qBACX,WAAY,CACVI,QAAS,QAGb4J,WAAY,CACVC,YAAa,OACbC,WAAY,mBAEdE,iBAAkB,CAChBhK,QAAS,0BAEXiK,YAAa,CACX,uBAAwB,CACtBC,oBAAqB,yBA0f3B,UArfyB,SAAC,G,IAAE5E,EAAM,SAAEC,EAAI,OAAEC,EAAS,YACjD,IAAKD,EAAM,OAAO,wBACV,IAAAmF,GAA4B,IAAApO,iBAAe,wBAC7C6O,GAAgB,IAAA+O,0BAAyB5U,GACzC,GAAsC,IAAA/G,WAAS,GAA9CsM,EAAc,KAAEC,EAAiB,KAClC,GAA8B,IAAAvM,UAClC4M,EAAchM,KAAI,SAAC,GAAe,OAAP,QAAO,KAD7B4L,EAAU,KAAEC,EAAa,KAG1B3K,EAAUjB,IACV7B,GAAc,IAAA+C,kBACd2K,GAAS,IAAAC,WAAU,CACvBC,cAAeA,EACfC,gBAAgB,EAChBC,kBAAkB,EAClBC,kBAAkB,IAAAC,wBAClBC,eAAgBlG,EAAOnG,KAAI,WAAM,OAAGuF,MAAM,EAAM8C,KAAK,EAApB,IACjCiE,SAAU,WAAM,IAGZ0O,GAAoB,IAAArc,UACxB,WAAM,QAAC,IAAAY,SAAQyM,EAAeF,EAAO3F,OAA/B,GACN,CAAC6F,EAAeF,EAAO3F,SAGnBoG,EAAe,SAAC7E,EAAexI,GACnCyM,GAAkB,GAClB,IAAMa,EAAW,KAAsBZ,GAAU,GACjDY,EAAY9E,GAASxI,EACrB2M,EAAcW,EAChB,EACM,GAA+C,IAAAC,kBAA7CC,EAAW,cAAaC,EAAgB,YAE1CC,GAAsB,aAAYhB,EAAY,KAuC9C,EACJxN,EAAYyO,aAAuC,EAAAC,wBAA0B,CAAC,EADxE,IAAA3J,oBAAqBE,OAAU,IAAG,KAAE,EAAE,IAAAH,sBAAuBE,OAAY,IAAG,KAAE,GAGtF,IAAA7F,YAAU,WAxCe,IAAOwP,IAyCbH,EAzCgC,mC,wDAC7B,SAAMI,QAAQC,IAChC,KAAInB,EAAO3F,QAAM,GAAEnG,KAAI,SAAOmG,EAAQuB,GAAK,0C,yEACnCwF,EAAcH,EAAKrF,IACrB,IAAAyF,YAAWD,GACE,GAAMR,EAAYQ,IAD/B,M,OAGF,IAFME,EAAS,YAEAF,EAEb,OADAX,EAAa7E,EAAO0F,GACb,CAAP,WACKjH,GAAM,CACT8E,OAAQmC,KACH7B,GAA6C,KAAlBpF,EAAO8E,QAAmBiC,EACtD,CACE9B,wBACgC,QAA5B,EAAuB,QAAvB,EAAAiC,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,6BAEpC,CAAC,I,iBAKX,MAAO,CAAP,WACKnH,GAAM,CACT8E,OAAQiC,KACH3B,GAA6C,KAAlBpF,EAAO8E,QAAmBiC,EACtD,CACE9B,wBAAoD,QAA5B,EAAuB,QAAvB,EAAAiC,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,6BAExD,CAAC,I,0BA5BLd,EAAc,SAiCpBV,EAAOyB,UAAUf,G,UAQnB,GAAG,CAACI,IAEE,OAA+C,IAAAjO,UAAQ,WAC3D,IAAM6O,EAAqB,CAAC,EACtBC,EAAuB,CAAC,EAG9B,OAFApK,EAAWqK,SAAQ,SAAC,G,IAAEnI,EAAI,OAAED,EAAK,QAAO,OAACkI,EAAmBjI,GAAQD,CAA5B,IACxClC,EAAasK,SAAQ,SAAC,G,IAAEnI,EAAI,OAAED,EAAK,QAAO,OAACmI,EAAqBlI,GAAQD,CAA9B,IACnC,CAAEkI,mBAAkB,EAAEC,qBAAoB,EACnD,GAAG,CAACpK,EAAYD,IANRoK,EAAkB,qBAAEC,GAAoB,uBAQ1CE,GAAa,WACjBtH,IACAyF,EAAO+B,YACPhC,EAAc,CAAC,IACjB,EAEM,IAAqD,IAAAoP,qBACzD7c,GACA,IAAA8c,0BAAyBpP,EAAO3F,SAFbgV,GAAW,eAAaC,GAAS,aAKhDlN,GAA+C,IAAzBpC,EAAO3F,OAAOvD,OAEpCuL,IAAerC,EAAO3F,OAAOiI,MAAK,SAAC,GAAiB,OAAP,UAAO,IAMpDC,GAAiB,SAAC3G,EAAe4G,GACrC3C,GAAkB,GAClB,IAAMa,EAAc,EAAH,GAAOV,EAAO3F,QAAM,GACrCqG,EAAY9E,GAAS,EAAH,KAAQ8E,EAAY9E,IAAW4G,GACjDxC,EAAOyB,UAAUf,EACnB,EAEM+B,GAAqB,SACzB7G,EACA8G,G,UAEM6M,GAAgB,IAAA9b,SAA4B,QAApB,EAAAyM,EAActE,UAAM,eAAG8G,GAA4B,QAApB,EAAA1C,EAAO3F,OAAOuB,UAAM,eAAG8G,IAEpF,QAAQ,GACN,OAFmC,QAApB,EAAA1C,EAAO2C,OAAO/G,UAAM,eAAG8G,IAGpC,MAAO,QACT,KAAK6M,EACH,MAAO,UACT,KAAMA,EACJ,MAAO,UACT,QACE,MAAO,UAEb,EAEMvM,IAAkB,aAAYhD,EAAO3F,QAErC,IAIF,IAAA4I,0BAHWC,GAAmB,eAC1B3B,GAAc,QACT4B,GAAY,cAGzB,cAAqB,WACf7I,GACF4I,GACEF,GAAgB9O,KAAI,SAAC,GAAsD,OACzEuF,KADyB,OAEzB8C,IAF8B,MAG9B6G,QAHsC,SAItCC,sBAJ4D,uBAK5D3K,KALkE,OAAO,KAO3E3G,MAAK,SAAOuR,GAAc,0C,0DACL,SAAMtD,EAAOuD,aAAaP,K,cAAzCQ,EAAe,SACfC,GAAkB,IAAAC,mBAAkBJ,EAAgBE,GAC1DxD,EAAO2D,UAAUF,GACjB5D,GAAkB,G,aAExB,GAAG,CAACmD,GAAiB3I,EAAQC,IAE7B,IAAMsJ,GAAW,SAAChI,G,OACQ,QAApB,EAAAoE,EAAO3F,OAAOuB,UAAM,eAAEyD,UACxBkD,GAAe3G,EAAO,EAAF,KAAOoE,EAAO3F,OAAOuB,IAAM,CAAEyD,UAAU,KACtDkD,GAAe3G,EAAO,EAAF,KAAOoE,EAAO3F,OAAOuB,IAAM,CAAEyD,UAAU,IACpE,EAiDQwE,IAAW,IAAAC,mBAAiB,OAE9BlL,GAAoBiI,GAAoByO,IAAanM,KAAiBvD,EAE5E,OACE,SAAC,EAAAoE,MAAK,GACJC,SAAS,MACT7I,QAAS,EAAA8I,aAAaC,OACtBrK,MAAM,yBACN0B,OAAO,yBACP4I,UAAWxL,GACXyL,MACE,SAAC,EAAAC,QAAO,GACNC,eAAe,oDACfC,aAAa,0FAAsE,WAEnF,SAAC,EAAAT,OAAM,GAAC3I,QAAQ,QAAO,aAAY,QAAM,WACvC,SAAC,EAAAqJ,2BAA0B,UAIjC9G,aACE,gBAAGvD,UAAWhF,EAAQuI,aAAW,0FAInC+G,OAAQpK,EACRqK,QAAS9C,GACT+C,QACE,SAAC,EAAAC,MAAK,WACJ,UAAC,EAAAC,UAAS,YACR,SAAC,EAAAf,OAAM,GACL3J,UAAWhF,EAAQuJ,WAEnBnD,OAAO,kBACPJ,QAAQ,UACRzD,UAAWiB,GACXoB,YACG4F,IACAI,EAAO+E,SACRnM,KACCsW,KACA,IAAAzb,SAAQuM,EAAO3F,OAAQ2I,IAE1BjJ,QAAS,WACPsV,KAActd,KAAK8P,GACrB,GAAC,UAEAqN,EAAoB,eAAiB,eAflC,YAiBN,SAAC,EAAAnL,OAAM,GAAc3I,QAAQ,OAAOrB,QAAS8H,GAAYrG,OAAO,qBAAmB,qBAAvE,gBAIR,WAGV,UAAC,EAAAD,gBAAe,gBAAY,uBAAuBC,OAAO,oBAAkB,YAC1E,SAAC,UAAI,GAACd,KAAM0H,IAAmB,WAC7B,SAAC,EAAA/F,MAAK,GAAC8I,WAAY9C,IAAW,WAC5B,UAAC,EAAA3G,GAAE,GAAC3B,QAxKU,WACtBiG,EAAOyB,UAAU,EAAD,GAAKzB,EAAO3F,OAAOnG,KAAI,SAAC8Q,GAAS,cAAMA,GAAI,CAAE3F,UAAWgD,IAAvB,KAAsC,GACzF,EAsKwCjI,UAAWhF,EAAQ6I,cAAY,YAC3D,SAAC,EAAAvB,GAAE,CACDtC,UAAWhF,EAAQoJ,aACnBtB,cAAY,EACZkI,OAAQ,CACNC,SAAU,EACVF,WAAY9C,OAGhB,SAAC,EAAA3F,GAAE,GAAC4I,UAAU,mBAAiB,UAAEjD,GAAc,eAAiB,0BAIrErC,EAAO3F,OAAOnG,KACb,SACE,EACA0H,G,sBADEyD,EAAQ,WAAE5F,EAAI,OAAE8C,EAAG,MAAEjD,EAAI,OAAE6F,EAAM,SAAE5I,EAAQ,WAAE6I,EAAU,aAAEE,EAAoB,uBAE5E,OACH,UAAC,EAAAjD,MAAK,GAAa8I,WAAY/C,QAAsBrF,EAAYsC,GAAQ,YACvE,SAAC,UAAI,GAAC3E,KAAM0H,IAAmB,WAC7B,UAAC,EAAA1G,GAAE,GAACtB,UAAWhF,EAAQkJ,WAAS,YAC9B,SAAC,EAAA5B,GAAE,CACD3C,QAAS,WAAM,OAAA6J,GAAShI,EAAT,EACfxB,UAAWhF,EAAQoJ,aACnBtB,cAAY,EACZkI,OAAQ,CACNC,SAAUzJ,EACVuJ,WAAY9F,MAGhB,SAAC,EAAA3C,GAAE,GAAC6I,MAAO,GAAIxL,QAAS,WAAM,OAAA6J,GAAShI,EAAT,EAAiB0J,UAAW7L,GAAI,UAC3DA,GAAQ,kBAEX,SAAC,EAAAiD,GAAE,GAAC3C,QAAS,WAAM,OAAA6J,GAAShI,EAAT,EAAiB0J,UAAU,YAAU,WACtD,SAAC,UAAe,CACd1C,QAAS5C,EAAO4C,QAAQhH,GACxB+G,OAAQ3C,EAAO2C,OAAO/G,gBAK9B,SAAC,EAAAF,GAAE,GAACyJ,WAAY/C,QAAsBrF,EAAYsC,GAAQ,WACxD,SAAC,EAAA3C,GAAE,GACDoJ,QAAS,EACT1L,UACEgI,GAAsBhN,EAAQ2J,iBAAmB3J,EAAQmJ,gBAAc,WAGzE,UAAC,EAAAwH,KAAI,YACH,SAAC,EAAAC,UAAS,GACRxM,MAAM,OACNyM,YAAU,EACVC,QAAQ,YACRC,UAAW1D,GAAmB7G,EAAO,QACrCwK,kBAAuC,QAApB,EAAApG,EAAO2C,OAAO/G,UAAM,eAAEnC,MAAI,WAE7C,SAAC,EAAA4M,UAAS,CACRJ,YAAU,EACVrL,GAAG,OACHnB,KAAK,OACLD,MAAM,OACNgC,OAAO,aACP8K,KAAK,OACLH,UAAW1D,GAAmB7G,EAAO,QACrC2K,SAAU,SAACnT,GACTmP,GAAe3G,EAAO,CAAEnC,KAAMrG,GAChC,EACAA,MAAOqG,GAAQ,GACf+M,YAAY,mBAGhB,SAAC,EAAAR,UAAS,GACRxM,MAAM,MACNyM,YAAU,EACVC,QAAQ,MACRC,UAAW1D,GAAmB7G,EAAO,OACrCwK,kBAAuC,QAApB,EAAApG,EAAO2C,OAAO/G,UAAM,eAAEW,KAAG,WAE5C,SAAC,EAAA8J,UAAS,CACRJ,YAAU,EACVK,KAAK,MACLH,UAAW1D,GAAmB7G,EAAO,OACrC6K,OAAQ,WAAM,OAhKlB,SAAC7K,IA7BU,SAACA,G,0BACtBW,EAA0B,QAApB,EAAAyD,EAAO3F,OAAOuB,UAAM,eAAEW,IAClC,IACE,IAAA8E,YAAW9E,KACqB,SAAX,QAApB,EAAAyD,EAAO3F,OAAOuB,UAAM,eAAEtC,OAAuD,QAArC0G,EAAO3F,OAAOuB,GAAOrF,SAAS,IACvE,CACA,IAAM+C,EAC4B,SAAX,QAApB,EAAA0G,EAAO3F,OAAOuB,UAAM,eAAEtC,QAAsC,QAApB,EAAA0G,EAAO3F,OAAOuB,UAAM,eAAEtC,QACgB,QAA/E,EAAA/B,EAAWgC,MAAK,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIM,SAASpD,IAAS8C,EAAIM,SAASrD,EAAnC,WAA0C,eAAEA,QACjF,MAEEjD,EAA0B,GAC9B,IAAkC,QAA9B,EAAoB,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAErF,gBAAQ,eAAEO,SAA+C,QAArCkJ,EAAO3F,OAAOuB,GAAOrF,SAAS,GAC1EA,EAA+B,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAErF,aAC5B,CACL,IAAMmQ,EAEL,QAFkB,EAAApP,EAAaiC,MAC9B,SAAC,G,IAAEE,EAAI,OAAED,EAAK,QAAO,OAAA+C,EAAIM,SAASpD,IAAS8C,EAAIM,SAAS,IAAMrD,EAAzC,WACtB,eAAEA,MACCkN,IAAYnQ,EAAW,CAACmQ,KACxB,IAAAC,SAAQpQ,KAAWA,EAAW,CAAC,O,CAErC,IAAwB,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAEtC,QAASA,KAAS,IAAA7F,SAAQ8C,EAA8B,QAApB,EAAAyJ,EAAO3F,OAAOuB,UAAM,eAAEtC,MAAO,CACzF,IAAMoH,EAAc,EAAH,GAAOV,EAAO3F,QAAM,GACrCqG,EAAY9E,GAAS,EAAH,KAAQ8E,EAAY9E,IAAW,CAAEtC,KAAI,EAAE/C,SAAQ,IACjEyJ,EAAOyB,UAAUf,E,EAGvB,CAGEkG,CAAqBhL,EACvB,CA8JoC4T,CAAU5T,EAAV,EACd2K,SAAU,SAACnT,GACLmJ,IAAQnJ,GACVmP,GAAe3G,EAAO,CAAEW,IAAKnJ,GAEjC,EACAA,MAAOmJ,GAAO,GACdiK,YAAY,WACZ5L,GAAG,MACHnB,KAAK,MACLD,MAAM,MACNgC,OAAO,kBAGX,SAAC,EAAAwK,UAAS,GACRxM,MAAM,wBAAuB,aAClB,2BACXqN,WACE,SAAC,EAAAC,QAAO,GAAC3J,QAAQ,2DAAyD,WACxE,SAAC,EAAAsH,2BAA0B,CACzBrK,UAAU,aACVyD,MAAO,EAAAC,iBAAiB1K,WAI9B8S,QAAQ,QAAM,WAEd,SAAC,UAAc,CACb1K,OAAO,2BACP2K,UAAW1D,GAAmB7G,EAAO,QACrCmL,aAAcC,SAASC,KACvBC,SAAU,gBAAkBtL,EAC5BuL,QAASC,OAAOC,KAAK3F,GACrBtG,QAAS,EAAAkM,cAAcC,OACvBC,aAAcJ,OAAOC,KAAK3F,GAAoBnI,MAC5C,SAACkO,GAAgB,OAAAnO,IAASoI,EAAmB+F,EAA5B,IAEnBC,YAAa,SAACtU,GACZ,OAAAmP,GAAe3G,EAAO,CAAEtC,KAAMoI,EAAmBtO,IAAjD,QAIN,SAAC,EAAA4S,UAAS,GACRxM,MAAM,sBAAqB,aAChB,yBACXqN,WACE,SAAC,EAAAC,QAAO,GAAC3J,QAAQ,yDAAuD,WACtE,SAAC,EAAAsH,2BAA0B,CACzBrK,UAAU,aACVyD,MAAO,EAAAC,iBAAiB1K,WAI9B8S,QAAQ,WAAS,WAEjB,SAAC,UAAc,CACb1K,OAAO,yBACP2K,UAAW1D,GAAmB7G,EAAO,YACrCmL,aAAcC,SAASC,KACvBC,SAAU,mBAAqBtL,EAC/BuL,QAASC,OAAOC,KAAK1F,IACrBvG,QAAS,EAAAkM,cAAcK,eACvBH,aAAcJ,OAAOC,KAAK1F,IAAsB/E,QAAO,SAAC6K,GACtD,OAAAlR,aAAQ,EAARA,EAAUsG,SAAS8E,GAAqB8F,GAAxC,IAEFG,iBAAiBrR,aAAQ,EAARA,EAAUO,QAAS,GAAK,cACzC4Q,YAAa,SAACtU,GAAU,OA9NnB,SAACA,EAAiBwI,GAC3C,IAAIiM,EAAgBzU,EAAMc,KAAI,SAAC4T,GAAQ,OAAAnG,GAAqBmG,EAArB,IAClB,IAAjB1U,EAAM0D,QAAoD,QAApC+Q,EAAczU,EAAM0D,OAAS,KACrD+Q,EAAgB,CAAC,QAEfA,EAAc/Q,OAAS,GAAK+Q,EAAchL,SAAS,SACrDgL,EAAgBA,EAAcjL,QAAO,SAACkL,GAAQ,MAAQ,QAARA,CAAA,KAGhDvF,GAAe3G,EAAO,CACpBrF,SAAUsR,GAEd,CAkN8CE,CAAmB3U,EAAOwI,EAA1B,QAG5B,SAAC,EAAAoK,UAAS,GACRxM,MAAM,UACNqN,WACE,SAAC,EAAAC,QAAO,GAAC3J,QAAQ,qCAAmC,WAClD,SAAC,EAAAsH,2BAA0B,CACzBrK,UAAU,aACVyD,MAAO,EAAAC,iBAAiB1K,WAI9B8S,QAAQ,SACRC,UAAW1D,GAAmB7G,EAAO,UACrCwK,kBAAuC,QAApB,EAAApG,EAAO2C,OAAO/G,UAAM,eAAEuD,QAAM,WAE/C,SAAC,EAAA6I,WAAU,CACT5N,UAAWhF,EAAQ4J,YACnBmH,UAAW1D,GAAmB7G,EAAO,UACrChB,GAAG,kBAAiB,aACT,wBACX0L,KAAK,OACL2B,oBAAoB,iCACpBC,oBAAoB,4BACpB9U,MAAO0M,EAAWlE,GAClBjE,UAAWyH,EACX+I,YAAY,EACZC,aAAc,SAAChV,GAAU,OAAAqN,EAAa7E,EAAOxI,EAApB,EACzBiV,aAAc,SAACjV,GAAU,OAAAqN,EAAa7E,EAAOxI,EAApB,EACzBkV,aAAc,WAAM,OAAA7H,EAAa7E,EAAO,GAApB,EACpB2M,cAAe,CACbC,QAAS,EAAAC,cACTC,eAAgB,SAACC,GAAU,WAAAC,kBAAiBD,EAAO9E,GAAxB,GAE7BgF,0BAAwB,EACxBC,iBAAiB,eAGrB,SAAC,UAAI,GAACpO,KAAM+E,IAA4BN,GAAM,WAC5C,UAAC,EAAA6G,UAAS,GAACE,QAAQ,uBAAuB1M,MAAM,kBAAkBuP,UAAQ,eACxE,SAAC,EAAAC,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAuH,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,4BAEhC5G,GAAG,4BACHnB,KAAK,4BACLD,MAAM,4BACNyP,WAAY3J,EACZiH,SAAU,WAAM,OAAAhE,GAAe3G,EAAO,CAAE0D,sBAAsB,GAA9C,KAElB,SAAC,UAAkB,GACjBlC,MAAmE,KAAjC,QAA5B,EAAuB,QAAvB,EAAAmE,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,4BACpCrE,QAAQ,oFAAkF,WAE1F,SAAC,EAAA6L,MAAK,CACJhP,YAC+D,KAAjC,QAA5B,EAAuB,QAAvB,EAAAuH,cAAc,EAAdA,GAAiB3F,UAAM,eAAEW,WAAG,eAAEiF,4BAEhC5G,GAAG,oCACHnB,KAAK,sCACLD,MAAM,oCACNyP,UAAW3J,EACXiH,SAAU,WAAM,OAAAhE,GAAe3G,EAAO,CAAE0D,sBAAsB,GAA9C,QAGpB,SAAC,UAAI,GACH5E,KAA4D,YAAtD+H,GAAmB7G,EAAO,yBAAqC,WAErE,SAAC,EAAAoO,gBAAe,CAACyF,iBAAe,EAAC5R,MAAOuL,0BAvM1CxN,E,UAoNxB,C,8HC/kBa,EAAAwT,yBAA2B,SAAC9E,GACvC,OAAAA,EAAapW,KAAI,SAAC,G,IAAEuF,EAAI,OAAE8C,EAAG,MAAEjD,EAAI,OAAE/C,EAAQ,WAAE4I,EAAM,SAAEG,EAAoB,uBAAa,OACtF5G,KAD+E,OAE/Ee,KAAI,EACJ8C,IAAG,EACHC,kBAAmBlD,EACnBlC,sBAAuBb,EACvB6M,QAASjE,EACTkE,sBAAuB/D,EAP+D,GAAxF,EAUW,EAAA2P,yBAA2B,SAAC5U,GACvC,OAAAA,EAAOnG,KACL,SACE,EASA0H,G,IAREnC,EAAI,OACJ8C,EAAG,MACgBjD,EAAI,oBACA/C,EAAQ,wBAC/BmC,EAAI,OAKH,OACHe,KAAI,EACJ8C,IAAG,EACHjD,KAAI,EACJ/C,SAAQ,EACR4I,OATiB,UAUjBC,YAAY,EACZE,qBAV6C,wBAW7CD,SAAUzD,EAAQ,IAAMvB,EAAOvD,OAC/B4B,KAAI,EATD,GAZP,C,gZC/BF,WAQA,WACA,WACA,cAEMvE,GAAY,IAAAC,iBAAgB,CAChCsb,oBAAqB,CACnBlb,QAAS,OACTmb,SAAU,GAEZC,cAAe,CACblR,aAAc,UAmClB,UA1BwB,SAAC,G,IAAE7H,EAAW,cAAED,EAAY,eAC5CxB,EAAUjB,IAChB,OACE,UAAC,EAAA0b,WAAU,GAACzU,QAAS,EAAA0U,kBAAkBC,KAAM3V,UAAWhF,EAAQsa,qBAAmB,YACjF,SAAC,EAAAM,eAAc,CAAC/K,KAAMpO,EAAc,EAAAqO,eAAiB,EAAAuJ,cACrD,SAAC,EAAAwB,MAAK,GAACC,aAAa,KAAK/d,KAAK,KAAKqJ,OAAO,sBAAoB,UAC3D3E,EACG,yBACA,uDAEN,SAAC,EAAAsZ,eAAc,GAAC/V,UAAWhF,EAAQwa,eAAa,UAC7C/Y,EACG,6CACA,4CAELA,GACC,SAAC,UAAU,KAEX,SAAC,EAAAkN,OAAM,GAACvI,OAAO,gBAAgBJ,QAAQ,OAAOrB,QAASnD,GAAY,oCAM3E,C,iZCnDA,WACA,WACA,WACA,WACA,cAEA,cAEMzC,GAAY,IAAAC,iBAAgB,CAChCgc,KAAM,CACJvS,MAAO,EAAAwS,0BAA0Bjd,MACjCmS,MAAO,eAET+K,KAAM,CACJvb,QAAS,KA6Cb,UArCqB,SAAC,G,IAAE8E,EAAO,UACvBzE,EAAUjB,IACV,GAA4B,IAAAb,WAAS,GAApCid,EAAS,KAAEC,EAAY,KAE9B,OAAK3W,EAAQ4W,eAAoC,YAAnB5W,EAAQI,OAQf,YAAnBJ,EAAQI,QAER,SAAC,EAAA6M,QAAO,GAAC4J,sBAAoB,EAACvT,QAAQ,0BAAwB,WAC5D,SAAC,EAAAwT,KAAI,GAACvW,UAAWhF,EAAQgb,MAAI,uBAMjC,iCACE,SAAC,UAAI,GAAC1V,MAAO6V,GAAS,WACpB,SAAC,UAAY,CAAC1W,QAASA,EAASgI,WAAY,WAAM,OAAA2O,GAAa,EAAb,QAEpD,SAAC,EAAAzM,OAAM,GACLvI,OAAO,uBACPJ,QAAQ,OACRrB,QAAS,WAAM,OAAAyW,GAAa,EAAb,EACfpW,UAAWhF,EAAQkb,MAAI,UAEtBzW,EAAQ4W,qBAzBX,SAAC,EAAA3J,QAAO,GAAC4J,sBAAoB,EAACvT,QAAQ,gCAA8B,WAClE,SAAC,EAAAwT,KAAI,GAACvW,UAAWhF,EAAQgb,MAAI,qBA4BrC,C,iZCzDA,WAaA,WAWA,WAKA,WACA,WACA,WACA,cAEA,WACA,WACA,cACA,cAEMjc,GAAY,IAAAC,iBAAgB,CAChCuJ,YAAa,CACXC,WAAY,OACZgT,cAAe,MACf/S,MAAO,EAAAC,iBAAiB1K,OAE1BiB,cAAe,CACbC,gBAAiB,EAAAC,2BAA2BnB,MAC5CoB,QAAS,OACTC,cAAe,SACfO,OAAQ,QAEVH,aAAc,CACZC,eAAgB,gBAChBC,QAAS,YACTC,OAAQ,eAEVC,gBAAiB,CACfH,eAAgB,gBAChBE,OAAQ,eAEVmX,YAAa,CACXC,aAAc,OACdxN,YAAa,SAEfyN,WAAY,CACVxO,MAAO,EAAAyO,2BAA2BlZ,MAClC6Q,SAAU,WACVsI,IAAK,MACLC,KAAM,OACNC,cAAe,UASnB,mBAAqC,G,IACnC,IAAA5S,QAAWJ,EAAI,OAAEf,EAAI,OAAiBmY,EAAY,gBAClDhP,EAAU,aAEJzM,EAAUjB,IACVmB,EAAgBC,OAAOC,aAAaC,QAAQ,oBAAsB,GAClE,GAAkB,IAAAnC,UAAS,GAA1BoC,EAAI,KAAEC,EAAO,KACd,GAAwB,IAAArC,UAASgC,GAAhCM,EAAO,KAAEC,EAAU,KACpB,GAAgC,IAAAvC,UAAS,IAAxCgD,EAAW,KAAE2W,EAAc,KAC5B,GAAwC,IAAA3Z,UAAiB,GAAxD4C,EAAe,KAAEC,EAAkB,KACpC,GAAgD,IAAA7C,UAAyB,OAAxE8C,EAAmB,KAAEC,EAAsB,KAE5C+C,EAAgB,CAAC,OAAQ,UAAW,UAAW,QAE/C5B,EAAuB,CAAC,OAAQ,UAAW,UAAW,QAEtDC,GAAa,IAAA5E,UACjB,WAAM,OAAA2E,EAAqBtB,GAAmB,IAAME,CAA9C,GACN,CAACF,EAAiBE,IAGdoX,GAAuB,aAAYlX,IAEzC,IAAA7E,YAAU,WACRkE,EAAQ,EACV,GAAG,CAAC6X,EAAsB/V,IAEpB,OAMF,IAAAqZ,qBAAoBpY,EAAMmY,EAAcnb,EAAME,EAAS4X,EAAsB/V,GAL/EE,EAAS,YACTG,EAAU,aACVF,EAAK,QACLC,EAAO,UACP,IAAAV,KAAAA,OAAI,IAAG,GAAEA,KAAM,GAAIY,KAAM,CAAEC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAAK,EAGzDW,EAAuB,SAACC,EAAGC,GAAY,OAAApD,EAAQoD,EAAR,EAEvCC,EAAmC,SAACF,EAAGG,EAAYF,GAGvDlD,EAAWoD,GACXtD,EAAQoD,GACRvD,aAAa0D,QAAQ,iBAAkBD,EAAWE,WACpD,EAEM4X,EAAa,SAAChV,EAAqB/B,GACvC,IAAIA,EACJ,MAAO,CACLgC,OAAQ,CACNJ,MAAO1F,EACP+F,UAAW7F,EACX8F,iBAAkB,OAEpBC,OAAQ,SAACC,EAAQR,EAAOK,GACtB9F,EAAmByF,GACnBvF,EAAuB4F,EACzB,EACAF,YAAW,EAEf,EAGA,GAAIlE,EAAS,MAAMD,EAGjB,MAEET,EAAI,KAFA6Z,OAAW,IAAG,KAAE,EACd,EACN7Z,EAAI,WADEa,OAAK,IAAG,IAAC,EAGbiZ,EAAoBnZ,GAAcH,EAElCuZ,IAAuBD,IAAsBjZ,EAEnD,OACE,SAAC,EAAAgM,MAAK,GAEJC,SAAS,MACTkN,kBAAgB,eACL,oBACX3V,OAAO,oBACP4I,SAAU6M,EACV7V,QAAS,EAAA8I,aAAaC,OACtBrK,MAAM,WACN6D,aACE,iBAAGvD,UAAWhF,EAAQuI,aAAW,yCACL,uBAAIlE,QAGlCiL,QAAM,EACNC,QAAS9C,EACT+C,QACE,SAAC,EAAAb,OAAM,GAAa3I,QAAQ,YAAYrB,QAAS8H,GAAU,oBAA/C,UAEH,WAGX,SAAC,EAAAuP,qBAAoB,WACnB,UAAC,EAAAjX,KAAI,GAACC,UAAWhF,EAAQf,eAAa,YACpC,UAAC,EAAAmG,KAAI,GAACJ,UAAWhF,EAAQP,cAAY,YACnC,UAAC,EAAA2F,KAAI,YACH,SAAC,EAAA6L,UAAS,CACRzL,GAAG,SACHY,OAAO,cACPgL,YAAY,iBACZpT,MAAOkD,EACPiQ,SAAU,SAACnT,GAAU,OAAA6Z,EAAe7Z,EAAf,EACrBgH,UAAWhF,EAAQ+W,eAErB,SAAC,EAAAsC,WAAU,CAACtc,KAAK,KAAKiI,UAAWhF,EAAQiX,iBAE3C,SAAC,EAAA5R,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMwW,IAAmB,WAC7B,SAAC,EAAAvW,WAAU,CACTC,GAAG,oBACHC,SAAS,wBACTC,iBAAiB,SACjBC,UAAW/C,EACXpC,QAASA,EACTF,KAAMA,EACNmD,UAAWA,EACXmC,WAAS,EACThC,gBAAiBA,cAKzB,SAAC,UAAI,GAAC0B,MAAOuW,GAAiB,WAC5B,SAAC,EAAA9W,KAAI,GAACC,UAAWhF,EAAQf,eAAa,WACpC,SAAC,EAAA4G,cAAa,CACZC,QAAStF,EACTuF,QAAS/B,EAActC,OACvBsE,QAAS,EAAAC,aAAaC,iBAI5B,SAAC,UAAI,GAACZ,KAAMuW,GAAiB,WAC3B,UAAC,EAAA1V,gBAAe,gBACH,4BACXC,OAAO,iBACPJ,QAAQ,WAAS,YAEjB,SAAC,EAAAK,MAAK,WACJ,SAAC,EAAAC,GAAE,UACAtC,EAAclF,KAAI,SAACyH,EAAcC,GAAU,OAC1C,SAAC,EAAAC,GAAE,GAEDC,KAAMiV,EAAWnV,EAAOsV,KAAoB,UAE3CvV,IAHIA,EAAe,UAFoB,SAUhD,UAAC,EAAAU,MAAK,WACH2U,EAAY9c,KAAI,SAAC,EAA+C0H,G,IAA7CnC,EAAI,OAAE4U,EAAO,UAAEgD,EAAO,UAAE/X,EAAI,OAAmC,OACjF,UAAC,EAAAoC,GAAE,YACD,SAAC,EAAAgB,GAAE,UAAEjD,KACL,SAAC,EAAAiD,GAAE,UAAE2R,KACL,SAAC,EAAA3R,GAAE,UAAE2U,KACL,SAAC,EAAA3U,GAAE,UAAEpD,MAJEG,EAAOmC,EADiE,KAQnF,SAAC,UAAI,GAAClB,MAAOwW,IAAmB,WAC9B,SAAC,UAAiB,CAACI,YAAa,WAAM,OAAArE,EAAe,GAAf,kBAK9C,UAAC,EAAAzS,KAAI,GAACJ,UAAWhF,EAAQH,iBAAe,YACtC,SAAC,EAAAwF,SAAQ,KACT,SAAC,EAAAA,SAAQ,WACP,SAAC,UAAI,GAACC,KAAMwW,IAAmB,WAC7B,SAAC,EAAAvW,WAAU,CACTC,GAAG,uBACHC,SAAS,2BACTC,iBAAiB,SACjBC,UAAW/C,EACXpC,QAASA,EACTF,KAAMA,EACNmD,UAAWA,EACXuC,QAAS,EAAAqC,kBAAkBC,OAC3B1E,gBAAiBA,qBA1GxBN,EAmHX,C,iUC5QA,WASA,WACA,WAGMvE,GAAY,EAFlB,SAEkBC,iBAAgB,CAChCsb,oBAAqB,CACnBlb,QAAS,OACTmb,SAAU,EACV4B,OAAQ,UAQZ,mBAA0C,G,IAAED,EAAW,cAC/Clc,EAAUjB,IAChB,OACE,SAAC,EAAAuH,GAAE,WACD,SAAC,EAAAgB,GAAE,GAACoJ,QAAS,GAAC,WACZ,SAAC,EAAA7T,SAAQ,WACP,UAAC,EAAA4d,WAAU,GAACzU,QAAS,EAAA0U,kBAAkBC,KAAM3V,UAAWhF,EAAQsa,qBAAmB,YACjF,SAAC,EAAAM,eAAc,CAAC/K,KAAM,EAAAwJ,cACtB,SAAC,EAAAwB,MAAK,GAACC,aAAa,KAAK/d,KAAK,MAAI,sDAGlC,SAAC,EAAAge,eAAc,8DACf,SAAC,EAAApM,OAAM,GAACvI,OAAO,gBAAgBJ,QAAQ,OAAOrB,QAASuX,GAAW,sCAQ9E,C,iZC7CA,WAKA,WAUA,cACA,WAKA,WACA,cACA,WAEA,cACA,WACA,UAAME,OAAOC,GAEb,IAAMvI,EAAM,EAAAC,wBAAwB/V,MAC9BgW,EAAQ,EAAAC,yBAAyBjW,MACjCse,EAAO,EAAAC,yBAAyBve,MAEhCe,GAAY,IAAAC,iBAAgB,CAChCwd,QAAS,CACPC,kBAAmB,gBACnBN,OAAQ,YAoBNO,EAAqB,SAAC,G,IAAEla,EAAK,QAAEI,EAAK,QAAEsE,EAAI,OACxCyV,EAAoB,KAATzV,QAAwBS,IAATT,EAAqB,SAAU,aAAMA,GAAMU,UAC3E,OACE,2BACGpF,GACD,UAAC,EAAA4C,KAAI,YACH,UAAC,EAAAqK,MAAK,GAACzK,UAAU,cAAY,YAC3B,SAAC,EAAA0K,UAAS,GAAC1K,UAAU,yBAAuB,mCAC5C,UAAC,EAAA0K,UAAS,eAAGiN,EAAQ,YAEvB,UAAC,EAAAlN,MAAK,GAACzK,UAAU,cAAY,YAC3B,SAAC,EAAA0K,UAAS,GAAC1K,UAAU,yBAAuB,gCAC5C,UAAC,EAAA0K,UAAS,eAAG9M,EAAK,gBAK5B,EAEMga,EAAgB,SAAC,G,IAAE/U,EAAY,eAAEvE,EAAI,OACjCpH,GAAS,IAAAD,iBAAe,KAChC,OACE,SAAC,EAAAmJ,KAAI,WACH,SAAC,UAAkB,GACjB2C,QAAQ,mEACRC,OAAO9L,aAAI,EAAJA,EAAM+L,OACbC,aAAW,cAEX,SAAC,EAAAyG,OAAM,GAAC3I,QAAQ,OAAO2N,UAAQ,EAAChP,QAAS,WAAM,OAACkD,EAAeA,EAAavE,GAAQ,IAArC,GAA0C,yBAMjG,EAwGA,UAtGmB,SAAC,G,IAClB,IAAAmB,QACEnB,EAAI,OACJuB,EAAM,SACuBgY,EAAyB,8BAC7BC,EAAqB,0BACpBta,EAAK,2BAEjCqF,EAAY,eAEN7H,EAAUjB,IAEhB,OAAQ8F,GACN,IAAK,QACH,OACE,UAAC,EAAAO,KAAI,GAACqP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAArP,SAAQ,GAACsP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAE,gBAAe,CAACnM,MAAOuL,QAE1B,SAAC,EAAA3O,SAAQ,WACP,SAAC,UAAU,GAACoD,MAAM,SAAO,2BAIjC,IAAK,UACH,OACE,UAAC,EAAArD,KAAI,GAACqP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAArP,SAAQ,GAACsP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAG,sBAAqB,CAACpM,MAAOqL,QAEhC,SAAC,EAAAzO,SAAQ,WACP,SAAC,EAAA6J,QAAO,gBACK,kBACX6N,qBAAqB,SACrB5N,cAAc,UACd6N,YAAY,SAAC,EAAAnI,sBAAqB,IAClCzF,aACE,SAACsN,EAAkB,CACjBla,MAAOA,EACPI,MAAOia,EACP3V,KAAM4V,IAGVjO,SAAS,OACToO,eAAe,SAACL,EAAa,CAAC/U,aAAcA,EAAcvE,KAAMA,KAAQ,WAExE,SAAC,EAAAqL,OAAM,GAAC3I,QAAQ,OAAO2N,UAAQ,cAC7B,SAAC,UAAU,GAAClL,MAAM,MAAMyU,QAAM,sCAQ1C,IAAK,cACH,OACE,UAAC,EAAA9X,KAAI,GAACqP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAArP,SAAQ,GAACsP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAAyI,wBAAuB,CAAC1U,MAAO6T,QAElC,SAAC,EAAAjX,SAAQ,WACP,SAAC,EAAA6J,QAAO,gBACK,sBACX6N,qBAAqB,UACrB5N,cAAc,cACd6N,YAAY,SAAC,EAAAG,wBAAuB,IACpC/N,aACE,SAACsN,EAAkB,CACjBla,MAAOA,EACPI,MAAOia,EACP3V,KAAM4V,IAGVjO,SAAS,OACToO,eAAe,SAACL,EAAa,CAAC/U,aAAcA,EAAcvE,KAAMA,KAAQ,WAExE,SAAC,UAAU,GAACmF,MAAM,OAAOyU,QAAM,uCAOzC,IAAK,UACH,OACE,SAAC,EAAAxL,QAAO,GAAC7C,SAAS,YAAY9G,QAAQ,oCAAkC,WACtE,UAAC,EAAA3C,KAAI,GAACqP,aAAc,CAAEC,QAAS,sBAAwB7N,UAAW,CAAE6N,QAAS,QAAO,YAClF,SAAC,EAAArP,SAAQ,GAACsP,OAAQ,CAAED,QAAS,aAAY,WACvC,SAAC,EAAA5X,QAAO,CAACC,KAAK,KAAKiI,UAAWhF,EAAQwc,cAExC,SAAC,EAAAnX,SAAQ,WACP,SAAC,UAAU,GAACoD,MAAM,QAAM,oCAKlC,QACE,OAAO,wBAEb,C,iUChMA,WACA,WAOMqL,EAAM,EAAAsJ,wBAAwBpf,MAC9BgW,EAAQ,EAAAqJ,yBAAyBrf,MACjCse,EAAO,EAAAgB,yBAAyBtf,MAChCuf,EAAO,EAAAC,sBAAsBxf,MAiCnC,UAPmB,SAACyf,GAClB,IAnBmBP,EAmBbld,GAnBakd,EAmBOO,EAnBD,QACzB,IAAAze,iBAAgB,CACd0e,UAAW,EAAF,CACPxJ,WAAY,OACZC,SAAU,QACN+I,EACA,CACES,eAAgB,wBAChB7U,OAAQ,WAEV,CAAC,GAEPgL,IAAK,CAAEsI,OAAQ,YAAa3T,MAAOqL,GACnCE,MAAO,CAAEoI,OAAQ,YAAa3T,MAAOuL,GACrCsI,KAAM,CAAEF,OAAQ,YAAa3T,MAAO6T,GACpCiB,KAAM,CAAEnB,OAAQ,YAAa3T,MAAO8U,QAK9B9U,EAAoBgV,EAAK,MAAlBG,EAAaH,EAAK,SAEjC,OAAO,mBAAMzY,UAAWhF,EAAQyI,IAAM,UAAGmV,IAC3C,C,6mBC1CA,WAaA,WACA,WAKA,WACA,WACA,WAEA,WAOA,cACA,WACA,WACA,cACA,cACA,WACA,cACA,cAEM7e,GAAY,IAAAC,iBAAgB,CAChCC,cAAe,CACbC,gBAAiB,EAAAC,2BAA2BnB,MAC5CoB,QAAS,OACTC,cAAe,UAGjBI,aAAc,CACZC,eAAgB,gBAChBC,QAAS,YACTC,OAAQ,eAEVC,gBAAiB,CACfH,eAAgB,gBAChBE,OAAQ,eAEVE,UAAW,CACTC,QAAS,GAEXgX,YAAa,CACXC,aAAc,OACdxN,YAAa,SAEfyN,WAAY,CACVxO,MAAO,EAAAyO,2BAA2BlZ,MAClC6Q,SAAU,WACVuI,KAAM,OACNC,cAAe,QAEjBwG,sBAAuB,CACrB/G,WAAY,QAEdgH,iBAAkB,CAChBC,SAAU,kBAEZC,SAAU,CACRvV,MAAO,EAAAwS,0BAA0Bjd,SAwWrC,UApWiC,W,MACzBgC,EAAUjB,IACV7B,GAAc,IAAA+C,kBACZ/D,GAAS,IAAAD,iBAAe,KAC1B,GAAgD,IAAAiC,UAAoB,IAAnE+f,EAAmB,KAAEC,EAAsB,KAC5C,GAAkC,IAAAhgB,UAA+B,IAAhEigB,EAAY,KAAEC,EAAe,KAC9B,GAAkC,IAAAlgB,UAAiB,IAAlDmgB,EAAY,KAAEC,EAAe,KAE9Bpe,EAAgBC,OAAOC,aAAaC,QAAQ,aAAe,GAC3D,GAAkB,IAAAnC,UAAS,GAA1BoC,EAAI,KAAEC,EAAO,KACd,GAAgC,IAAArC,UAAS,IAAxCqgB,EAAW,KAAEC,EAAc,KAC5BC,GAAuB,aAAYF,GACnC,GAAwB,IAAArgB,UAASgC,GAAhCM,EAAO,KAAEC,EAAU,KAEpB,GAMF,IAAAie,6BAA4Bpe,EAAME,EAAS,CAAEU,YAAaud,IAL5Dlc,EAAS,YACTC,EAAK,QACLC,EAAO,UACPC,EAAU,aACV,IAAAX,KAAAA,OAAI,IAAG,GAAEA,KAAM,GAAIY,KAAM,CAAEC,MAAO,EAAGC,MAAO,GAAIC,OAAQ,IAAK,EAGzD6b,GAAmB,IAAAlhB,UAAQ,WAAM,OAAAsE,EAAKA,KAAKuS,OAAM,SAAC,GAAa,QAAP,MAAO,GAA9B,GAAuC,CAACvS,IAEzE6c,GAAwB,IAAAnhB,UAC5B,WAAM,OAAAwgB,EAAoB/Q,MAAK,SAACwF,GAAQ,OAAAA,CAAA,GAAlC,GACN,CAACuL,IAGGY,GAAsB,IAAAphB,UAC1B,WACE,OAACkhB,GAAoB5c,EAAKA,KAAKuS,OAAM,SAAC,EAAUjC,GAAQ,QAAZ,QAAsB4L,EAAoB5L,EAA9B,GAAxD,GACF,CAACtQ,EAAMkc,EAAqBU,IAGxB,GAQF,IAAAhd,uBAPSC,EAAuB,YAC3BC,EAAqB,QACnBC,GAAuB,UAChC,KAAAC,KAAA,eAAiF,CAC/EC,sBAAuB,GACvBC,oBAAqB,IACtB,GAH8BC,GAAY,yBAAuBC,GAAU,uBAMxE,IAAwD,IAAA2c,8BAC5D5hB,EACAihB,EACA7d,EACAE,EACA,CAAEU,YAAaud,IALIM,GAAe,eAAahS,GAAQ,cAQzD,IAAA1Q,YAAU,WACHqG,IACH0b,EAAgB,IAChBE,EAAgB,IAChBJ,EAAuBnc,EAAKA,KAAKjD,KAAI,WAAM,aAE/C,GAAG,CAAC4D,KAEJ,IAAArG,YAAU,W,OACM,QAAV,EAAA0F,aAAI,EAAJA,EAAMA,YAAI,eAAEL,QAAS,GAAoC,IAA/Buc,EAAoBvc,QAChDwc,EAAuBnc,EAAKA,KAAKjD,KAAI,WAAM,YAE/C,GAAG,CAAW,QAAV,EAAAiD,aAAI,EAAJA,EAAMA,YAAI,eAAEL,UAEhB,IAAArF,YAAU,WACmB,GAAvB8hB,EAAazc,QACfqd,KAAkBpiB,MAChB,WAAM,OAAAyhB,EAAgB,GAAhB,IACN,WAAM,OAAAA,EAAgB,GAAhB,GAGZ,GAAG,CAACD,KAEJ,IAAA9hB,YAAU,WACJgiB,GACFrb,GAAWqb,GAAc1hB,UAAKgL,GAAW,WAAM,OAAA2W,EAAgB,GAAhB,GAEnD,GAAG,CAACD,IAEJ,IASMpa,GAAgB,SAACC,GAAY,MAAK,OAA8C,QAA9C,EAAA/B,GAAWgC,MAAK,SAAC,G,IAAEC,EAAK,QAAO,OAAAF,IAASE,CAAT,WAAe,eAAEC,IAAI,EAQtF,IAAqD,IAAA2a,kCACzD9hB,EACAoD,EACAE,EACA,CAAEU,YAAaud,IAJIzb,GAAU,eAAaC,GAAU,aAQhDO,GAAoBP,IAAcP,GAAcd,GAA2BmL,GAE3EtJ,GAAuB,SAACC,EAAGC,GAAY,OAAApD,EAAQoD,EAAR,EAEvCC,GAAmC,SAACF,EAAGG,EAAYF,GAEvDvD,aAAa0D,QAAQ,UAAWD,EAAWE,YAC3CtD,EAAWoD,GACXtD,EAAQoD,EACV,EA4BMK,GAAgB,CAAC,OAAQ,eAAgB,YAG/C,GAAIvB,EAAS,MAAMD,EACnB,GAAIV,GAAyB,MAAMD,EAGjC,OAEEE,EAAI,KAFAkd,QAAW,IAAG,MAAE,GACd,GACNld,EAAI,WADEa,QAAK,IAAG,KAAC,GAGnB,OACE,UAAC,EAAAmC,KAAI,qBACcvB,GAAiB,yBACX,4BACvBwB,UAAWhF,EAAQf,eAAa,YAEhC,UAAC,EAAAmG,KAAI,GAACJ,UAAWhF,EAAQP,cAAY,YACnC,SAAC,EAAA4F,SAAQ,WACP,UAAC,EAAA6T,WAAU,YACT,UAAC,EAAA7T,SAAQ,YACP,SAAC,EAAA4L,UAAS,CACRrM,WAAYrC,EACZiD,GAAG,SACHY,OAAO,wBACPgL,YAAY,qBACZpT,MAAOugB,EACPpN,SAAUqN,EACVxZ,UAAWhF,EAAQ+W,eAErB,SAAC,EAAAsC,WAAU,CAACtc,KAAK,KAAKiI,UAAWhF,EAAQiX,iBAE3C,SAAC,EAAA5R,SAAQ,WACP,SAAC,UAAkB,GACjB0C,QAAQ,mEACRC,OAAO9L,aAAI,EAAJA,EAAM+L,OACbC,aAAW,cAEX,SAAC,EAAAyG,OAAM,GACLhK,QAjEI,WAClB,IAAMua,EAAgC,GACtCjB,EAAoBzR,SAAQ,SAAC2S,EAAS3Y,GACpC,GAAI2Y,IAAWpd,aAAI,EAAJA,EAAMA,KAAKyE,MAAWzE,EAAKA,KAAKyE,GAAOlD,KAAM,CACpD,MAOFvB,EAAKA,KAAKyE,GANZ4Y,EAAc,iBACdjY,EAAG,MACHnF,EAAqB,wBACrBoF,EAAiB,oBACjB4G,EAAO,UACPC,EAAqB,wBAGvBiR,EAAQrG,KAAK,CACXxU,KAAM+a,EACNjY,IAAG,EACHnF,sBAAqB,EACrBoF,kBAAiB,EACjB4G,QAAO,EACPC,sBAAqB,G,CAG3B,IACAmQ,EAAgBc,EAClB,EA0CgBla,UAAWhF,EAAQ6d,sBACnBjZ,YAAaga,EACbxY,OAAO,qBAAmB,2CAQpC,SAAC,EAAAf,SAAQ,WACP,SAAC,UAAI,GAACC,KAAM/C,GAAS,WACnB,SAAC,EAAAgD,WAAU,CACTC,GAAG,oBACHC,SAAS,wBACTC,iBAAiB,SACjBd,WAAYrC,EACZoD,UAAW/C,GACXpC,QAASA,EACTF,KAAMA,EACNmD,UAAWA,GACXmC,WAAS,EACThC,gBAAiBA,eAKzB,SAAC,UAAI,GAAC0B,MAAO/C,GAAS,WACpB,SAAC,EAAAwC,KAAI,GAACC,UAAWhF,EAAQf,eAAa,WACpC,SAAC,EAAA4G,cAAa,CACZC,QAAStF,EACTuF,QAAS/B,GAActC,OACvBsE,QAAS,EAAAC,aAAaC,iBAI5B,SAAC,UAAI,GAACZ,KAAM/C,GAAS,WACnB,iCACE,UAAC,EAAA4D,gBAAe,gBACH,6BACXC,OAAO,sBACPJ,QAAQ,WAAS,YAEjB,SAAC,EAAAK,MAAK,WACJ,UAAC,EAAAC,GAAE,YACD,SAAC,UAAI,GAAChB,OAAOpJ,aAAI,EAAJA,EAAM+L,QAAK,WACtB,SAAC,EAAAxB,GAAE,CACDzB,UAAWhF,EAAQ8d,iBACnBuB,OAAQ,CACNC,SAjJG,SAAC5b,EAAGyb,GACzB,OAAAjB,EAAuBnc,EAAKA,KAAKjD,KAAI,WAAM,OAAAqgB,CAAA,IAA3C,EAiJkBI,WAAYV,EACZW,uBAAwBb,QAI7B3a,GAAclF,KAAI,SAACyH,GAAiB,OACnC,SAAC,EAAAE,GAAE,UAAgCF,GAA1BA,EAAe,SADW,KAGrC,SAAC,EAAAE,GAAE,WACD,SAAC,EAAA3J,QAAO,CAACC,KAAK,KAAKiI,UAAWxB,GAAoB,GAAKxD,EAAQF,oBAIrE,SAAC,EAAAmH,MAAK,UACHgY,GAAYngB,KACX,SACE,EAUAuT,G,MAvKQlR,EA8JNmC,EAAI,OACJmc,EAAa,gBACbL,EAAc,iBACdjY,EAAG,MACHC,EAAiB,oBACjBpF,EAAqB,wBACrBgM,EAAO,UACPC,EAAqB,wBAGpB,OACH,UAAC,EAAA3H,GAAE,YACD,SAAC,UAAI,GAAChB,OAAOpJ,aAAI,EAAJA,EAAM+L,QAAK,WACtB,SAAC,EAAAX,GAAE,CACD+X,OAAQ,CACNpP,SAAUoC,EACViN,SAAU,SAACtY,EAAQ0Y,GAAgB,OAzLtB1hB,EAyLwC0hB,GAxLrEtS,EAAW6Q,GAwLqD5L,GAvLpDrU,OAClBkgB,EAAuB,EAAD,GAAK9Q,GAAQ,IAHhB,IAAgBpP,EAC7BoP,CAwLmD,EACnCmS,YAAYjc,GAAe2a,EAAoB5L,GAC/CsN,UAAWrc,SAIjB,SAAC,EAAAgE,GAAE,WACD,iCACE,UAAC,EAAAlC,KAAI,GAACyB,UAAW,CAAE6N,QAAS,QAAO,YACjC,UAAC,EAAArP,SAAQ,eAAG+Z,KACXK,GAAiBL,IAAmBK,IACnC,UAAC,EAAApa,SAAQ,GAACL,UAAWhF,EAAQge,UAAQ,4BACpByB,WAIrB,SAAC,UAAmB,CAAClY,KAAMJ,UAG/B,SAAC,EAAAG,GAAE,UAAErD,GAAcmD,MACnB,SAAC,EAAAE,GAAE,WAlMGnG,EAkMca,EAjMpCE,GACGsF,QAAO,SAAC,G,IAAEpD,EAAK,QAAO,OAAAjD,aAAQ,EAARA,EAAUsG,SAASrD,EAAnB,IACtBtF,KAAI,SAAC,GAAa,OAAP,MAAO,IAClB4I,KAAK,UA+LQ,SAAC,EAAAJ,GAAE,GAAC6I,MAAO,IAAE,WACX,SAAC,UAAkB,GACjBpI,QAAQ,mEACRC,OAAO9L,aAAI,EAAJA,EAAM+L,OACbC,aAAW,aAEV5E,GACC,SAAC,EAAAqL,OAAM,GACL/J,WAAYtB,IAAS+a,GAAgBtR,GACrCpI,QAAS,WAAM,OAAA2Z,EAAgBhb,EAAhB,EACf0C,QAAQ,SACRI,OAAO,uBAAqB,uBAK9B,SAAC,EAAAuI,OAAM,GACL3I,QAAQ,YACRpB,YAA6B,QAAjB,EAAAuZ,EAAa9L,UAAI,eAAElL,OAAQA,GAAOzE,GAAcO,GAC5D0B,QAAS,WACP,IAAMib,EAAgC,GACtCA,EAAQvN,GAAO,CACbhO,KAAM+a,EACNjY,IAAG,EACHnF,sBAAqB,EACrBoF,kBAAiB,EACjB4G,QAAO,EACPC,sBAAqB,GAEvBmQ,EAAgBwB,EAClB,EACAxZ,OAAO,oBAAkB,2BAzD1BgZ,EAAiB/M,E,WAqElC,UAAC,EAAAjN,KAAI,GAACJ,UAAWhF,EAAQH,iBAAe,YACtC,SAAC,EAAAwF,SAAQ,KACT,SAAC,EAAAA,SAAQ,WACP,SAAC,EAAAE,WAAU,CACTC,GAAG,uBACHC,SAAS,2BACTC,iBAAiB,SACjBC,UAAW/C,GACXpC,QAASA,EACTF,KAAMA,EACNmD,UAAWA,GACXuC,QAAS,EAAAqC,kBAAkBC,OAC3B1E,gBAAiBA,kBAM3B,SAAC,UAAI,GAAC0B,KAA2B,IAArBvD,EAAKA,KAAKL,QAAgBa,GAAS,WAC7C,SAAC,UAAe,CAACf,aAAc,WAAM,OAAAgd,EAAe,GAAf,UAI7C,C,iUCjbA,WAQA,WAGMzf,GAAY,EAFlB,SAEkBC,iBAAgB,CAChCsb,oBAAqB,CACnBlb,QAAS,OACTmb,SAAU,GAEZC,cAAe,CACblR,aAAc,UA0BlB,UAlBwB,SAAC,G,IAAE9H,EAAY,eAC/BxB,EAAUjB,IAChB,OACE,UAAC,EAAA0b,WAAU,GAACzU,QAAS,EAAA0U,kBAAkBC,KAAM3V,UAAWhF,EAAQsa,qBAAmB,YACjF,SAAC,EAAAM,eAAc,CAAC/K,KAAM,EAAAwJ,cACtB,SAAC,EAAAwB,MAAK,GAACC,aAAa,KAAK/d,KAAK,MAAI,kEAGlC,SAAC,EAAAge,eAAc,GAAC/V,UAAWhF,EAAQwa,eAAa,uDAGhD,SAAC,EAAA7L,OAAM,GAACvI,OAAO,gBAAgBJ,QAAQ,OAAOrB,QAASnD,GAAY,sCAKzE,C,qcCzCA,WACA,WACA,WACA,WAEA,WACA,WACA,cACA,cACA,WACA,cACA,cAEMzC,GAAY,IAAAC,iBAAgB,CAChC6gB,KAAM,CACJ3gB,gBAAiB,EAAAC,2BAA2BnB,OAE9C8hB,IAAK,CACH,WAAY,CACVngB,QAAS,IAGbub,KAAM,CACJzS,MAAO,UACPkV,eAAgB,OAChBhe,QAAS,WACT,kBAAmB,CACjBogB,cAAe,SAGnBC,gBAAiB,CACf7D,OAAQ,UAIC,EAAA8D,cAAgB,GAChB,EAAAC,2BAA6B,uBAE1C,IAAMC,EAAe,CACnB,CACEzb,MAAO,oBACP0b,MAAO,EAAAH,cACPI,QAAS,WAEX,CACE3b,MAAO,uBACP0b,MAAO,EAAAF,2BACPG,QAAS,YAIb,qBACE,IAAMrgB,EAAUjB,IACV,GAAiC,IAAAuhB,eAA/BC,EAAQ,WAAOC,EAAW,MAE5BC,GAAe,IAAAhjB,UAAQ,WAAM,WAAAijB,MAAKH,EAASI,MAAM,KAApB,GAA2B,CAACJ,IAC/D,OACE,iCACE,SAAC,UAAM,KAEP,SAAC,EAAAK,KAAI,GAAC5b,UAAWhF,EAAQ6f,KAAMzZ,OAAO,cAAcya,UAAWJ,GAAY,UACxEN,EAAarhB,KAAI,SAAC,G,IAAE4F,EAAK,QAAE0b,EAAK,QAAO,OACtC,SAAC,EAAAU,IAAG,CACF9b,UAAWhF,EAAQ8f,IACnBiB,UAAWX,EAEXY,UAAW,EACXC,SAAUb,GAAS,UAAS,aAChB1b,EACZ0B,OAAQ1B,EACRA,OACE,SAAC,EAAAwc,KAAI,GAAClc,UAAWhF,EAAQkb,KAAMiG,UAAWf,EAAmBgB,GAAIhB,GAAK,WACpE,SAAC,EAAAiB,aAAY,UAAE3c,MADqC0b,IANnDA,EAJ+B,QAiB1C,SAAC,UAAU,KACX,UAAC,EAAAkB,OAAM,WACJnB,EAAarhB,KAAI,SAAC,EAAoBuT,G,IAAlB+N,EAAK,QAAEC,EAAO,UAAY,OAC7C,SAAC,EAAAkB,MAAK,CAEJpL,KAAMiK,EACNoB,SACE,SAAC,EAAAC,UAAS,WACR,SAAC,EAAA1c,KAAI,GAACC,UAAWhF,EAAQggB,iBAAe,WACtC,SAACK,EAAO,UALThO,EAAItO,WAFkC,KAa/C,SAAC,EAAAwd,MAAK,CAACpL,KAAK,IAAIqL,SAAS,SAAC,EAAAE,SAAQ,CAACN,GAAI,EAAAnB,cAAe0B,SAAO,QAdlDnB,KAkBnB,C,gqBCjGA,WACA,WAkBA,UAX2B,SAAC,GAAE,IAAAxY,EAAI,OAAE4V,EAAQ,WAAE1V,EAAW,cAAKkN,EAAI,IAAtC,mCAC1B,OAAApN,GACE,SAAC,EAAA0J,QAAO,KAAK0D,EAAI,WACf,yBACGwI,IAAY,IAAAgE,cAAahE,EAAU1V,EAAc,CAAEtD,WAAYsD,QAAgBP,SAIpF,8BAAGiW,G,ggDChBP,WACA,cAqEA,UAzDuB,SAAC,GACtB,IAAA7L,EAAO,UACP/L,EAAO,UACPoM,EAAY,eACZE,EAAW,cACX6G,EAAU,aACV3G,EAAe,kBACf5N,EAAU,aACPwQ,EAAI,IARe,gGAUhByM,EAAWC,MAAMC,QAAQ3P,GAAgBA,EAAe,CAACA,GACzD,GAAsB,IAAAlU,WAAS,GAA9BoR,EAAM,KAAE0S,EAAS,KAGlBC,EAAalQ,EAAQjT,KAAI,SAACojB,EAAQ1b,GAAU,OAChD,SAAC,EAAA2b,aAAY,CAAsB3c,GAAI0c,EAAQlkB,MAAOkkB,GAAnCA,EAAS1b,EADoB,IAyBlD,OACE,SAAC,EAAA4b,OAAM,GACLxd,WAAYA,EACZoB,QAASA,EACTsZ,SAzBa,SAACtY,EAAQqb,GACxB,OAAQrc,GACN,KAAK,EAAAkM,cAAcC,OACjBG,EAAY+P,GACZL,GAAU,GACV,MACF,KAAK,EAAA9P,cAAcK,eACnB,KAAK,EAAAL,cAAcqH,SACjB,GAAIuI,MAAMC,QAAQ3P,GAAe,CAC/B,GAAIyP,EAASpa,SAAS4a,GAAY,CAChC,IAAMC,EAAYT,EAASra,QAAO,SAAC+a,GAAS,OAAAA,IAASF,CAAT,IAC5C/P,EAAYgQ,GACZ,K,CAEFhQ,EAAY,EAAD,KAAKuP,GAAU,GAAF,CAAEQ,IAAS,IACnC,K,EAIR,EAOIG,WAAYX,EACZvS,OAAQA,EACRd,SAlCa,SAACc,GAAW,OAAA0S,EAAU1S,EAAV,EAmCzBkD,gBAAiBA,EACjBiQ,gCAA8B,EAC9BtJ,WAAYA,GACR/D,EAAI,UAEP6M,IAGP,C,oVClEMS,EAFN,SAE0B,cAWb,EAAAjB,UAAY,SAAC,G,IAAE7D,EAAQ,WAAc,OAChD,SAAC8E,EAAiB,GAChBC,YAAY,kBACZC,WAAW,kBACXC,iBAAiB,sDAAoD,UAEpEjF,IAN6C,C,iUCblD,WACA,WAKA,WAGA,WAOMkF,EAAa,aAEb/jB,GAAY,IAAAC,iBAAgB,CAChC+jB,QAAS,CACPta,MAAO,EAAAua,iBAAiBhlB,MACxBwK,WAAY,SAIhB,qBACE,IAAMxI,EAAUjB,IAEhB,OACE,UAAC+jB,EAAU,YACT,SAAC,EAAAG,gBAAe,CAACve,MAAM,yBACvB,SAAC,EAAA6W,KAAI,GAACvW,UAAWhF,EAAQ+iB,QAAS3c,OAAO,mCAAiC,wEAKhF,C,kFC7BA,UAFa,SAAC,G,IAAEd,EAAI,OAAEsY,EAAQ,WAAc,OAACtY,GAAO,yBAAQ,8BAAGsY,GAAnB,C,4VCL5C,WAQA,WACA,WAMMkF,EAAa,aAIN,EAAA7lB,kBAA6C,WAAM,OAC9D,iCACE,SAAC6lB,EAAU,WACT,SAAC,EAAAG,gBAAe,CAACve,MAAM,oBAEzB,SAAC,EAAAK,KAAI,GAACme,MAAO,CAAE/G,OAAQ,SAAQ,WAC7B,UAAC,EAAA1B,WAAU,GAACzU,QAAS,EAAA0U,kBAAkBC,MAAI,YACzC,SAAC,EAAAC,eAAc,CAAC/K,KAAM,EAAAsT,YACtB,SAAC,EAAAtI,MAAK,GAACC,aAAa,KAAK/d,KAAK,MAAI,uDAGlC,SAAC,EAAAge,eAAc,wFAXyC,C,4rDCnBhE,WACA,WAEA,WACA,WACA,WACA,WAEMhc,GAAY,IAAAC,iBAAgB,CAChCokB,oBAAqB,CACnBjH,OAAQ,cACRjd,gBAAiB,EAAAC,2BAA2BnB,OAE9CqlB,kBAAmB,CACjBlH,OAAQ,gBAEVmH,kBAAmB,CACjBC,UAAW,OACX5jB,QAAS,EACTuU,WAAY,OAYhB,gCACQ,GAA0B,IAAAsP,aAAxBC,EAAM,SAAEC,EAAW,cAGrBC,GAAY,IAAAlmB,SAAQgmB,EAAQ,IAC5B,GAA8B,IAAAvlB,UAASylB,GAAtC5T,EAAU,KAAE6T,EAAa,KAC1B,GAA4C,IAAA1lB,WAAS,GAApD2lB,EAAiB,KAAEC,EAAoB,KACxC9jB,EAAUjB,IAEhB,IAAK4kB,EAAW,OAAO,wBAEvB,IAAMnV,EAAW,WAAM,OAAAoV,GAAc,SAACG,GAAS,OAACA,CAAD,GAAxB,EAYvB,OACE,SAAC,EAAAhf,KAAI,GAACC,UAAWhF,EAAQojB,qBAAmB,WAC1C,UAAC,EAAAY,kBAAiB,GAChBC,WAAW,mDACXzV,SAAUA,EACVuB,WAAYA,EACZmU,YAAY,QAAO,aACR,uBAAsB,yBACV,qBAAmB,YAE1C,SAAC,EAAA3I,KAAI,uEACL,SAAC,EAAA5M,OAAM,GACL3J,UAAWhF,EAAQsjB,kBACnBa,aAAa,QACbtU,KACEgU,GACE,SAAC,EAAA/mB,QAAO,CAACC,KAAK,KAAKiI,UAAWhF,EAAQqjB,qBAEtC,SAAC,EAAAe,eAAc,IAGnBpe,QAAQ,OACRI,OAAO,kBACPzB,QAlCmB,gD,wDACzBmf,GAAqB,G,iBAEnB,O,sBAAA,GAAOJ,aAAW,EAAXA,EAA6BW,mBAAmB,0B,cAAvD,SACA7V,I,+BAEA8V,QAAQC,KAAK,G,oBAEfT,GAAqB,G,YA2Bflf,WAAYif,GAAiB,wDAOvC,C,iUCrFA,WAGM9kB,GAAY,EAFlB,SAEkBC,iBAAgB,CAChCkc,KAAM,CACJsJ,WAAY,SACZplB,QAAS,OACT+Q,MAAO,eAETN,KAAM,CACJiH,WAAY,SAiBhB,UAT4B,SAAC,G,IAAEvP,EAAI,OAC3BvH,EAAUjB,IAChB,OACE,iBAAGwI,KAAMA,EAAMvC,UAAWhF,EAAQkb,KAAMuJ,IAAI,aAAaC,OAAO,UAAQ,WACrEnd,EAAI,KAAE,SAAC,EAAAod,oBAAmB,CAAC3f,UAAWhF,EAAQ6P,UAGrD,C,uXCzBA,WACA,UASa,EAAA+U,YAAa,IAAAC,eAAc,CAAC,GAE5B,EAAAhnB,gBAAkB,SAAC,G,IAAE+f,EAAQ,WAClC,GAAkB,IAAA1f,eAA2ByJ,GAA5CzL,EAAI,KAAEC,EAAO,KACdkO,GAA0B,IAAAya,SAAQ,+CAAgD,EAExF,OACE,SAAC,EAAAF,WAAWG,SAAQ,GAClB/mB,MAAO,CACLqM,wBAAuB,EACvBlO,QAAO,EACPD,KAAMA,EACF,CACEc,KAAMd,aAAI,EAAJA,EAAM8oB,cAAc,kBAAmB,eAAgB,QAC7D/c,MAAO/L,aAAI,EAAJA,EAAM8oB,cAAc,kBAAmB,eAAgB,eAEhErd,IACL,UAEAiW,IAGP,EAEa,EAAA3hB,cAAgB,WAAM,WAAAgpB,YAAW,EAAAL,WAAX,C,+uDClCnC,kBA4Ja,EAAAM,uBAK+B,SAAO5kB,EAAMuC,EAAOvB,EAAYsF,GAAM,0C,gEAI/D,OAHX1F,EAAcI,aAAU,EAAVA,EAAYJ,YAC1BikB,EAAmC,QAApB,EAAA7jB,aAAU,EAAVA,EAAYH,gBAAQ,eAAEuG,KAAK,KAC1C0d,EAA8B,QAAlB,EAAA9jB,aAAU,EAAVA,EAAYF,cAAM,eAAEsG,KAAK,KAC1B,GAAM,UAAM2d,IAC3B,gEACG/kB,EAAO,GAAKuC,EAAK,kBACVA,EAAK,mBAAW3B,EAAW,oBAAYikB,EAAY,iBAASC,EAAS,oBAAYxe,K,OAE7F,MAAO,CAAP,EALiB,SAIhB,M,QAIU,EAAA0e,eAKuB,SAAOhlB,EAAMuC,EAAOvB,EAAYsF,GAAM,0C,gEAKvD,OAJX1F,EAAcI,EAAWJ,YACzBikB,EAAe7jB,EAAWH,SAASuG,KAAK,KACxC0d,EAAY9jB,EAAWF,OAAOsG,KAAK,KACnC6d,EAAkC,QAApB,EAAAjkB,aAAU,EAAVA,EAAYD,gBAAQ,eAAEqG,KAAK,KAC9B,GAAM,UAAM2d,IAC3B,wDACG/kB,EAAO,GAAKuC,EAAK,kBACVA,EAAK,mBAAW3B,EAAW,oBAAYikB,EAAY,mBAAWI,EAAW,iBAASH,EAAS,oBAAYxe,K,OAEnH,MAAO,CAAP,EALiB,SAIhB,M,QAIU,EAAA4e,sBAAyD,SAAOliB,GAAY,0C,kDACtE,SAAM,UAAMmiB,OAAO,+CAAwCniB,K,OAC5E,MAAO,CAAP,EADiB,SAAkE,M,QAIxE,EAAAoiB,oBAEgC,SAAOxG,GAAO,0C,kDACxC,SAAM,UAAMyG,KAAK,sDAAuDzG,I,OACzF,MAAO,CAAP,EADiB,SAAgF,M,QAItF,EAAA0G,oBAA0E,SACrF1G,GAAO,0C,kDAEU,SAAM,UAAM2G,MAC3B,iDAA0C3G,EAAQ5b,MAClD4b,I,OAEF,MAAO,CAAP,EAJiB,SAGhB,M,QAIU,EAAA4G,oBAA+D,qD,kDACzD,SAAM,UAAMT,IAAI,mD,OACjC,MAAO,CAAP,EADiB,SAAiE,M,QAIvE,EAAAU,yBAEsB,SAAO7G,GAAO,0C,kDAC9B,SAAM,UAAMyG,KAC3B,4DACAzG,I,OAEF,MAAO,CAAP,EAJiB,SAGhB,M,QAIU,EAAA8G,UAAsD,SAAO7e,GAAW,0C,kDAClE,SAAM,UAAMwe,KAC3B,kEACA,CAAExe,IAAG,K,OAEP,MAAO,CAAP,EAJiB,SAGhB,M,QAIU,EAAA8e,YAMoB,SAC/B3iB,EACAhD,EACAuC,EACA3B,EACA0F,GAAc,0C,kDAEG,SAAM,UAAMye,IAC3B,iDAA0C/hB,EAAI,yBAC3ChD,EAAO,GAAKuC,EAAK,kBACVA,EAAK,mBAAW3B,EAAW,oBAAY0F,K,OAEnD,MAAO,CAAP,EALiB,SAIhB,M,QAIU,EAAAzD,qBAEQ,SAAO+b,GAAO,0C,kDAChB,SAAM,UAAMyG,KAC3B,+CAAwCzG,EAAQ5b,KAAI,gBACpD,CAAEC,YAAa2b,EAAQ3b,e,OAEzB,MAAO,CAAP,EAJiB,SAGhB,M,yzECvQH,eACA,WACA,WACA,WAEA,WACA,WAwBa,EAAA2iB,iBAAmB,mBACnB,EAAAC,8BAAgC,gCAChC,EAAAva,sBAAwB,wBACxB,EAAAwa,kBAAoB,oBACpB,EAAAC,aAAe,eAIf,EAAA3H,4BAA8B,SACzCpe,EACAuC,EACAvB,EACAsF,GAEA,WAAA0f,UAAQ,GACL,EAAAH,8BAA+B7lB,EAAMuC,EAAO+D,GAAWoL,OAAO/M,OAAO3D,GAAc,CAAC,IAAE,IACvF,WAAM,WAAA4jB,wBAAuB5kB,EAAMuC,EAAOvB,EAAYsF,EAAhD,GACN,CACE2f,kBAAkB,EAClBC,UAAW,KALf,EASW,EAAAlkB,oBAAsB,SACjChC,EACAuC,EACAvB,EACAsF,GAEM,OAAwB,IAAA1I,WAAS,GAAhCuoB,EAAO,KAAEC,EAAU,KACpB,GAA4B,IAAAxoB,UAAS,GAApCyoB,EAAS,KAAEC,EAAY,KAE9B,OAAO,IAAAN,UAAQ,GAEZ,EAAAJ,iBAAkB5lB,EAAMuC,EAAO+D,GAAWoL,OAAO/M,OAAO3D,IAAW,IACpE,WAAM,WAAAgkB,gBAAehlB,EAAMuC,EAAOvB,EAAYsF,EAAxC,GACN,CACEigB,UAAW,SAAC9kB,G,MACJ+kB,EAA4B,QAAV,EAAA/kB,aAAI,EAAJA,EAAMA,YAAI,eAAEmL,MAClC,SAAC,G,IAAErI,EAAM,SAAO,MAAW,YAAXA,GAAmC,KAAXA,CAAxB,IAUlB,OARI4hB,GAAWK,GAEbF,EAAaD,EAAY,GAEvBF,IAAYK,GAEdF,EAAa,GAINF,IAFLC,EAAY,KAKEG,EACpB,EACAC,QAAS,WACPL,GAAW,GACXE,EAAa,EACf,EACAI,gBAAiBP,EAtDW,UAsD2B9e,EACvDsf,6BAA6B,EAC7B3pB,qBAAsBmpB,EACtBF,kBAAkB,EAClBC,UAAW,KAGjB,EAEa,EAAA5Z,mBAAqB,SAAC1P,EAA0BgiB,GACnD,IAAAzQ,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAwY,cAAY,WAAM,WAAAxB,qBAAoBxG,EAAQ1X,QAAO,SAAC+a,GAAS,QAAEA,CAAF,IAA7C,GAAuD,CAC9EsE,UAAW,SAAC9kB,G,MACJolB,EAAcplB,EAAuBmL,MAAK,SAAC,GAAe,MAAW,YAAlB,QAAO,IAEhEuB,EAAO,CACLzI,QAAS,EAAA2Q,aAAayQ,QACtB1iB,OACEwa,aAAO,EAAPA,EAASxd,QAAS,EACd,UAAGwd,aAAO,EAAPA,EAASxd,OAAM,8BAClB,6BAAkC,QAAZ,EAAAwd,aAAO,EAAPA,EAAU,UAAE,eAAE7a,KAAI,WAC9CkE,YAAa4e,EACT,uCACA,oDAGNjqB,EAAYmqB,kBAAkB,EAAAnB,kBAC9BhpB,EAAYmqB,kBAAkB,EAAAlB,8BAChC,EACAY,QAAS,SAACvR,G,cACJjN,EAAc,oBAElB,cAA4B,QAAb,EAAAiN,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,OAC5B,IAAK,SACHwG,EAA2B,QAAb,EAAAiN,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,KAC7B,MACF,IAAK,SAOD,QALF,EAA0B,QAA1B,EAAa,QAAb,EAAAyT,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,KAAKwL,cAAM,eAAEpJ,MAAK,SAAC,G,IAAEojB,EAAM,SACxC,GAAIA,EAEF,OADAhf,EAAcgf,GACP,CAEX,WAAE,SAAEA,OAMR9Y,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,qCACP6D,YAAW,GAEf,GAEJ,EAEa,EAAAuW,6BAA+B,SAC1C5hB,EACAgiB,EACA5e,EACAE,EACAc,GAEQ,IAAAmN,GAAW,IAAAC,mBAAiB,OAC9B8Y,EAA8B,EAAH,CAC/B,EAAArB,8BACA7lB,EACAE,OACAmH,GACGqK,OAAO/M,OAAO3D,GAAc,CAAC,IAAE,GAE9BmmB,EAAkBvI,EAAQ1X,QAAO,SAAC+a,GAAS,QAAEA,CAAF,IACjD,OAAO,IAAA2E,cAAY,WAAM,WAAAxB,qBAAoB+B,EAApB,GAAsC,CAC7DC,SAAU,qD,0DAGR,OAFQrjB,EAASojB,EAAgB,GAAE,KAEnC,GAAMvqB,EAAYyqB,cAAcH,I,OAchC,OAdA,SAEMI,EACJ1qB,EAAYyO,aAAa6b,IAAgC,CAAC,EAE5DtqB,EAAY2qB,aAAaL,GAA6B,W,MAAM,cACvDI,GAAmB,CACtB7lB,KAA8B,QAAxB,EAAA6lB,EAAoB7lB,YAAI,eAAEjD,KAAI,SAACiD,GACnC,OAAIsC,IAAStC,EAAKqd,gBAAmBrd,EAAKuB,KAGnCvB,EAFE,EAAP,KAAYA,GAAI,CAAEuB,KAAM,OAAQmc,cAAepb,GAGnD,K,IAEK,CAAP,EAAO,CAAEyjB,aAAcF,I,QAEzBf,UAAW,SAAC9kB,G,MACJolB,EAAcplB,EAAuBmL,MAAK,SAAC,GAAe,MAAW,YAAlB,QAAO,IAChEuB,EAAO,CACLzI,QAAS,EAAA2Q,aAAayQ,QACtB1iB,MAAO,6BAA+B,QAAT,EAAA3C,aAAI,EAAJA,EAAO,UAAE,eAAEsC,KAAI,WAC5CkE,YAAa4e,EACT,uCACA,oDAGNjqB,EAAYmqB,kBAAkB,EAAAnB,kBAC9BhpB,EAAYmqB,kBAAkB,EAAAlB,8BAChC,EACAY,QAAS,SAACvR,EAAKuS,EAAUC,GACvB,GAAIA,EAAS,CACH,IAAAF,EAAiBE,EAExB,aACD9qB,EAAY2qB,aAAaL,EAA6BM,GACtD,IAAMtlB,EAAQgT,EACd/G,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,uCACP6D,YAAa/F,aAAK,EAALA,EAAOqT,S,CAG1B,GAEJ,EAEa,EAAAkE,oBAAsB,SAAC7c,EAA0BgiB,GACpD,IAAAzQ,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAwY,cAAY,WAAM,WAAAtB,qBAAoB1G,EAAQ,GAA5B,GAAiC,CACxD2H,UAAW,WACTpY,EAAO,CACLzI,QAAS,EAAA2Q,aAAayQ,QACtB1iB,MAAO,8BAAuBwa,EAAQxd,OAAM,YAAIwd,EAAQxd,OAAS,EAAI,QAAU,UAEjFxE,EAAYmqB,kBAAkB,EAAAnB,kBAC9BhpB,EAAYmqB,kBAAkB,EAAAlB,8BAChC,EACAY,QAAS,SAACvR,G,cACJjN,EAAc,oBAElB,cAA4B,QAAb,EAAAiN,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,OAC5B,IAAK,SACHwG,EAA2B,QAAb,EAAAiN,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,KAC7B,MACF,IAAK,SAOD,QALF,EAA0B,QAA1B,EAAa,QAAb,EAAAyT,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,KAAKwL,cAAM,eAAEpJ,MAAK,SAAC,G,IAAEojB,EAAM,SACxC,GAAIA,EAEF,OADAhf,EAAcgf,GACP,CAEX,WAAE,SAAEA,OAMR9Y,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,sCACP6D,YAAW,GAEf,GAEJ,EAEa,EAAAsF,uBAAyB,WAC5B,IAAAY,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAwY,cAAY,SAAChI,GAAkC,WAAA6G,0BAAyB7G,EAAzB,GAAmC,CACvF6H,QAAS,SAACvR,GACR,IAAMhT,EAAQgT,EACd/G,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,+BACP6D,YAAa/F,aAAK,EAALA,EAAOqT,SAExB,GAEJ,EAEa,EAAAmJ,iCAAmC,SAC9C9hB,EACAoD,EACAE,EACAc,GAEA,IAAMkmB,EAA8B,EAAH,CAC/B,EAAArB,8BACA7lB,EACAE,OACAmH,GACGqK,OAAO/M,OAAO3D,GAAc,CAAC,IAAE,GAE5BmN,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAwY,aAAY,EAAA1B,sBAAuB,CACxCkC,SAAU,SAAOpkB,GAAY,0C,wDAE3B,SAAMpG,EAAYyqB,cAAcH,I,OAehC,OAfA,SAEMI,EACJ1qB,EAAYyO,aAAa6b,IAAgC,CAAC,EAE5DtqB,EAAY2qB,aAAaL,GAA6B,W,MAAM,cACvDI,GAAmB,CACtB7lB,KAA8B,QAAxB,EAAA6lB,EAAoB7lB,YAAI,eAAEjD,KAAI,SAACiD,GACnC,OAAIA,EAAKuB,OAASA,EACT,EAAP,KAAYvB,GAAI,CAAEuB,UAAMqE,IAEnB5F,CACT,K,IAGK,CAAP,EAAO,CAAE+lB,aAAcF,EAAqB1qB,YAAW,I,QAEzD2pB,UAAW,WACT3pB,EAAYmqB,kBAAkB,EAAAnB,kBAC9BhpB,EAAYmqB,kBAAkB,EAAAlB,8BAChC,EAEAY,QAAS,SAACvR,EAAKuS,EAAUC,GACvB,GAAIA,EAAS,CACH,IAAAF,EAAiBE,EAExB,aACD9qB,EAAY2qB,aAAaL,EAA6BM,GACtD,IAAMtlB,EAAQgT,EACd/G,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,uCACP6D,YAAa/F,aAAK,EAALA,EAAOqT,S,CAG1B,GAEJ,EAEa,EAAA9S,2BAA6B,SACxC7F,EACAoD,EACAE,EACAc,EACAe,GAGA,IAAM4lB,EAAsB,EAAH,CACvB,EAAA/B,iBACA5lB,EACAE,EACA6B,GACG2P,OAAO/M,OAAO3D,GAAc,CAAC,IAAE,GAE5BmN,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAwY,aAAY,EAAA1B,sBAAuB,CACxCkC,SAAU,SAAOpkB,GAAY,0C,wDAE3B,SAAMpG,EAAYyqB,cAAcM,I,OAiBhC,OAjBA,SAEMH,EACJ5qB,EAAYyO,aAAasc,IAAwB,CAAC,EAGpD/qB,EAAY2qB,aAAaI,GAAqB,W,MAAM,cAC/CH,GAAY,CACf/lB,KAAuB,QAAjB,EAAA+lB,EAAa/lB,YAAI,eAAEyF,QAAO,SAACzF,GAAS,OAAAuB,IAASvB,EAAKuB,IAAd,IAC1CX,KAAMmlB,EAAanlB,KACf,EAAD,KACMmlB,EAAanlB,MAAI,CACpBC,MAAOklB,EAAanlB,KAAKC,MAAQklB,EAAanlB,KAAKC,MAAQ,EAAI,SAEjE+E,G,IAGC,CAAP,EAAO,CAAEmgB,aAAY,EAAE5qB,YAAW,I,QAEpC2pB,UAAW,SAACqB,EAAOC,EAAYH,GAErB,IAAAF,EAAiBE,EAExB,aACD9qB,EAAYkrB,eAAe,EAAAlC,kBAAkB,SAACnkB,G,QAK5C,YAL4C,IAAAA,IAAAA,EAAA,KAC9B,QAAV,EAAAA,aAAI,EAAJA,EAAMY,YAAI,eAAEC,SACdb,EAAKY,KAAKC,OAA0B,QAAlB,EAAAklB,aAAY,EAAZA,EAAcnlB,YAAI,eAAEC,OAAQ,GAGzCb,CACT,IACA7E,EAAYmqB,kBAAkB,EAAAnB,kBAC9BhpB,EAAYmqB,kBAAkB,EAAAlB,8BAChC,EAEAY,QAAS,SAACvR,EAAKuS,EAAUC,GACvB,GAAIA,EAAS,CACH,IAAAF,EAAiBE,EAExB,aACD9qB,EAAY2qB,aAAaI,EAAqBH,GAC9C,IAAMtlB,EAAQgT,EACd/G,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,wCACP6D,YAAa/F,aAAK,EAALA,EAAOqT,S,CAG1B,GAEJ,EAEa,EAAAlU,oBAAsB,WACjC,WAAA2kB,UAAmC,EAAA1a,sBAAuB,EAAAka,oBAAqB,CAC7ES,kBAAkB,EAClBC,UAAW6B,KAFb,EAKW,EAAA9c,eAAiB,WACpB,IAAAkD,GAAW,IAAAC,mBAAiB,OAC9B,GAA4B,IAAAxQ,WAAS,GAApCqE,EAAS,KAAE+lB,EAAY,KAqB9B,MAAO,CAAE9c,YAnBW,SAAOrE,GAAW,uBAAG2E,SAAO,W,gEAC9Cwc,GAAa,GACTta,EAAU7G,E,iBAEC,O,sBAAA,IAAM,IAAA6e,WAAU7e,I,cAAvBpF,EAAO,SACbiM,EAAUjM,EAAKiM,Q,+BACN,IAAAsZ,SACDvlB,QADS,IAAG,GAAC,EAAC,GACyD,KACzEwG,EAA8B,iBAATxG,EAAoBA,EAAOA,aAAI,EAAJA,EAAM8T,QAC5DpH,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,2CACP6D,YAAW,I,aAIf,OADA+f,GAAa,GACN,CAAP,EAAOta,G,QAGazL,UAAS,EACjC,EAEa,EAAAmZ,oBAAsB,SACjCpY,EACAV,EACAtC,EACAuC,EACA3B,EACA0F,GAEA,WAAA0f,UACE,CAAC,EAAAD,aAAc/iB,EAAMhD,EAAMuC,EAAO3B,EAAa0F,EAAQhE,IACvD,WAAM,WAAAqjB,aAAY3iB,EAAMhD,EAAMuC,EAAO3B,EAAa0F,EAA5C,GACN,CACE2f,kBAAkB,EAClBgC,mBAAmB,EACnB/B,UAAW,IACXO,QAAS,SAACvR,GACA,IACFhT,EAAQgT,GACd/G,GAFmB,IAAAC,mBAAiB,QAE7B,CACL1I,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,8BACP6D,YAAa/F,aAAK,EAALA,EAAOqT,SAExB,GAfJ,EAmBW,EAAA3S,8BAAgC,SAC3ChG,EACAoD,EACAE,EACAc,EACAe,GAGA,IAAM4lB,EAAsB,EAAH,CACvB,EAAA/B,iBACA5lB,EACAE,EACA6B,GACG2P,OAAO/M,OAAO3D,GAAc,CAAC,IAAE,GAE5BmN,GAAW,IAAAC,mBAAiB,OACpC,OAAO,IAAAwY,aAAY,EAAA/jB,qBAAsB,CACvCukB,SAAU,SAAOnF,GAAqC,0C,gEAEpD,SAAMrlB,EAAYyqB,cAAcM,I,OAkBhC,OAlBA,SAEMH,EACJ5qB,EAAYyO,aAAasc,IAAwB,CAAC,EAE9CO,EAA0E,QAAzD,EAAiB,QAAjB,EAAAV,EAAa/lB,YAAI,eAAEoC,MAAK,SAACpC,GAAS,OAAAwgB,EAAKjf,MAAQvB,EAAKuB,IAAlB,WAAuB,eAAEuB,OAC5E+a,GAAU,IAAA6I,WAAUX,GACtBU,IAGF5I,EAAQ7d,KAAKyF,QAAO,SAACzF,GAAS,OAAAwgB,EAAKjf,MAAQvB,EAAKuB,IAAlB,IAAwBolB,GAAG,GAAG7jB,OAAS,WAIvE3H,EAAY2qB,aAAaI,GAAqB,WAAM,YAC/CrI,EAD+C,IAI7C,CAAP,EAAO,CAAEkI,aAAY,EAAE5qB,YAAW,I,QAEpC2pB,UAAW,WACTpY,EAAO,CACLzI,QAAS,EAAA2Q,aAAayQ,QACtB1iB,MAAO,wCAEX,EAEAqiB,QAAS,SAACvR,EAA6CuS,EAAUC,G,cAC/D,GAAIA,EAAS,CACX,IAEI,EAAcxlB,MAFJgT,OAES,EAFTA,EAEWK,QACzB,cAA4B,QAAb,EAAAL,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,OAC5B,IAAK,SACH,EAA2B,QAAb,EAAAyT,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,KAC7B,MACF,IAAK,SAMD,QAJF,EAA0B,QAA1B,EAAa,QAAb,EAAAyT,aAAG,EAAHA,EAAK8R,gBAAQ,eAAEvlB,KAAKwL,cAAM,eAAEpJ,MAAK,SAAC,G,IAAEojB,EAAM,SACpCA,IACF,EAAcA,EAElB,WAAE,SAAEA,OAMA,IAAAO,EAAiBE,EAExB,aACD9qB,EAAY2qB,aAAaI,EAAqBH,GAE9CrZ,EAAO,CACLzI,QAAS,EAAA2Q,aAAaC,OACtBlS,MAAO,iCACP6D,YAAW,G,CAGjB,GAEJ,C,4FCrhBA,eACA,WASa,EAAAmG,gBAAkB,WAC7B,IAAMia,GAAW,IAAAC,eAIjB,MAAO,CAAEna,OAH8C,SAACoa,GACtD,OAAAF,GAAS,IAAAG,iBAAgBD,GAAzB,EAGJ,C,2UCjBA,eAGa,EAAAlrB,YAAc,W,IAAC,sDAAgC,SAAAorB,UAAS,gBAAC,CAAC,EAAG,CAAC,GAAMC,GAAU,GAA/B,EAE/C,EAAAtrB,WAAa,WAAM,WAAAurB,eAAA,C","sources":["webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/Hooks/useDebounce.tsx","webpack:///./src/Hooks/useDeepCompareEffect.tsx","webpack:///./src/Pages/ContentListTable/ContentListTable.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/AddContent.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/components/ContentValidity.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/helpers.ts","webpack:///./src/Pages/ContentListTable/components/ContentListFilters.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentModal.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/helpers.ts","webpack:///./src/Pages/ContentListTable/components/EmptyTableState.tsx","webpack:///./src/Pages/ContentListTable/components/PackageCount.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/PackageModal.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/components/EmptyPackageState.tsx","webpack:///./src/Pages/ContentListTable/components/StatusIcon.tsx","webpack:///./src/Pages/ContentListTable/components/StatusText.tsx","webpack:///./src/Pages/PopularRepositoriesTable/PopularRepositoriesTable.tsx","webpack:///./src/Pages/PopularRepositoriesTable/components/EmptyTableState.tsx","webpack:///./src/Routes.tsx","webpack:///./src/components/ConditionalTooltip/ConditionalTooltip.tsx","webpack:///./src/components/DropdownSelect/DropdownSelect.tsx","webpack:///./src/components/Error/ErrorPage.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Hide/Hide.tsx","webpack:///./src/components/NoPermissionsPage/NoPermissionsPage.tsx","webpack:///./src/components/QuickStart/QuickStart.tsx","webpack:///./src/components/UrlWithLinkIcon/UrlWithLinkIcon.tsx","webpack:///./src/middleware/AppContext.tsx","webpack:///./src/services/Content/ContentApi.ts","webpack:///./src/services/Content/ContentQueries.ts","webpack:///./src/services/Notifications/Notifications.tsx","webpack:///./src/store/index.tsx"],"sourcesContent":["import '@redhat-cloud-services/frontend-components-utilities/styles/_all';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport Routes from './Routes';\nimport { useAppContext } from './middleware/AppContext';\nimport { NoPermissionsPage } from './components/NoPermissionsPage/NoPermissionsPage';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { insights } from '../package.json';\n\nimport { getRegistry as _getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { fetchRBAC } from '@redhat-cloud-services/insights-common-typescript';\nimport { useEffect } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst getRegistry = _getRegistry as unknown as () => { register: ({ notifications }) => void };\nconst { appname } = insights;\n\nexport default function App() {\n  const { rbac, setRbac } = useAppContext();\n  const chrome = useChrome();\n\n  useEffect(() => {\n    // Get chrome and register app\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n\n    if (chrome && !rbac) {\n      // Get permissions and store them in context\n      chrome.auth.getUser().then(async () => fetchRBAC(appname).then(setRbac));\n    }\n  }, [!!chrome]);\n\n  switch (true) {\n    case !rbac:\n      return (\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      );\n    case rbac?.read:\n      return (\n        <>\n          <NotificationsPortal />\n          <Routes />\n        </>\n      );\n\n    default:\n      return <NoPermissionsPage />;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport * as Redux from 'redux';\n\nimport App from './App';\nimport { ContextProvider } from './middleware/AppContext';\nimport { createStore, resetStore } from './store';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false, // TODO: Have a conversation about this\n    },\n  },\n});\n\ninterface AppEntryProps {\n  logger?: Redux.Middleware;\n}\n\nexport default function AppEntry({ logger }: AppEntryProps) {\n  const store = React.useMemo(() => {\n    resetStore();\n    if (logger) {\n      return createStore(logger).store;\n    }\n    return createStore().store;\n  }, [logger]);\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('view-list-page');\n  }, []);\n\n  return (\n    <ReduxProvider store={store}>\n      <ContextProvider>\n        <QueryClientProvider client={queryClient}>\n          <App />\n        </QueryClientProvider>\n      </ContextProvider>\n    </ReduxProvider>\n  );\n}\n","import { isEqual } from 'lodash';\nimport { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // We need to make sure that we compare-deep here as the default useEffect deps do not.\n    if (!isEqual(value, debouncedValue)) {\n      const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { isEqual } from 'lodash';\nimport { useEffect, useRef } from 'react';\n\nfunction useDeepCompareMemoize(value) {\n  const ref = useRef();\n  // it can be done by using useMemo as well\n  // but useRef is rather cleaner and easier\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nexport default function useDeepCompareEffect(callback, dependencies) {\n  useEffect(callback, dependencies.map(useDeepCompareMemoize));\n}\n","import {\n  Bullseye,\n  Flex,\n  FlexItem,\n  Grid,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  ActionsColumn,\n  IAction,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useCallback, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  ContentItem,\n  FilterData,\n  IntrospectRepositoryRequestItem,\n} from '../../services/Content/ContentApi';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  useContentListQuery,\n  useDeleteContentItemMutate,\n  useIntrospectRepositoryMutate,\n  useRepositoryParams,\n} from '../../services/Content/ContentQueries';\nimport ContentListFilters from './components/ContentListFilters';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from './components/EmptyTableState';\nimport { useQueryClient } from 'react-query';\nimport EditContentModal from './components/EditContentModal/EditContentModal';\nimport StatusIcon from './components/StatusIcon';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport PackageCount from './components/PackageCount';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport dayjs from 'dayjs';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nconst ContentListTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editValues, setEditValues] = useState<ContentItem[]>([]);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const [filterData, setFilterData] = useState<FilterData>({\n    searchQuery: '',\n    versions: [],\n    arches: [],\n    statuses: [],\n  });\n\n  const clearFilters = () =>\n    setFilterData({ searchQuery: '', versions: [], arches: [], statuses: [] });\n\n  const notFiltered =\n    !filterData.arches?.length &&\n    filterData.searchQuery === '' &&\n    !filterData.versions?.length &&\n    !filterData.statuses?.length;\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const columnSortAttributes = [\n    'name',\n    'distribution_arch',\n    'distribution_versions',\n    'package_count',\n    'last_introspection_time',\n    'status',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useContentListQuery(page, perPage, filterData, sortString());\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  const { mutateAsync: introspectRepository, isLoading: isIntrospecting } =\n    useIntrospectRepositoryMutate(queryClient, page, perPage, filterData, sortString());\n\n  const introspectRepoForUuid = (uuid: string): Promise<void> =>\n    introspectRepository({ uuid: uuid, reset_count: true } as IntrospectRepositoryRequestItem);\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading || isIntrospecting;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = [\n    'Name',\n    'Architecture',\n    'Versions',\n    'Packages',\n    'Last Introspection',\n    'Status',\n  ];\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const lastIntrospectionDisplay = (time?: string): string =>\n    time === '' || time === undefined ? 'Never' : dayjs(time).fromNow();\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: contentList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const rowActions = useCallback(\n    (rowData: ContentItem): IAction[] => [\n      {\n        title: 'Delete',\n        onClick: () =>\n          deleteItem(rowData?.uuid).then(() => {\n            // If this is the last item on a page, go to previous page.\n            if (page > 1 && count / perPage + 1 >= page && (count - 1) % perPage === 0) {\n              setPage(page - 1);\n            }\n          }),\n      },\n      {\n        isDisabled: actionTakingPlace,\n        title: 'Edit',\n        onClick: () => {\n          setEditValues([rowData]);\n          setEditModalOpen(true);\n        },\n      },\n      {\n        isDisabled: actionTakingPlace || rowData?.status == 'Retrying',\n        title: 'Introspect Now',\n        onClick: () => introspectRepoForUuid(rowData?.uuid),\n      },\n    ],\n    [actionTakingPlace],\n  );\n\n  const countIsZero = count === 0;\n\n  if (countIsZero && notFiltered && !isLoading)\n    return (\n      <Bullseye data-ouia-safe={!actionTakingPlace} data-ouia-component-id='content_list_page'>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Bullseye>\n    );\n\n  return (\n    <Grid\n      data-ouia-safe={!actionTakingPlace}\n      data-ouia-component-id='content_list_page'\n      className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}\n    >\n      <EditContentModal\n        values={editValues}\n        open={editModalOpen}\n        setClosed={() => {\n          setEditModalOpen(false);\n          setEditValues([]);\n        }}\n      />\n      <Flex className={classes.topContainer}>\n        <ContentListFilters\n          isLoading={isLoading}\n          setFilterData={(values) => {\n            setFilterData(values);\n            setPage(1);\n          }}\n          filterData={filterData}\n        />\n        <FlexItem>\n          <Hide hide={countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={countIsZero || isLoading}>\n        <>\n          <TableComposable\n            aria-label='Custom repositories table'\n            ouiaId='custom_repositories_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                {columnHeaders.map((columnHeader, index) => (\n                  <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                    {columnHeader}\n                  </Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {contentList.map((rowData: ContentItem) => {\n                const {\n                  uuid,\n                  name,\n                  url,\n                  distribution_arch,\n                  distribution_versions,\n                  last_introspection_time,\n                } = rowData;\n                return (\n                  <Tr key={uuid}>\n                    <Td>\n                      {name}\n                      <br />\n                      <UrlWithExternalIcon href={url} />\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td>\n                      <PackageCount rowData={rowData} />\n                    </Td>\n                    <Td>{lastIntrospectionDisplay(last_introspection_time)}</Td>\n                    <Td>\n                      <StatusIcon rowData={rowData} retryHandler={introspectRepoForUuid} />\n                    </Td>\n                    <Td isActionCell>\n                      <ConditionalTooltip\n                        content={\n                          rowData?.status == 'Pending'\n                            ? 'Introspection is in progress'\n                            : 'You do not have the required permissions to perform this action.'\n                        }\n                        show={!rbac?.write || rowData?.status === 'Pending'}\n                        setDisabled\n                      >\n                        <ActionsColumn items={rowActions(rowData)} />\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero || isLoading}>\n        <EmptyTableState notFiltered={notFiltered} clearFilters={clearFilters} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default ContentListTable;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {\n  OutlinedQuestionCircleIcon,\n  PlusCircleIcon,\n  MinusCircleIcon,\n} from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport { global_Color_200, global_link_Color } from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  isValidURL,\n  mapFormikToAPIValues,\n  mapValidationData,\n  makeValidationSchema,\n  FormikValues,\n  maxUploadSize,\n  failedFileUpload,\n} from './helpers';\nimport { useNotification } from '../../../../services/Notifications/Notifications';\nimport ContentValidity from './components/ContentValidity';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useAddContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../../middleware/AppContext';\nimport { isEmpty, isEqual } from 'lodash';\nimport useDeepCompareEffect from '../../../../Hooks/useDeepCompareEffect';\nimport useDebounce from '../../../../Hooks/useDebounce';\n\ninterface Props {\n  isDisabled?: boolean;\n}\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '8px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '8px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  addRepositoryButton: {\n    marginBottom: '24px',\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  removeButton: {\n    display: 'flex!important',\n    justifyContent: 'flex-end',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n  gpgKeyInput: {\n    '& .pf-c-form-control': {\n      backgroundPositionX: 'calc(100% - 1.3em)',\n    },\n  },\n});\n\nconst defaultValues: FormikValues = {\n  name: '',\n  url: '',\n  gpgKey: '',\n  arch: 'any',\n  versions: ['any'],\n  gpgLoading: false,\n  expanded: true,\n  metadataVerification: false,\n};\n\nconst defaultTouchedState = { name: false, url: false, gpgKey: false };\n\nconst AddContent = ({ isDisabled: isButtonDisabled }: Props) => {\n  const { hidePackageVerification, rbac } = useAppContext();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(['']);\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: [defaultValues],\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: [defaultTouchedState],\n    onSubmit: () => undefined,\n  });\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n\n  const { fetchGpgKey, isLoading: isFetchingGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const handleModalToggle = () => setIsModalOpen(!isModalOpen);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    formik.setTouched([defaultTouchedState]);\n    formik.resetForm();\n    setGpgKeyList(['']);\n  };\n\n  const { mutateAsync: addContent, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    mapFormikToAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n    setTouchedOnLastItemIfUntouchedAndCollapsed();\n  };\n\n  const updateVariable = (index: number, newValue, callback?: () => void) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData).then(callback);\n  };\n\n  const addRepository = () => {\n    formik.setTouched([...formik.touched, defaultTouchedState]);\n    formik.setValues([\n      ...formik.values.map((vals) => ({ ...vals, expanded: false })),\n      defaultValues,\n    ]);\n    setChangeVerified(false);\n  };\n\n  const removeRepository = (index: number) => {\n    const newValues = formik.values;\n    newValues.splice(index, 1);\n\n    const newTouched = formik.touched;\n    newTouched.splice(index, 1);\n\n    const newErrors = formik.errors;\n    newErrors.splice(index, 1);\n\n    formik.setTouched(newTouched);\n    formik.setErrors(newErrors);\n    formik.setValues(newValues);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikValues,\n  ): 'default' | 'success' | 'error' => {\n    const value = !!formik.values[index]?.[field];\n    const errors = !!formik.errors[index]?.[field];\n    const touched = formik.touched[index]?.[field];\n    switch (true) {\n      case errors && touched:\n        return 'error';\n      case field === 'gpgKey':\n        return 'default';\n      case value && touched:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  // The below sets the item as touched if the user closes the expansion without touching any fields\n  // This is to ensure that the user understands that the item needs attention (and is in error)\n  const setTouchedOnLastItemIfUntouchedAndCollapsed = () => {\n    const lastItem = formik.touched?.length - 1 || 0;\n    const { name, url } = formik.touched[lastItem] || {};\n    if (!name && !url) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[lastItem] = { ...updatedTouched[lastItem], name: true, url: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  let debouncedValues = useDebounce(formik.values) || []; // Initial value of []\n\n  const {\n    mutateAsync: validateContentList,\n    data: validationList,\n    isLoading: isValidating,\n  } = useValidateContentList();\n\n  useDeepCompareEffect(() => {\n    // If validate is getting called to often, we could useDeepCompare\n    if (isModalOpen) {\n      if (debouncedValues.length !== formik.values.length) debouncedValues = formik.values;\n      const newTouchedValues = [...formik.touched];\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification }, index) => {\n          if (!newTouchedValues[index]?.name && name) {\n            newTouchedValues[index] = { ...newTouchedValues[index], name: true };\n          }\n          if (!newTouchedValues[index]?.url && url) {\n            newTouchedValues[index] = { ...newTouchedValues[index], url: true };\n          }\n          if (!newTouchedValues[index]?.gpgKey && gpgKey) {\n            newTouchedValues[index] = { ...newTouchedValues[index], gpgKey: true };\n          }\n          return {\n            name,\n            url,\n            gpg_key: gpgKey,\n            metadata_verification: metadataVerification,\n          };\n        }),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n        setChangeVerified(true);\n        formik.setTouched(newTouchedValues);\n      });\n    }\n  }, [debouncedValues, debouncedValues.length, isModalOpen]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n      setTouchedOnLastItemIfUntouchedAndCollapsed();\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  const { notify } = useNotification();\n\n  const actionTakingPlace = isFetchingGpgKey || isAdding || isValidating || !changeVerified;\n\n  return (\n    <>\n      <ConditionalTooltip\n        content='You do not have the required permissions to perform this action.'\n        show={!rbac?.write}\n        setDisabled\n      >\n        <Button\n          id='createContentSourceButton'\n          ouiaId='create_content_source'\n          variant='primary'\n          isDisabled={isButtonDisabled}\n          onClick={handleModalToggle}\n        >\n          Add repositories\n        </Button>\n      </ConditionalTooltip>\n      {isModalOpen ? (\n        <Modal\n          position='top'\n          variant={ModalVariant.medium}\n          title='Add custom repositories'\n          ouiaId='add_custom_repository'\n          ouiaSafe={!actionTakingPlace}\n          help={\n            <Popover\n              headerContent={<div>Add a custom repository</div>}\n              bodyContent={<div>Use this form to enter the values for a new repository.</div>}\n            >\n              <Button variant='plain' aria-label='Help'>\n                <OutlinedQuestionCircleIcon />\n              </Button>\n            </Popover>\n          }\n          description={\n            <p className={classes.description}>\n              Add by completing the form. Default values may be provided automatically.\n            </p>\n          }\n          isOpen\n          onClose={closeModal}\n          footer={\n            <Stack>\n              <StackItem>\n                <Button\n                  isDisabled={!formik.isValid || formik.values.length > 19}\n                  className={classes.addRepositoryButton}\n                  variant='link'\n                  onClick={addRepository}\n                  icon={<PlusCircleIcon />}\n                  ouiaId='add_row'\n                >\n                  Add another repository\n                </Button>\n              </StackItem>\n              <StackItem>\n                <Button\n                  className={classes.saveButton}\n                  key='confirm'\n                  ouiaId='modal_save'\n                  variant='primary'\n                  isLoading={actionTakingPlace}\n                  isDisabled={\n                    !changeVerified ||\n                    !formik.isValid ||\n                    actionTakingPlace ||\n                    formik.values?.length !== debouncedValues?.length\n                  }\n                  onClick={() => addContent().then(closeModal)}\n                >\n                  Save\n                </Button>\n                <Button key='cancel' variant='link' onClick={closeModal} ouiaId='modal_cancel'>\n                  Cancel\n                </Button>\n              </StackItem>\n            </Stack>\n          }\n        >\n          <TableComposable aria-label='Table for repo add modal' ouiaId='add_modal_table'>\n            <Hide hide={createDataLengthOf1}>\n              <Tbody isExpanded={allExpanded}>\n                <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n                  <Td\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: 0,\n                      isExpanded: allExpanded,\n                    }}\n                  />\n                  <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n                </Tr>\n              </Tbody>\n            </Hide>\n            {formik.values.map(\n              (\n                { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n                index,\n              ) => (\n                <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                  <Hide hide={createDataLengthOf1}>\n                    <Tr className={classes.colHeader}>\n                      <Td\n                        onClick={() => onToggle(index)}\n                        className={classes.toggleAction}\n                        isActionCell\n                        expand={{\n                          rowIndex: index,\n                          isExpanded: expanded,\n                        }}\n                      />\n                      <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                        {name || 'New content'}\n                      </Td>\n                      <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                        <ContentValidity\n                          touched={formik.touched[index]}\n                          errors={formik.errors[index]}\n                        />\n                      </Td>\n                      <Td dataLabel='removeButton' className={classes.removeButton}>\n                        <Hide hide={formik.values.length === 1}>\n                          <Button\n                            onClick={() => removeRepository(index)}\n                            variant='link'\n                            icon={<MinusCircleIcon />}\n                          >\n                            Remove\n                          </Button>\n                        </Hide>\n                      </Td>\n                    </Tr>\n                  </Hide>\n                  <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                    <Td\n                      colSpan={4}\n                      className={\n                        createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                      }\n                    >\n                      <Form>\n                        <FormGroup\n                          label='Name'\n                          isRequired\n                          fieldId='namegroup'\n                          validated={getFieldValidation(index, 'name')}\n                          helperTextInvalid={formik.errors[index]?.name}\n                        >\n                          <TextInput\n                            isRequired\n                            id='name'\n                            name='name'\n                            label='Name'\n                            ouiaId='input_name'\n                            type='text'\n                            validated={getFieldValidation(index, 'name')}\n                            onChange={(value) => {\n                              updateVariable(index, { name: value });\n                            }}\n                            value={name || ''}\n                            placeholder='Enter name'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='URL'\n                          isRequired\n                          fieldId='url'\n                          validated={getFieldValidation(index, 'url')}\n                          helperTextInvalid={formik.errors[index]?.url}\n                        >\n                          <TextInput\n                            isRequired\n                            type='url'\n                            validated={getFieldValidation(index, 'url')}\n                            onBlur={() => updateArchAndVersion(index)}\n                            onChange={(value) => {\n                              if (url !== value) {\n                                updateVariable(index, { url: value });\n                              }\n                            }}\n                            value={url || ''}\n                            placeholder='https://'\n                            id='url'\n                            name='url'\n                            label='Url'\n                            ouiaId='input_url'\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict architecture'\n                          aria-label='restrict_to_architecture'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package architecture'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='arch'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_architecture'\n                            menuAppendTo={document.body}\n                            toggleId={'archSelection' + index}\n                            options={Object.keys(distributionArches)}\n                            variant={SelectVariant.single}\n                            selectedProp={Object.keys(distributionArches).find(\n                              (key: string) => arch === distributionArches[key],\n                            )}\n                            setSelected={(value) =>\n                              updateVariable(index, { arch: distributionArches[value] })\n                            }\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='Restrict OS version'\n                          aria-label='restrict_to_os_version'\n                          labelIcon={\n                            <Tooltip content='Optional: Select value to restrict package OS version'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='version'\n                        >\n                          <DropdownSelect\n                            ouiaId='restrict_to_os_version'\n                            menuAppendTo={document.body}\n                            toggleId={'versionSelection' + index}\n                            options={Object.keys(distributionVersions)}\n                            variant={SelectVariant.typeaheadMulti}\n                            selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                              versions?.includes(distributionVersions[key]),\n                            )}\n                            placeholderText={versions?.length ? '' : 'Any version'}\n                            setSelected={(value) => setVersionSelected(value, index)}\n                          />\n                        </FormGroup>\n                        <FormGroup\n                          label='GPG key'\n                          labelIcon={\n                            <Tooltip content='Optional: Add GPG Key file or URL'>\n                              <OutlinedQuestionCircleIcon\n                                className='pf-u-ml-xs'\n                                color={global_Color_200.value}\n                              />\n                            </Tooltip>\n                          }\n                          fieldId='gpgKey'\n                          validated={getFieldValidation(index, 'gpgKey')}\n                          helperTextInvalid={formik.errors[index]?.gpgKey}\n                        >\n                          <FileUpload\n                            className={classes.gpgKeyInput}\n                            validated={getFieldValidation(index, 'gpgKey')}\n                            id='gpgKey-uploader'\n                            aria-label='gpgkey_file_to_upload'\n                            type='text'\n                            filenamePlaceholder='Drag a file here or upload one'\n                            textAreaPlaceholder='Paste GPG key or URL here'\n                            value={gpgKeyList[index]}\n                            isLoading={gpgLoading}\n                            spellCheck={false}\n                            onDataChange={(value) => updateGpgKey(index, value)}\n                            onTextChange={(value) => updateGpgKey(index, value)}\n                            onClearClick={() => updateGpgKey(index, '')}\n                            dropzoneProps={{\n                              maxSize: maxUploadSize,\n                              onDropRejected: (files) => failedFileUpload(files, notify),\n                            }}\n                            allowEditingUploadedText\n                            browseButtonText='Upload'\n                          />\n                        </FormGroup>\n                        <Hide hide={hidePackageVerification || !gpgKey}>\n                          <FormGroup\n                            fieldId='metadataVerification'\n                            label='Use GPG key for'\n                            isInline\n                          >\n                            <Radio\n                              isDisabled={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              id='package-verification-only'\n                              name='package-verification-only'\n                              label='Package verification only'\n                              isChecked={!metadataVerification}\n                              onChange={() =>\n                                updateVariable(index, { metadataVerification: false })\n                              }\n                            />\n                            <ConditionalTooltip\n                              show={\n                                validationList?.[index]?.url?.metadata_signature_present !== true\n                              }\n                              content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                            >\n                              <Radio\n                                isDisabled={\n                                  validationList?.[index]?.url?.metadata_signature_present !== true\n                                }\n                                id='package-and-repository-verification'\n                                name='package-and-repository-verification'\n                                label='Package and metadata verification'\n                                isChecked={metadataVerification}\n                                onChange={() =>\n                                  updateVariable(index, { metadataVerification: true })\n                                }\n                              />\n                            </ConditionalTooltip>\n                          </FormGroup>\n                        </Hide>\n                      </Form>\n                    </Td>\n                  </Tr>\n                </Tbody>\n              ),\n            )}\n          </TableComposable>\n        </Modal>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default AddContent;\n","import { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { global_success_color_100, global_danger_color_100 } from '@patternfly/react-tokens';\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  touched?: FormikTouched<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  errors?: FormikErrors<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  loading?: boolean;\n}\n\nconst ContentValidity = ({ touched, errors, loading }: Props) => {\n  const classes = useStyles();\n  const required = ['name', 'url'];\n  const allTouched = required.every((val) => touched?.[val]);\n  const noErrors = Object.values(errors || {}).every((val) => !val);\n  const hasTouchedError = Object.keys(touched || {})\n    .filter((key) => !!touched?.[key])\n    .some((key) => errors?.[key]);\n\n  switch (true) {\n    case loading:\n      return <Spinner size='md' />;\n    case allTouched && noErrors:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.green}>Valid</span>\n          </FlexItem>\n        </Flex>\n      );\n    case hasTouchedError:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.red}>Invalid</span>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ContentValidity;\n","import { isEmpty } from 'lodash';\nimport * as Yup from 'yup';\nimport { FormikErrors } from 'formik';\nimport { ValidationResponse } from '../../../../services/Content/ContentApi';\nimport { NotificationPayload } from '../../../../services/Notifications/Notifications';\nimport ERROR_CODE from './httpErrorCodes.json';\nimport { AlertVariant } from '@patternfly/react-core';\n\nexport interface FormikValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  metadataVerification: boolean;\n  expanded: boolean;\n}\n\nexport const REGEX_URL =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nexport const isValidURL = (val: string) => {\n  if (!val) return false;\n  const regex = new RegExp(REGEX_URL);\n  return val.match(regex);\n};\n\nexport const mapFormikToAPIValues = (formikValues: FormikValues[]) =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification }) => ({\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nconst mapNoMetaDataError = (validationData: ValidationResponse) =>\n  validationData.map(({ url, ...rest }) => ({\n    ...rest,\n    url: {\n      ...url,\n      error:\n        !url?.error && !url?.metadata_present\n          ? `Unable to retrieve YUM Metadata, Recieved HTTP ${url?.http_code}: ${\n              url ? ERROR_CODE[url.http_code] : ''\n            }`\n          : url?.error,\n    },\n  }));\n\nexport const mapValidationData = (\n  validationData: ValidationResponse,\n  formikErrors: FormikErrors<FormikValues | undefined>[],\n) => {\n  const updatedValidationData = mapNoMetaDataError(validationData);\n  const errors = updatedValidationData.map(({ name, url, gpg_key: gpgKey }, index: number) => ({\n    // First apply the errors found in the ValidationAPI\n    ...(name?.error ? { name: name?.error } : {}),\n    ...(url?.error ? { url: url?.error } : {}),\n    ...(gpgKey?.error ? { gpgKey: gpgKey?.error } : {}),\n    // Overwrite any errors with errors found within the UI itself\n    ...formikErrors[index],\n  }));\n\n  if (errors.every((err) => isEmpty(err))) {\n    return [];\n  }\n\n  return errors;\n};\n\nexport const makeValidationSchema = () => {\n  // This adds the uniqueProperty function to the below schema validation\n  Yup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n      if (\n        this.parent.filter((v) => v !== value).some((v) => v[propertyName] === value[propertyName])\n      ) {\n        throw this.createError({\n          path: `${this.path}.${propertyName}`,\n        });\n      }\n\n      return true;\n    });\n  });\n\n  return Yup.array(\n    Yup.object()\n      .shape({\n        name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n        url: Yup.string().url('Invalid URL').required('Required'),\n      })\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore-next-line\n      .uniqueProperty('name', 'Names must be unique')\n      .uniqueProperty('url', 'Url\\'s must be unique'),\n  );\n};\n\nexport const maxUploadSize = 32000;\nexport const failedFileUpload = (files: File[], notify: (arg: NotificationPayload) => void) => {\n  let description = 'Check the file and try again.';\n  if (files.length != 1) {\n    description = 'Only a single file upload is supported.';\n  } else if (files[0].size > maxUploadSize) {\n    description = 'The file is larger than ' + maxUploadSize + ' bytes.';\n  }\n  notify({\n    variant: AlertVariant.danger,\n    title: 'There was an problem uploading the file.',\n    description,\n  });\n};\n","import { ReactElement, useEffect, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  SelectVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100, global_secondary_color_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport { FilterData, RepositoryParamsResponse } from '../../../services/Content/ContentApi';\nimport { useQueryClient } from 'react-query';\nimport { REPOSITORY_PARAMS_KEY } from '../../../services/Content/ContentQueries';\nimport useDebounce from '../../../Hooks/useDebounce';\nimport AddContent from './AddContent/AddContent';\nimport { createUseStyles } from 'react-jss';\nimport { isEmpty } from 'lodash';\nimport { useAppContext } from '../../../middleware/AppContext';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: FilterData) => void;\n  filterData: FilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\nconst statusValues = ['Invalid', 'Pending', 'Unavailable', 'Valid'];\nexport type Filters = 'Name/URL' | 'Version' | 'Architecture' | 'Status';\n\nconst ContentListFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const { rbac } = useAppContext();\n  const queryClient = useQueryClient();\n  const filters = ['Name/URL', 'Version', 'Architecture', 'Status'];\n  const [filterType, setFilterType] = useState<Filters>('Name/URL');\n  const [versionNamesLabels, setVersionNamesLabels] = useState({});\n  const [archNamesLabels, setArchNamesLabels] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedVersions, setSelectedVersions] = useState<string[]>([]);\n  const [selectedArches, setSelectedArches] = useState<string[]>([]);\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n\n  const { distribution_arches = [], distribution_versions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setSelectedVersions([]);\n    setSelectedArches([]);\n    setSelectedStatuses([]);\n    setFilterData({ searchQuery: '', versions: [], arches: [], statuses: [] });\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.arches.length === 0 &&\n      filterData.versions.length === 0 &&\n      filterData.statuses.length === 0 &&\n      filterData.searchQuery === '' &&\n      (searchQuery !== '' ||\n        selectedArches.length !== 0 ||\n        selectedVersions.length !== 0 ||\n        selectedStatuses.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    searchQuery: debouncedSearchQuery,\n    selectedVersions: debouncedSelectedVersions,\n    selectedArches: debouncedSelectedArches,\n    selectedStatuses: debouncedSelectedStatuses,\n  } = useDebounce({\n    searchQuery,\n    selectedVersions,\n    selectedArches,\n    selectedStatuses,\n  });\n\n  const getLabels = (type: string, names: Array<string>) => {\n    const namesLabels = type === 'arch' ? distribution_arches : distribution_versions;\n\n    const labels: Array<string> = [];\n    names.forEach((name) => {\n      const found = namesLabels.find((v) => v.name === name);\n      if (found) {\n        labels.push(found.label);\n      }\n    });\n    return labels;\n  };\n\n  useEffect(() => {\n    setFilterData({\n      searchQuery: debouncedSearchQuery,\n      versions: getLabels('version', debouncedSelectedVersions),\n      arches: getLabels('arch', debouncedSelectedArches),\n      statuses: debouncedSelectedStatuses,\n    });\n  }, [\n    debouncedSearchQuery,\n    debouncedSelectedVersions,\n    debouncedSelectedArches,\n    debouncedSelectedStatuses,\n  ]);\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    if (\n      isEmpty(versionNamesLabels) &&\n      isEmpty(archNamesLabels) &&\n      distribution_arches.length !== 0 &&\n      distribution_versions.length !== 0\n    ) {\n      const arches = {};\n      const versions = {};\n      distribution_arches.forEach((arch) => (arches[arch.name] = arch.label));\n      distribution_versions.forEach((version) => (versions[version.name] = version.label));\n      setVersionNamesLabels(versions);\n      setArchNamesLabels(arches);\n    }\n  }, [distribution_arches, distribution_versions]);\n\n  const getSelectionByType = (): ReactElement => {\n    switch (filterType) {\n      case 'Name/URL':\n        return (\n          <Flex>\n            <TextInput\n              isDisabled={isLoading}\n              id='search'\n              ouiaId='filter_search'\n              placeholder='Filter by name/url'\n              value={searchQuery}\n              onChange={(value) => setSearchQuery(value)}\n              className={classes.searchInput}\n            />\n            <SearchIcon size='sm' className={classes.searchIcon} />\n          </Flex>\n        );\n      case 'Version':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter version'\n            toggleId='versionSelect'\n            ouiaId='filter_version'\n            isDisabled={isLoading}\n            options={Object.keys(versionNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedVersions}\n            setSelected={setSelectedVersions}\n            placeholderText='Filter by version'\n          />\n        );\n      case 'Architecture':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter architecture'\n            toggleId='archSelect'\n            ouiaId='filter_arch'\n            isDisabled={isLoading}\n            options={Object.keys(archNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedArches}\n            setSelected={setSelectedArches}\n            placeholderText='Filter by architecture'\n          />\n        );\n      case 'Status':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter status'\n            toggleId='statusSelect'\n            ouiaId='filter_status'\n            isDisabled={isLoading}\n            options={statusValues}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedStatuses}\n            setSelected={setSelectedStatuses}\n            placeholderText='Filter by status'\n          />\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <FlexItem>\n            <DropdownSelect\n              toggleId='filterSelectionDropdown'\n              ouiaId='filter_type'\n              isDisabled={isLoading}\n              options={filters}\n              variant={SelectVariant.single}\n              selectedProp={filterType}\n              setSelected={setFilterType}\n              placeholderText='filter'\n              toggleIcon={<FilterIcon />}\n            />\n          </FlexItem>\n          <FlexItem>{getSelectionByType()}</FlexItem>\n        </InputGroup>\n      </FlexItem>\n      <FlexItem>\n        <ConditionalTooltip\n          content='You do not have the required permissions to perform this action.'\n          show={!rbac?.write}\n          setDisabled\n        >\n          <AddContent isDisabled={isLoading} />\n        </ConditionalTooltip>\n      </FlexItem>\n      <Hide\n        hide={\n          !(\n            selectedVersions.length ||\n            selectedArches.length ||\n            selectedStatuses.length ||\n            searchQuery != ''\n          )\n        }\n      >\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Version'>\n            {selectedVersions.map((version) => (\n              <Chip\n                key={version}\n                onClick={() => deleteItem(version, selectedVersions, setSelectedVersions)}\n              >\n                {version}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Architecture'>\n            {selectedArches.map((arch) => (\n              <Chip key={arch} onClick={() => deleteItem(arch, selectedArches, setSelectedArches)}>\n                {arch}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Status'>\n            {selectedStatuses.map((status) => (\n              <Chip\n                key={status}\n                onClick={() => deleteItem(status, selectedStatuses, setSelectedStatuses)}\n              >\n                {status}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {searchQuery !== '' && (\n            <ChipGroup categoryName='Name/URL'>\n              <Chip key='search_chip' onClick={() => setSearchQuery('')}>\n                {searchQuery}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedSearchQuery !== '' && searchQuery !== '') ||\n            !!selectedVersions?.length ||\n            !!selectedArches?.length ||\n            !!selectedStatuses?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default ContentListFilters;\n","import {\n  Button,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  SelectVariant,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { CheckCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { TableComposable, Tbody, Td, Tr } from '@patternfly/react-table';\nimport {\n  global_Color_200,\n  global_success_color_100,\n  global_link_Color,\n} from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useEditContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport {\n  failedFileUpload,\n  isValidURL,\n  makeValidationSchema,\n  mapValidationData,\n  maxUploadSize,\n} from '../AddContent/helpers';\nimport ContentValidity from '../AddContent/components/ContentValidity';\nimport {\n  EditContentProps,\n  FormikEditValues,\n  mapFormikToEditAPIValues,\n  mapToDefaultFormikValues,\n} from './helpers';\nimport { isEmpty, isEqual } from 'lodash';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../../middleware/AppContext';\nimport { useNotification } from '../../../../services/Notifications/Notifications';\nimport useDeepCompareEffect from '../../../../Hooks/useDeepCompareEffect';\n\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '12px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '12px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n  gpgKeyInput: {\n    '& .pf-c-form-control': {\n      backgroundPositionX: 'calc(100% - 1.3em)',\n    },\n  },\n});\n\nconst EditContentModal = ({ values, open, setClosed }: EditContentProps) => {\n  if (!open) return <></>;\n  const { hidePackageVerification } = useAppContext();\n  const initialValues = mapToDefaultFormikValues(values);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(\n    initialValues.map(({ gpgKey }) => gpgKey),\n  );\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: values.map(() => ({ name: true, url: true })),\n    onSubmit: () => undefined,\n  });\n\n  const valuesHaveChanged = useMemo(\n    () => !isEqual(initialValues, formik.values),\n    [initialValues, formik.values],\n  );\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n  const { fetchGpgKey, isLoading: isFetchingGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(!hidePackageVerification && values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const closeModal = () => {\n    setClosed();\n    formik.resetForm();\n    setGpgKeyList(['']);\n  };\n\n  const { mutateAsync: editContent, isLoading: isEditing } = useEditContentQuery(\n    queryClient,\n    mapFormikToEditAPIValues(formik.values),\n  );\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikEditValues,\n  ): 'default' | 'success' | 'error' => {\n    const hasNotChanged = isEqual(initialValues[index]?.[field], formik.values[index]?.[field]);\n    const errors = !!formik.errors[index]?.[field];\n    switch (true) {\n      case errors:\n        return 'error';\n      case hasNotChanged:\n        return 'default';\n      case !hasNotChanged:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const debouncedValues = useDebounce(formik.values);\n\n  const {\n    mutateAsync: validateContentList,\n    data: validationList,\n    isLoading: isValidating,\n  } = useValidateContentList();\n\n  useDeepCompareEffect(() => {\n    if (open)\n      validateContentList(\n        debouncedValues.map(({ name, url, gpgKey, metadataVerification, uuid }) => ({\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n          uuid,\n        })),\n      ).then(async (validationData) => {\n        const formikErrors = await formik.validateForm(debouncedValues);\n        const mappedErrorData = mapValidationData(validationData, formikErrors);\n        formik.setErrors(mappedErrorData);\n        setChangeVerified(true);\n      });\n  }, [debouncedValues, values, open]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateArchAndVersion(index);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  const { notify } = useNotification();\n\n  const actionTakingPlace = isFetchingGpgKey || isEditing || isValidating || !changeVerified;\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Edit custom repository'\n      ouiaId='edit_custom_repository'\n      ouiaSafe={!actionTakingPlace}\n      help={\n        <Popover\n          headerContent={<div>Edit custom repository</div>}\n          bodyContent={<div>Use this form to edit the values of an existing repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Edit by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen={open}\n      onClose={closeModal}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='edit_modal_save'\n              variant='primary'\n              isLoading={actionTakingPlace}\n              isDisabled={\n                !changeVerified ||\n                !formik.isValid ||\n                actionTakingPlace ||\n                !valuesHaveChanged ||\n                !isEqual(formik.values, debouncedValues)\n              }\n              onClick={() => {\n                editContent().then(closeModal);\n              }}\n            >\n              {valuesHaveChanged ? 'Save changes' : 'No changes'}\n            </Button>\n            <Button key='cancel' variant='link' onClick={closeModal} ouiaId='edit_modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <TableComposable aria-label='Table for edit modal' ouiaId='edit_modal_table'>\n        <Hide hide={createDataLengthOf1}>\n          <Tbody isExpanded={allExpanded}>\n            <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n              <Td\n                className={classes.toggleAction}\n                isActionCell\n                expand={{\n                  rowIndex: 0,\n                  isExpanded: allExpanded,\n                }}\n              />\n              <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n            </Tr>\n          </Tbody>\n        </Hide>\n        {formik.values.map(\n          (\n            { expanded, name, url, arch, gpgKey, versions, gpgLoading, metadataVerification },\n            index,\n          ) => (\n            <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Hide hide={createDataLengthOf1}>\n                <Tr className={classes.colHeader}>\n                  <Td\n                    onClick={() => onToggle(index)}\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: index,\n                      isExpanded: expanded,\n                    }}\n                  />\n                  <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                    {name || 'New content'}\n                  </Td>\n                  <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                    <ContentValidity\n                      touched={formik.touched[index]}\n                      errors={formik.errors[index]}\n                    />\n                  </Td>\n                </Tr>\n              </Hide>\n              <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                <Td\n                  colSpan={4}\n                  className={\n                    createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                  }\n                >\n                  <Form>\n                    <FormGroup\n                      label='Name'\n                      isRequired\n                      fieldId='namegroup'\n                      validated={getFieldValidation(index, 'name')}\n                      helperTextInvalid={formik.errors[index]?.name}\n                    >\n                      <TextInput\n                        isRequired\n                        id='name'\n                        name='name'\n                        label='Name'\n                        ouiaId='input_name'\n                        type='text'\n                        validated={getFieldValidation(index, 'name')}\n                        onChange={(value) => {\n                          updateVariable(index, { name: value });\n                        }}\n                        value={name || ''}\n                        placeholder='Enter name'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='URL'\n                      isRequired\n                      fieldId='url'\n                      validated={getFieldValidation(index, 'url')}\n                      helperTextInvalid={formik.errors[index]?.url}\n                    >\n                      <TextInput\n                        isRequired\n                        type='url'\n                        validated={getFieldValidation(index, 'url')}\n                        onBlur={() => urlOnBlur(index)}\n                        onChange={(value) => {\n                          if (url !== value) {\n                            updateVariable(index, { url: value });\n                          }\n                        }}\n                        value={url || ''}\n                        placeholder='https://'\n                        id='url'\n                        name='url'\n                        label='Url'\n                        ouiaId='input_url'\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict architecture'\n                      aria-label='restrict_to_architecture'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package architecture'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='arch'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_architecture'\n                        validated={getFieldValidation(index, 'arch')}\n                        menuAppendTo={document.body}\n                        toggleId={'archSelection' + index}\n                        options={Object.keys(distributionArches)}\n                        variant={SelectVariant.single}\n                        selectedProp={Object.keys(distributionArches).find(\n                          (key: string) => arch === distributionArches[key],\n                        )}\n                        setSelected={(value) =>\n                          updateVariable(index, { arch: distributionArches[value] })\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict OS version'\n                      aria-label='restrict_to_os_version'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package OS version'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='version'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_os_version'\n                        validated={getFieldValidation(index, 'versions')}\n                        menuAppendTo={document.body}\n                        toggleId={'versionSelection' + index}\n                        options={Object.keys(distributionVersions)}\n                        variant={SelectVariant.typeaheadMulti}\n                        selectedProp={Object.keys(distributionVersions).filter((key: string) =>\n                          versions?.includes(distributionVersions[key]),\n                        )}\n                        placeholderText={versions?.length ? '' : 'Any version'}\n                        setSelected={(value) => setVersionSelected(value, index)}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='GPG key'\n                      labelIcon={\n                        <Tooltip content='Optional: Add GPG Key file or URL'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='gpgKey'\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      helperTextInvalid={formik.errors[index]?.gpgKey}\n                    >\n                      <FileUpload\n                        className={classes.gpgKeyInput}\n                        validated={getFieldValidation(index, 'gpgKey')}\n                        id='gpgKey-uploader'\n                        aria-label='gpgkey_file_to_upload'\n                        type='text'\n                        filenamePlaceholder='Drag a file here or upload one'\n                        textAreaPlaceholder='Paste GPG key or URL here'\n                        value={gpgKeyList[index]}\n                        isLoading={gpgLoading}\n                        spellCheck={false}\n                        onDataChange={(value) => updateGpgKey(index, value)}\n                        onTextChange={(value) => updateGpgKey(index, value)}\n                        onClearClick={() => updateGpgKey(index, '')}\n                        dropzoneProps={{\n                          maxSize: maxUploadSize,\n                          onDropRejected: (files) => failedFileUpload(files, notify),\n                        }}\n                        allowEditingUploadedText\n                        browseButtonText='Upload'\n                      />\n                    </FormGroup>\n                    <Hide hide={hidePackageVerification || !gpgKey}>\n                      <FormGroup fieldId='metadataVerification' label='Use GPG key for' isInline>\n                        <Radio\n                          isDisabled={\n                            validationList?.[index]?.url?.metadata_signature_present !== true\n                          }\n                          id='package verification only'\n                          name='package-verification-only'\n                          label='Package verification only'\n                          isChecked={!metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: false })}\n                        />\n                        <ConditionalTooltip\n                          show={validationList?.[index]?.url?.metadata_signature_present !== true}\n                          content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                        >\n                          <Radio\n                            isDisabled={\n                              validationList?.[index]?.url?.metadata_signature_present !== true\n                            }\n                            id='Package and metadata verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                        </ConditionalTooltip>\n                        <Hide\n                          hide={getFieldValidation(index, 'metadataVerification') !== 'success'}\n                        >\n                          <CheckCircleIcon noVerticalAlign color={green} />\n                        </Hide>\n                      </FormGroup>\n                    </Hide>\n                  </Form>\n                </Td>\n              </Tr>\n            </Tbody>\n          ),\n        )}\n      </TableComposable>\n    </Modal>\n  );\n};\n\nexport default EditContentModal;\n","import { ContentItem, EditContentRequest } from '../../../../services/Content/ContentApi';\nexport interface EditContentProps {\n  setClosed: () => void;\n  open: boolean;\n  values: ContentItem[];\n}\n\nexport interface FormikEditValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  metadataVerification: boolean;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  expanded: boolean;\n  uuid: string;\n}\n\nexport const mapFormikToEditAPIValues = (formikValues: FormikEditValues[]): EditContentRequest =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification, uuid }) => ({\n    uuid,\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    metadata_verification: metadataVerification,\n  }));\n\nexport const mapToDefaultFormikValues = (values: EditContentProps['values']): FormikEditValues[] =>\n  values.map(\n    (\n      {\n        name,\n        url,\n        distribution_arch: arch,\n        distribution_versions: versions,\n        uuid,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n      },\n      index,\n    ) => ({\n      name,\n      url,\n      arch,\n      versions,\n      gpgKey,\n      gpgLoading: false,\n      metadataVerification,\n      expanded: index + 1 === values.length,\n      uuid,\n    }),\n  );\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon, PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\nimport AddContent from './AddContent/AddContent';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  notFiltered?: boolean;\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ notFiltered, clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={notFiltered ? PlusCircleIcon : SearchIcon} />\n      <Title headingLevel='h2' size='lg' ouiaId='empty_custom_title'>\n        {notFiltered\n          ? 'No custom repositories'\n          : 'No custom repositories match the filter criteria'}\n      </Title>\n      <EmptyStateBody className={classes.emptStateBody}>\n        {notFiltered\n          ? 'To get started, create a custom repository'\n          : 'Clear all filters to show more results'}\n      </EmptyStateBody>\n      {notFiltered ? (\n        <AddContent />\n      ) : (\n        <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n          Clear all filters\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { Button, Text, Tooltip } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { global_disabled_color_100 } from '@patternfly/react-tokens';\nimport { useState } from 'react';\nimport Hide from '../../../components/Hide/Hide';\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport PackageModal from './PackageModal/PackageModal';\n\nconst useStyles = createUseStyles({\n  text: {\n    color: global_disabled_color_100.value,\n    width: 'fit-content',\n  },\n  link: {\n    padding: 0,\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n}\n\nconst PackageCount = ({ rowData }: Props) => {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  if (!rowData.package_count && rowData.status === 'Pending') {\n    return (\n      <Tooltip isContentLeftAligned content='Introspection is in progress'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  if (rowData.status === 'Invalid') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository is invalid.'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Hide hide={!modalOpen}>\n        <PackageModal rowData={rowData} closeModal={() => setModalOpen(false)} />\n      </Hide>\n      <Button\n        ouiaId='package_count_button'\n        variant='link'\n        onClick={() => setModalOpen(true)}\n        className={classes.link}\n      >\n        {rowData.package_count}\n      </Button>\n    </>\n  );\n};\n\nexport default PackageCount;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Modal,\n  ModalVariant,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  TableComposable,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_Color_200,\n} from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../../components/Hide/Hide';\nimport { ContentItem, PackageItem } from '../../../../services/Content/ContentApi';\nimport { useGetPackagesQuery } from '../../../../services/Content/ContentQueries';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport EmptyPackageState from './components/EmptyPackageState';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    paddingBottom: '8px',\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    top: '3px',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  closeModal: () => void;\n}\n\nexport default function PackageModal({\n  rowData: { name, uuid, package_count: packageCount },\n  closeModal,\n}: Props) {\n  const classes = useStyles();\n  const storedPerPage = Number(localStorage.getItem('packagePerPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Name', 'Version', 'Release', 'Arch'];\n\n  const columnSortAttributes = ['name', 'version', 'release', 'arch'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    error,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetPackagesQuery(uuid, packageCount, page, perPage, debouncedSearchQuery, sortString);\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem('packagePerPage', newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n\n  const {\n    data: packageList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const notLoadingZeroCount = !fetchingOrLoading && !count;\n\n  return (\n    <Modal\n      key={uuid}\n      position='top'\n      hasNoBodyWrapper\n      aria-label='RPM package modal'\n      ouiaId='rpm_package_modal'\n      ouiaSafe={fetchingOrLoading}\n      variant={ModalVariant.medium}\n      title='Packages'\n      description={\n        <p className={classes.description}>\n          View list of packages for <b>{name}</b>\n        </p>\n      }\n      isOpen\n      onClose={closeModal}\n      footer={\n        <Button key='close' variant='secondary' onClick={closeModal}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <Flex className={classes.topContainer}>\n            <Flex>\n              <TextInput\n                id='search'\n                ouiaId='name_search'\n                placeholder='Filter by name'\n                value={searchQuery}\n                onChange={(value) => setSearchQuery(value)}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </Flex>\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rowSize={perPage}\n                colSize={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <TableComposable\n              aria-label='Custom repositories table'\n              ouiaId='packages_table'\n              variant='compact'\n            >\n              <Thead>\n                <Tr>\n                  {columnHeaders.map((columnHeader, index) => (\n                    <Th\n                      key={columnHeader + '_column'}\n                      sort={sortParams(index, notLoadingZeroCount)}\n                    >\n                      {columnHeader}\n                    </Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {packageList.map(({ name, version, release, arch }: PackageItem, index: number) => (\n                  <Tr key={name + index}>\n                    <Td>{name}</Td>\n                    <Td>{version}</Td>\n                    <Td>{release}</Td>\n                    <Td>{arch}</Td>\n                  </Tr>\n                ))}\n                <Hide hide={!notLoadingZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </TableComposable>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={notLoadingZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  perPageComponent='button'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { Td, Tr } from '@patternfly/react-table';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    margin: 'auto',\n  },\n});\n\ninterface Props {\n  clearSearch: () => void;\n}\n\nexport default function EmptyPackageState({ clearSearch }: Props) {\n  const classes = useStyles();\n  return (\n    <Tr>\n      <Td colSpan={4}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title headingLevel='h2' size='lg'>\n              No packages match the search criteria\n            </Title>\n            <EmptyStateBody>Clear your current search to show more results</EmptyStateBody>\n            <Button ouiaId='clear_filters' variant='link' onClick={clearSearch}>\n              Clear search\n            </Button>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n}\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Popover,\n  Spinner,\n  Stack,\n  StackItem,\n  Tooltip,\n} from '@patternfly/react-core';\nimport StatusText from './StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n} from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\nimport dayjs from 'dayjs';\nimport relativeTime = require('dayjs/plugin/relativeTime');\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../middleware/AppContext';\ndayjs.extend(relativeTime);\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\n\nconst useStyles = createUseStyles({\n  spinner: {\n    animationDuration: '6s !important',\n    margin: '-3px 0',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  retryHandler?: (string) => Promise<void>;\n}\n\ninterface DescriptionProps {\n  error?: string;\n  count?: number;\n  time?: string;\n}\n\ninterface FooterProps {\n  retryHandler?: (string) => Promise<void>;\n  uuid: string;\n}\n\nconst PopoverDescription = ({ error, count, time }: DescriptionProps) => {\n  const timeText = time === '' || time === undefined ? 'Never' : dayjs(time).fromNow();\n  return (\n    <div>\n      {error}\n      <Flex>\n        <Stack className='pf-u-mt-sm'>\n          <StackItem className='pf-u-font-weight-bold'>Last introspection</StackItem>\n          <StackItem> {timeText} </StackItem>\n        </Stack>\n        <Stack className='pf-u-mt-sm'>\n          <StackItem className='pf-u-font-weight-bold'>Failed attempts</StackItem>\n          <StackItem> {count} </StackItem>\n        </Stack>\n      </Flex>\n    </div>\n  );\n};\n\nconst PopoverFooter = ({ retryHandler, uuid }: FooterProps) => {\n  const { rbac } = useAppContext();\n  return (\n    <Flex>\n      <ConditionalTooltip\n        content='You do not have the required permissions to perform this action.'\n        show={!rbac?.write}\n        setDisabled\n      >\n        <Button variant='link' isInline onClick={() => (retryHandler ? retryHandler(uuid) : null)}>\n          Retry\n        </Button>\n      </ConditionalTooltip>\n    </Flex>\n  );\n};\n\nconst StatusIcon = ({\n  rowData: {\n    uuid,\n    status,\n    failed_introspections_count: failedIntrospectionsCount,\n    last_introspection_time: lastIntrospectionTime,\n    last_introspection_error: error,\n  },\n  retryHandler,\n}: Props) => {\n  const classes = useStyles();\n\n  switch (status) {\n    case 'Valid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Valid</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Invalid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <Popover\n              aria-label='invalid popover'\n              alertSeverityVariant='danger'\n              headerContent='Invalid'\n              headerIcon={<ExclamationCircleIcon />}\n              bodyContent={\n                <PopoverDescription\n                  error={error}\n                  count={failedIntrospectionsCount}\n                  time={lastIntrospectionTime}\n                />\n              }\n              position='left'\n              footerContent={<PopoverFooter retryHandler={retryHandler} uuid={uuid} />}\n            >\n              <Button variant='link' isInline>\n                <StatusText color='red' isLink>\n                  Invalid\n                </StatusText>\n              </Button>\n            </Popover>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Unavailable':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationTriangleIcon color={gold} />\n          </FlexItem>\n          <FlexItem>\n            <Popover\n              aria-label='unavailable popover'\n              alertSeverityVariant='warning'\n              headerContent='Unavailable'\n              headerIcon={<ExclamationTriangleIcon />}\n              bodyContent={\n                <PopoverDescription\n                  error={error}\n                  count={failedIntrospectionsCount}\n                  time={lastIntrospectionTime}\n                />\n              }\n              position='left'\n              footerContent={<PopoverFooter retryHandler={retryHandler} uuid={uuid} />}\n            >\n              <StatusText color='gold' isLink>\n                Unavailable\n              </StatusText>\n            </Popover>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Pending':\n      return (\n        <Tooltip position='top-start' content='Repository is being introspected'>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <Spinner size='md' className={classes.spinner} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='blue'>In progress</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import { createUseStyles } from 'react-jss';\nimport {\n  global_danger_color_200,\n  global_info_color_200,\n  global_success_color_200,\n  global_warning_color_200,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_200.value;\nconst green = global_success_color_200.value;\nconst gold = global_warning_color_200.value;\nconst blue = global_info_color_200.value;\n\ninterface Props {\n  color: 'red' | 'green' | 'gold' | 'blue';\n  isLink?: boolean;\n  children?: React.ReactNode;\n}\n\nconst useStyles = ({ isLink }: Props) =>\n  createUseStyles({\n    fontStyle: {\n      fontWeight: 'bold',\n      fontSize: '14px',\n      ...(isLink\n        ? {\n            textDecoration: 'grey dotted underline',\n            cursor: 'pointer',\n          }\n        : {}),\n    },\n    red: { extend: 'fontStyle', color: red },\n    green: { extend: 'fontStyle', color: green },\n    gold: { extend: 'fontStyle', color: gold },\n    blue: { extend: 'fontStyle', color: blue },\n  });\n\nconst StatusText = (props: Props) => {\n  const classes = useStyles(props)();\n  const { color, children } = props;\n\n  return <span className={classes[color]}>{children}</span>;\n};\n\nexport default StatusText;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  OnPerPageSelect,\n  OnSetPage,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n  TextInput,\n} from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_secondary_color_100,\n  global_disabled_color_100,\n} from '@patternfly/react-tokens';\nimport { useEffect, useState, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  usePopularRepositoriesQuery,\n  useDeletePopularRepositoryMutate,\n  useRepositoryParams,\n  useAddPopularRepositoryQuery,\n} from '../../services/Content/ContentQueries';\nimport { CreateContentRequest, FilterData } from '../../services/Content/ContentApi';\nimport Hide from '../../components/Hide/Hide';\nimport { useQueryClient } from 'react-query';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../Hooks/useDebounce';\nimport EmptyTableState from './components/EmptyTableState';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n  searchInput: {\n    paddingRight: '35px',\n    marginRight: '-23px',\n  },\n  searchIcon: {\n    color: global_secondary_color_100.value,\n    position: 'relative',\n    left: '-5px',\n    pointerEvents: 'none',\n  },\n  addRepositoriesButton: {\n    marginLeft: '16px',\n  },\n  checkboxMinWidth: {\n    minWidth: '45px!important',\n  },\n  disabled: {\n    color: global_disabled_color_100.value,\n  },\n});\n\nconst PopularRepositoriesTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac } = useAppContext();\n  const [checkedRepositories, setCheckedRepositories] = useState<boolean[]>([]);\n  const [selectedData, setSelectedData] = useState<CreateContentRequest>([]);\n  const [selectedUUID, setSelectedUUID] = useState<string>('');\n\n  const storedPerPage = Number(localStorage.getItem('perPage')) || 20;\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('');\n  const debouncedSearchValue = useDebounce(searchValue);\n  const [perPage, setPerPage] = useState(storedPerPage);\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = usePopularRepositoriesQuery(page, perPage, { searchQuery: debouncedSearchValue });\n\n  const areAllReposAdded = useMemo(() => data.data.every(({ uuid }) => !!uuid), [data]);\n\n  const atLeastOneRepoChecked = useMemo(\n    () => checkedRepositories.some((val) => val),\n    [checkedRepositories],\n  );\n\n  const areAllReposSelected = useMemo(\n    () =>\n      !areAllReposAdded && data.data.every(({ uuid }, key) => !!uuid || checkedRepositories[key]),\n    [data, checkedRepositories, areAllReposAdded],\n  );\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const { mutateAsync: addContentQuery, isLoading: isAdding } = useAddPopularRepositoryQuery(\n    queryClient,\n    selectedData,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n  );\n\n  useEffect(() => {\n    if (!isFetching) {\n      setSelectedData([]);\n      setSelectedUUID('');\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [isFetching]);\n\n  useEffect(() => {\n    if (data?.data?.length > 0 && checkedRepositories.length === 0) {\n      setCheckedRepositories(data.data.map(() => false));\n    }\n  }, [data?.data?.length]);\n\n  useEffect(() => {\n    if (selectedData.length != 0) {\n      addContentQuery().then(\n        () => setSelectedData([]),\n        () => setSelectedData([]),\n      );\n    }\n  }, [selectedData]);\n\n  useEffect(() => {\n    if (selectedUUID) {\n      deleteItem(selectedUUID).then(undefined, () => setSelectedUUID(''));\n    }\n  }, [selectedUUID]);\n\n  const onSelectRepo = (index: number, value: boolean) => {\n    const newValue = checkedRepositories;\n    newValue[index] = value;\n    setCheckedRepositories([...newValue]);\n  };\n\n  const selectAllRepos = (_, checked: boolean) =>\n    setCheckedRepositories(data.data.map(() => checked));\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeletePopularRepositoryMutate(\n    queryClient,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace = isDeleting || isFetching || repositoryParamsLoading || isAdding;\n\n  const onSetPage: OnSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect: OnPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem('perPage', newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const addSelected = () => {\n    const request: CreateContentRequest = [];\n    checkedRepositories.forEach((checked, index) => {\n      if (checked && data?.data[index] && !data.data[index].uuid) {\n        const {\n          suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        } = data.data[index];\n\n        request.push({\n          name: suggested_name,\n          url,\n          distribution_versions,\n          distribution_arch,\n          gpg_key,\n          metadata_verification,\n        });\n      }\n    });\n    setSelectedData(request);\n  };\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: popularData = [],\n    meta: { count = 0 },\n  } = data;\n\n  return (\n    <Grid\n      data-ouia-safe={!actionTakingPlace}\n      data-ouia-component-id='popular_repositories_page'\n      className={classes.mainContainer}\n    >\n      <Flex className={classes.topContainer}>\n        <FlexItem>\n          <InputGroup>\n            <FlexItem>\n              <TextInput\n                isDisabled={isLoading}\n                id='search'\n                ouiaId='popular_filter_search'\n                placeholder='Filter by name/url'\n                value={searchValue}\n                onChange={setSearchValue}\n                className={classes.searchInput}\n              />\n              <SearchIcon size='sm' className={classes.searchIcon} />\n            </FlexItem>\n            <FlexItem>\n              <ConditionalTooltip\n                content='You do not have the required permissions to perform this action.'\n                show={!rbac?.write}\n                setDisabled\n              >\n                <Button\n                  onClick={addSelected}\n                  className={classes.addRepositoriesButton}\n                  isDisabled={!atLeastOneRepoChecked}\n                  ouiaId='add_checked_repos'\n                >\n                  Add repositories\n                </Button>\n              </ConditionalTooltip>\n            </FlexItem>\n          </InputGroup>\n        </FlexItem>\n        <FlexItem>\n          <Hide hide={isLoading}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              perPageComponent='button'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer}>\n          <SkeletonTable\n            rowSize={perPage}\n            colSize={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={isLoading}>\n        <>\n          <TableComposable\n            aria-label='Popular repositories table'\n            ouiaId='popular_repos_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                <Hide hide={!rbac?.write}>\n                  <Th\n                    className={classes.checkboxMinWidth}\n                    select={{\n                      onSelect: selectAllRepos,\n                      isSelected: areAllReposSelected,\n                      isHeaderSelectDisabled: areAllReposAdded,\n                    }}\n                  />\n                </Hide>\n                {columnHeaders.map((columnHeader) => (\n                  <Th key={columnHeader + 'column'}>{columnHeader}</Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {popularData.map(\n                (\n                  {\n                    uuid,\n                    existing_name,\n                    suggested_name,\n                    url,\n                    distribution_arch,\n                    distribution_versions,\n                    gpg_key,\n                    metadata_verification,\n                  },\n                  key,\n                ) => (\n                  <Tr key={suggested_name + key}>\n                    <Hide hide={!rbac?.write}>\n                      <Td\n                        select={{\n                          rowIndex: key,\n                          onSelect: (_event, isSelecting) => onSelectRepo(key, isSelecting),\n                          isSelected: uuid ? false : checkedRepositories[key],\n                          disable: !!uuid,\n                        }}\n                      />\n                    </Hide>\n                    <Td>\n                      <>\n                        <Flex direction={{ default: 'row' }}>\n                          <FlexItem> {suggested_name}</FlexItem>\n                          {existing_name && suggested_name !== existing_name && (\n                            <FlexItem className={classes.disabled}>\n                              Current name: {existing_name}\n                            </FlexItem>\n                          )}\n                        </Flex>\n                        <UrlWithExternalIcon href={url} />\n                      </>\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td width={10}>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        {uuid ? (\n                          <Button\n                            isDisabled={uuid === selectedUUID || isAdding}\n                            onClick={() => setSelectedUUID(uuid)}\n                            variant='danger'\n                            ouiaId='remove_popular_repo'\n                          >\n                            Remove\n                          </Button>\n                        ) : (\n                          <Button\n                            variant='secondary'\n                            isDisabled={selectedData[key]?.url === url || isFetching || isDeleting}\n                            onClick={() => {\n                              const newData: CreateContentRequest = [];\n                              newData[key] = {\n                                name: suggested_name,\n                                url,\n                                distribution_versions,\n                                distribution_arch,\n                                gpg_key,\n                                metadata_verification,\n                              };\n                              setSelectedData(newData);\n                            }}\n                            ouiaId='add_popular_repo'\n                          >\n                            Add\n                          </Button>\n                        )}\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                ),\n              )}\n            </Tbody>\n          </TableComposable>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                perPageComponent='button'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={data.data.length !== 0 || isLoading}>\n        <EmptyTableState clearFilters={() => setSearchValue('')} />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default PopularRepositoriesTable;\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Title,\n  EmptyStateIcon,\n  Button,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  clearFilters: () => void;\n}\n\nconst EmptyTableState = ({ clearFilters }: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title headingLevel='h2' size='lg'>\n        No popular repositories match the filter criteria\n      </Title>\n      <EmptyStateBody className={classes.emptStateBody}>\n        Clear all filters to show more results\n      </EmptyStateBody>\n      <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n        Clear search filter\n      </Button>\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { useMemo } from 'react';\nimport { Grid, Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { Routes, Route, Navigate, useLocation, Link } from 'react-router-dom';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\n\nimport { createUseStyles } from 'react-jss';\nimport { ErrorPage } from './components/Error/ErrorPage';\nimport ContentListTable from './Pages/ContentListTable/ContentListTable';\nimport PopularRepositoriesTable from './Pages/PopularRepositoriesTable/PopularRepositoriesTable';\nimport { last } from 'lodash';\nimport Header from './components/Header/Header';\nimport QuickStart from './components/QuickStart/QuickStart';\n\nconst useStyles = createUseStyles({\n  tabs: {\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  tab: {\n    '& button': {\n      padding: 0, // Remove the default button padding\n    },\n  },\n  link: {\n    color: 'inherit', // Receives parent \"Tab\" components color\n    textDecoration: 'none',\n    padding: '8px 16px', // Add it back so that the entire clickable area works\n    '&:focus-visible': {\n      outlineOffset: '-6px',\n    },\n  },\n  containerMargin: {\n    margin: '24px',\n  },\n});\n\nexport const DEFAULT_ROUTE = '';\nexport const POPULAR_REPOSITORIES_ROUTE = 'popular-repositories';\n\nconst tabbedRoutes = [\n  {\n    title: 'Your repositories',\n    route: DEFAULT_ROUTE,\n    Element: ContentListTable,\n  },\n  {\n    title: 'Popular repositories',\n    route: POPULAR_REPOSITORIES_ROUTE,\n    Element: PopularRepositoriesTable,\n  },\n];\n\nexport default function MainRoutes() {\n  const classes = useStyles();\n  const { pathname, key: locationKey } = useLocation();\n\n  const currentRoute = useMemo(() => last(pathname.split('/')), [pathname]);\n  return (\n    <>\n      <Header />\n\n      <Tabs className={classes.tabs} ouiaId='routed-tabs' activeKey={currentRoute}>\n        {tabbedRoutes.map(({ title, route }) => (\n          <Tab\n            className={classes.tab}\n            keyParams={route}\n            key={route}\n            tabIndex={-1} // This prevents the tab from being targetable by accessibility features.\n            eventKey={route || 'content'} // the current route will be \"content\" when there is no route specified (root)\n            aria-label={title}\n            ouiaId={title}\n            title={\n              <Link className={classes.link} accessKey={route} key={route} to={route}>\n                <TabTitleText>{title}</TabTitleText>\n              </Link>\n            }\n          />\n        ))}\n      </Tabs>\n      <QuickStart />\n      <Routes key={locationKey}>\n        {tabbedRoutes.map(({ route, Element }, key) => (\n          <Route\n            key={key.toString()}\n            path={route}\n            element={\n              <ErrorPage>\n                <Grid className={classes.containerMargin}>\n                  <Element />\n                </Grid>\n              </ErrorPage>\n            }\n          />\n        ))}\n        <Route path='*' element={<Navigate to={DEFAULT_ROUTE} replace />} />\n      </Routes>\n    </>\n  );\n}\n","import { Tooltip, TooltipProps } from '@patternfly/react-core';\nimport { cloneElement } from 'react';\n\ninterface Props extends TooltipProps {\n  show: boolean;\n  setDisabled?: boolean;\n}\n\nconst ConditionalTooltip = ({ show, children, setDisabled, ...rest }: Props) =>\n  show ? (\n    <Tooltip {...rest}>\n      <div>\n        {children && cloneElement(children, setDisabled ? { isDisabled: setDisabled } : undefined)}\n      </div>\n    </Tooltip>\n  ) : (\n    <>{children}</>\n  );\n\nexport default ConditionalTooltip;\n","import { Select, SelectOption, SelectProps, SelectVariant } from '@patternfly/react-core';\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n\ninterface DropdownSelectProps extends Partial<SelectProps> {\n  options: Array<string>;\n  variant: SelectVariant.single | SelectVariant.checkbox | SelectVariant.typeaheadMulti;\n  selectedProp: any; // eslint-disable-line\n  setSelected: Dispatch<SetStateAction<any>>; // eslint-disable-line\n  toggleIcon?: React.ReactElement;\n  placeholderText?: string | React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst DropdownSelect = ({\n  options,\n  variant,\n  selectedProp,\n  setSelected,\n  toggleIcon,\n  placeholderText,\n  isDisabled,\n  ...rest\n}: DropdownSelectProps) => {\n  const selected = Array.isArray(selectedProp) ? selectedProp : [selectedProp];\n  const [isOpen, setIsOpen] = useState(false);\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const selectFrom = options.map((option, index) => (\n    <SelectOption key={option + index} id={option} value={option} />\n  ));\n\n  const onSelect = (_event, selection) => {\n    switch (variant) {\n      case SelectVariant.single:\n        setSelected(selection);\n        setIsOpen(false);\n        break;\n      case SelectVariant.typeaheadMulti:\n      case SelectVariant.checkbox:\n        if (Array.isArray(selectedProp)) {\n          if (selected.includes(selection)) {\n            const remaining = selected.filter((item) => item !== selection);\n            setSelected(remaining);\n            break;\n          }\n          setSelected([...selected, selection]);\n          break;\n        }\n        break;\n    }\n  };\n\n  return (\n    <Select\n      isDisabled={isDisabled}\n      variant={variant}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      onToggle={onToggle}\n      placeholderText={placeholderText}\n      isCheckboxSelectionBadgeHidden\n      toggleIcon={toggleIcon}\n      {...rest}\n    >\n      {selectFrom}\n    </Select>\n  );\n};\n\nexport default DropdownSelect;\n","import { ErrorBoundary as _ErrorBoundaryPage } from '@redhat-cloud-services/frontend-components';\n\nconst ErrorBoundaryPage = _ErrorBoundaryPage as unknown as React.FunctionComponent<{\n  children?: React.ReactNode;\n  headerTitle: string;\n  errorTitle?: string;\n  errorDescription?: string;\n}>;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const ErrorPage = ({ children }: Props) => (\n  <ErrorBoundaryPage\n    headerTitle='Content Sources'\n    errorTitle='Unhandled error'\n    errorDescription='There was a problem trying to process your request'\n  >\n    {children}\n  </ErrorBoundaryPage>\n);\n","import { Text } from '@patternfly/react-core';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { PageHeaderProps as _PageHeaderProps } from '@redhat-cloud-services/frontend-components/PageHeader/PageHeader';\nimport { global_Color_100 } from '@patternfly/react-tokens';\n\nimport { FunctionComponent, ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\n\ninterface PageHeaderProps extends _PageHeaderProps {\n  children?: ReactElement | Array<ReactElement>;\n}\n\n// Example of how to extend inaccurately typed imports\nconst PageHeader = _PageHeader as FunctionComponent<PageHeaderProps>;\n\nconst useStyles = createUseStyles({\n  subtext: {\n    color: global_Color_100.value,\n    paddingTop: '8px',\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <PageHeader>\n      <PageHeaderTitle title='Custom Repositories' />\n      <Text className={classes.subtext} ouiaId='custom_repositories_description'>\n        View all custom repositories within your organization.\n      </Text>\n    </PageHeader>\n  );\n}\n","interface Props {\n  hide: boolean;\n  children?: React.ReactNode;\n}\n\nconst Hide = ({ hide, children }: Props) => (hide ? <></> : <>{children}</>);\n\nexport default Hide;\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Grid,\n  Title,\n} from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { FunctionComponent } from 'react';\n\nconst PageHeader = _PageHeader as unknown as FunctionComponent<{\n  children: React.ReactNode;\n}>;\n\nexport const NoPermissionsPage: React.FunctionComponent = () => (\n  <>\n    <PageHeader>\n      <PageHeaderTitle title='Repositories' />\n    </PageHeader>\n    <Grid style={{ margin: '24px' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={LockIcon} />\n        <Title headingLevel='h5' size='lg'>\n          You do not have access to Repositories\n        </Title>\n        <EmptyStateBody>\n          Contact your organization administrator(s) for more information.\n        </EmptyStateBody>\n      </EmptyState>\n    </Grid>\n  </>\n);\n","import { Button, ExpandableSection, Grid, Spinner, Text } from '@patternfly/react-core';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\n\nimport { useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\n\nconst useStyles = createUseStyles({\n  quickstartContainer: {\n    margin: '24px 24px 0',\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  quickstartSpinner: {\n    margin: '0 0 -4px 5px',\n  },\n  buildCustomButton: {\n    marginTop: '20px',\n    padding: 0,\n    fontWeight: 600,\n  },\n});\n\ninterface QuickStarts {\n  version: number;\n  updateQuickStarts: (key: string, quickstarts: unknown[]) => void;\n  toggle: (quickstartId: string) => void;\n  Catalog: unknown;\n  activateQuickstart: (key: string) => Promise<void>;\n}\n\nexport default function QuickStart() {\n  const { isBeta, quickStarts } = useChrome();\n  // This value only needs to be computed once\n  // So we wrap it in a useMemo and give it an empty dependency array to prevent it from being called on every render.\n  const isPreview = useMemo(isBeta, []);\n  const [isExpanded, setIsExpanded] = useState(isPreview);\n  const [quickStartLoading, setQuickStartLoading] = useState(false);\n  const classes = useStyles();\n\n  if (!isPreview) return <></>;\n\n  const onToggle = () => setIsExpanded((prev) => !prev);\n  const activateQuickStart = async () => {\n    setQuickStartLoading(true);\n    try {\n      await (quickStarts as QuickStarts)?.activateQuickstart('insights-custom-repos');\n      onToggle();\n    } catch (error) {\n      console.warn(error);\n    }\n    setQuickStartLoading(false);\n  };\n\n  return (\n    <Grid className={classes.quickstartContainer}>\n      <ExpandableSection\n        toggleText='Need help getting started with Preview features?'\n        onToggle={onToggle}\n        isExpanded={isExpanded}\n        displaySize='large'\n        aria-label='quickStart-expansion'\n        data-ouia-component-id='quickstart_expand'\n      >\n        <Text>For help getting started, access the quick start below:</Text>\n        <Button\n          className={classes.buildCustomButton}\n          iconPosition='right'\n          icon={\n            quickStartLoading ? (\n              <Spinner size='md' className={classes.quickstartSpinner} />\n            ) : (\n              <ArrowRightIcon />\n            )\n          }\n          variant='link'\n          ouiaId='quickstart_link'\n          onClick={activateQuickStart}\n          isDisabled={quickStartLoading}\n        >\n          Build an Image with Custom Content\n        </Button>\n      </ExpandableSection>\n    </Grid>\n  );\n}\n","import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  link: {\n    alignItems: 'center',\n    display: 'flex',\n    width: 'fit-content', // Prevents overflow of clickable area beyond visible content\n  },\n  icon: {\n    marginLeft: '5px',\n  },\n});\n\ninterface Props {\n  href: string;\n}\n\nconst UrlWithExternalIcon = ({ href }: Props) => {\n  const classes = useStyles();\n  return (\n    <a href={href} className={classes.link} rel='noreferrer' target='_blank'>\n      {href} <ExternalLinkAltIcon className={classes.icon} />\n    </a>\n  );\n};\n\nexport default UrlWithExternalIcon;\n","import { createContext, ReactNode, useContext, useState } from 'react';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { Rbac } from '@redhat-cloud-services/insights-common-typescript';\n\nexport interface AppContextInterface {\n  hidePackageVerification: boolean;\n  rbac?: { read: boolean; write: boolean };\n  setRbac: (rbac?: Rbac) => void;\n}\n\nexport const AppContext = createContext({} as AppContextInterface);\n\nexport const ContextProvider = ({ children }: { children: ReactNode }) => {\n  const [rbac, setRbac] = useState<Rbac | undefined>(undefined);\n  const hidePackageVerification = useFlag('content-sources.hide-package-verification') || false;\n\n  return (\n    <AppContext.Provider\n      value={{\n        hidePackageVerification,\n        setRbac,\n        rbac: rbac\n          ? {\n              read: rbac?.hasPermission('content-sources', 'repositories', 'read'),\n              write: rbac?.hasPermission('content-sources', 'repositories', 'write'),\n            }\n          : undefined,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n","import axios from 'axios';\n\nexport interface ContentItem {\n  uuid: string;\n  name: string;\n  package_count: number;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  account_id: string;\n  org_id: string;\n  status: string;\n  last_introspection_error: string;\n  last_introspection_time: string;\n  failed_introspections_count: number;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface PopularRepository {\n  uuid: string;\n  existing_name: string;\n  suggested_name: string;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface CreateContentRequestItem {\n  name: string;\n  url: string;\n  distribution_versions?: Array<string>;\n  distribution_arch?: string;\n  gpg_key?: string;\n  metadata_verification?: boolean;\n  snapshot?: boolean;\n}\n\nexport interface ErrorItem {\n  status: number;\n  title?: string;\n  detail?: string;\n}\n\nexport interface ErrorResponse {\n  errors: ErrorItem[];\n}\n\nexport type CreateContentRequestResponse = ContentItem[] | ErrorResponse;\n\nexport type CreateContentRequest = Array<CreateContentRequestItem>;\n\nexport interface EditContentRequestItem {\n  uuid: string;\n  name: string;\n  url: string;\n  distribution_arch: string;\n  distribution_versions: string[];\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport type EditContentRequest = Array<EditContentRequestItem>;\n\nexport type ContentList = Array<ContentItem>;\n\nexport type Links = {\n  first: string;\n  last: string;\n  next: string;\n  prev: string;\n};\n\nexport type Meta = {\n  count: number;\n  limit: number;\n  offset: number;\n};\n\nexport interface ContentListResponse {\n  data: ContentList;\n  links: Links;\n  meta: Meta;\n}\n\nexport interface PopularRepositoriesResponse {\n  data: PopularRepository[];\n  links: Links;\n  meta: Meta;\n}\n\nexport interface RepositoryParamsResponse {\n  distribution_versions: Array<NameLabel>;\n  distribution_arches: Array<NameLabel>;\n}\n\nexport interface GpgKeyResponse {\n  gpg_key: string;\n}\n\nexport type NameLabel = {\n  name: string;\n  label: string;\n};\n\nexport type FilterData = {\n  searchQuery: string;\n  versions: Array<string>;\n  arches: Array<string>;\n  statuses: Array<string>;\n};\n\nexport type ValidateItem = {\n  skipped: boolean;\n  valid: boolean;\n  error: string;\n};\n\nexport interface ValidationUrl extends ValidateItem {\n  http_code: number;\n  metadata_present: boolean;\n  metadata_signature_present: boolean;\n}\n\nexport type ValidationResponse = {\n  name?: ValidateItem;\n  url?: ValidationUrl;\n  distribution_versions?: ValidateItem;\n  distribution_arch?: ValidateItem;\n  gpg_key?: ValidateItem;\n}[];\n\nexport interface PackageItem {\n  arch: string;\n  checksum: string;\n  epoch: number;\n  name: string;\n  release: string;\n  summary: string;\n  uuid: string;\n  version: string;\n}\n\nexport type PackagesResponse = {\n  data: PackageItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport type IntrospectRepositoryRequestItem = {\n  uuid: string;\n  reset_count?: boolean;\n};\n\nexport const getPopularRepositories: (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => Promise<PopularRepositoriesResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData?.searchQuery;\n  const versionParam = filterData?.versions?.join(',');\n  const archParam = filterData?.arches?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/popular_repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getContentList: (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => Promise<ContentListResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData.searchQuery;\n  const versionParam = filterData.versions.join(',');\n  const archParam = filterData.arches.join(',');\n  const statusParam = filterData?.statuses?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&status=${statusParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const deleteContentListItem: (uuid: string) => Promise<void> = async (uuid: string) => {\n  const { data } = await axios.delete(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const AddContentListItems: (\n  request: CreateContentRequest,\n) => Promise<CreateContentRequestResponse> = async (request) => {\n  const { data } = await axios.post('/api/content-sources/v1.0/repositories/bulk_create/', request);\n  return data;\n};\n\nexport const EditContentListItem: (request: EditContentRequestItem) => Promise<void> = async (\n  request,\n) => {\n  const { data } = await axios.patch(\n    `/api/content-sources/v1.0/repositories/${request.uuid}`,\n    request,\n  );\n  return data;\n};\n\nexport const getRepositoryParams: () => Promise<RepositoryParamsResponse> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/repository_parameters/');\n  return data;\n};\n\nexport const validateContentListItems: (\n  request: CreateContentRequest,\n) => Promise<ValidationResponse> = async (request) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1.0/repository_parameters/validate/',\n    request,\n  );\n  return data;\n};\n\nexport const getGpgKey: (url: string) => Promise<GpgKeyResponse> = async (url: string) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1/repository_parameters/external_gpg_key/',\n    { url },\n  );\n  return data;\n};\n\nexport const getPackages: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<PackagesResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/rpms?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const introspectRepository: (\n  request: IntrospectRepositoryRequestItem,\n) => Promise<void> = async (request) => {\n  const { data } = await axios.post(\n    `/api/content-sources/v1/repositories/${request.uuid}/introspect/`,\n    { reset_count: request.reset_count },\n  );\n  return data;\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { useState } from 'react';\nimport { QueryClient, useMutation, useQuery } from 'react-query';\nimport { cloneDeep } from 'lodash';\n\nimport { useNotification } from '../Notifications/Notifications';\nimport {\n  ContentListResponse,\n  deleteContentListItem,\n  getContentList,\n  RepositoryParamsResponse,\n  getRepositoryParams,\n  AddContentListItems,\n  CreateContentRequest,\n  FilterData,\n  validateContentListItems,\n  EditContentListItem,\n  EditContentRequest,\n  getGpgKey,\n  PackagesResponse,\n  getPackages,\n  ErrorResponse,\n  getPopularRepositories,\n  PopularRepositoriesResponse,\n  CreateContentRequestResponse,\n  ContentItem,\n  introspectRepository,\n  IntrospectRepositoryRequestItem,\n} from './ContentApi';\n\nexport const CONTENT_LIST_KEY = 'CONTENT_LIST_KEY';\nexport const POPULAR_REPOSITORIES_LIST_KEY = 'POPULAR_REPOSITORIES_LIST_KEY';\nexport const REPOSITORY_PARAMS_KEY = 'REPOSITORY_PARAMS_KEY';\nexport const CREATE_PARAMS_KEY = 'CREATE_PARAMS_KEY';\nexport const PACKAGES_KEY = 'PACKAGES_KEY';\n\nconst CONTENT_LIST_POLLING_TIME = 15000; // 15 seconds\n\nexport const usePopularRepositoriesQuery = (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) =>\n  useQuery<PopularRepositoriesResponse>(\n    [POPULAR_REPOSITORIES_LIST_KEY, page, limit, sortBy, ...Object.values(filterData || {})], // NOTE: Update this if larger list!!!!\n    () => getPopularRepositories(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n\nexport const useContentListQuery = (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => {\n  const [polling, setPolling] = useState(false);\n  const [pollCount, setPollCount] = useState(0);\n\n  return useQuery<ContentListResponse>(\n    // Below MUST match the \"contentListKeyArray\" seen below in the useDeleteContent.\n    [CONTENT_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getContentList(page, limit, filterData, sortBy),\n    {\n      onSuccess: (data) => {\n        const containsPending = data?.data?.some(\n          ({ status }) => status === 'Pending' || status === '',\n        );\n        if (polling && containsPending) {\n          // Count each consecutive time polling occurs\n          setPollCount(pollCount + 1);\n        }\n        if (polling && !containsPending) {\n          // We were polling, but now the data is valid, we stop the count.\n          setPollCount(0);\n        }\n        if (pollCount > 40) {\n          // If polling occurs 40 times in a row, we stop it. Likely a data/kafka issue has occurred with the API.\n          return setPolling(false);\n        }\n        // This sets the polling state based whether the data contains any \"Pending\" status\n        return setPolling(containsPending);\n      },\n      onError: () => {\n        setPolling(false);\n        setPollCount(0);\n      },\n      refetchInterval: polling ? CONTENT_LIST_POLLING_TIME : undefined,\n      refetchIntervalInBackground: false, // This prevents endless polling when our app isn't the focus tab in a browser\n      refetchOnWindowFocus: polling, // If polling and navigate to another tab, on refocus, we want to poll once more. (This is based off of the stalestime below)\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n\nexport const useAddContentQuery = (queryClient: QueryClient, request: CreateContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => AddContentListItems(request.filter((item) => !!item)), {\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n\n      notify({\n        variant: AlertVariant.success,\n        title:\n          request?.length > 1\n            ? `${request?.length} custom repositories added`\n            : `Custom repository \"${request?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err: { response?: { data: ErrorResponse } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.errors?.find(({ detail }) => {\n            if (detail) {\n              description = detail;\n              return true;\n            }\n          })?.detail;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error adding items to content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useAddPopularRepositoryQuery = (\n  queryClient: QueryClient,\n  request: CreateContentRequest,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n) => {\n  const { notify } = useNotification();\n  const popularRepositoriesKeyArray = [\n    POPULAR_REPOSITORIES_LIST_KEY,\n    page,\n    perPage,\n    undefined,\n    ...Object.values(filterData || {}),\n  ];\n  const filteredRequest = request.filter((item) => !!item);\n  return useMutation(() => AddContentListItems(filteredRequest), {\n    onMutate: async () => {\n      const { name } = filteredRequest[0];\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(popularRepositoriesKeyArray);\n      // Snapshot the previous value\n      const previousPopularData: Partial<PopularRepositoriesResponse> =\n        queryClient.getQueryData(popularRepositoriesKeyArray) || {};\n\n      queryClient.setQueryData(popularRepositoriesKeyArray, () => ({\n        ...previousPopularData,\n        data: previousPopularData.data?.map((data) => {\n          if (name === data.suggested_name && !data.uuid) {\n            return { ...data, uuid: 'temp', existing_name: name };\n          }\n          return data;\n        }),\n      }));\n      return { previousData: previousPopularData };\n    },\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n      notify({\n        variant: AlertVariant.success,\n        title: `Custom repository \"${data?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: PopularRepositoriesResponse;\n        };\n        queryClient.setQueryData(popularRepositoriesKeyArray, previousData);\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error deleting item from popularRepo',\n          description: error?.message,\n        });\n      }\n    },\n  });\n};\n\nexport const useEditContentQuery = (queryClient: QueryClient, request: EditContentRequest) => {\n  const { notify } = useNotification();\n  return useMutation(() => EditContentListItem(request[0]), {\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: `Successfully edited ${request.length} ${request.length > 1 ? 'items' : 'item'}`,\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err: { response?: { data: ErrorResponse } }) => {\n      let description = 'An error occurred';\n\n      switch (typeof err?.response?.data) {\n        case 'string':\n          description = err?.response?.data;\n          break;\n        case 'object':\n          // Only show the first error\n          err?.response?.data.errors?.find(({ detail }) => {\n            if (detail) {\n              description = detail;\n              return true;\n            }\n          })?.detail;\n          break;\n        default:\n          break;\n      }\n\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error editing items on content list',\n        description,\n      });\n    },\n  });\n};\n\nexport const useValidateContentList = () => {\n  const { notify } = useNotification();\n  return useMutation((request: CreateContentRequest) => validateContentListItems(request), {\n    onError: (err) => {\n      const error = err as Error; // Forced Type\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error validating form fields',\n        description: error?.message,\n      });\n    },\n  });\n};\n\nexport const useDeletePopularRepositoryMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n) => {\n  const popularRepositoriesKeyArray = [\n    POPULAR_REPOSITORIES_LIST_KEY,\n    page,\n    perPage,\n    undefined,\n    ...Object.values(filterData || {}),\n  ];\n  const { notify } = useNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(popularRepositoriesKeyArray);\n      // Snapshot the previous value\n      const previousPopularData: Partial<PopularRepositoriesResponse> =\n        queryClient.getQueryData(popularRepositoriesKeyArray) || {};\n\n      queryClient.setQueryData(popularRepositoriesKeyArray, () => ({\n        ...previousPopularData,\n        data: previousPopularData.data?.map((data) => {\n          if (data.uuid === uuid) {\n            return { ...data, uuid: undefined };\n          }\n          return data;\n        }),\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData: previousPopularData, queryClient };\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: PopularRepositoriesResponse;\n        };\n        queryClient.setQueryData(popularRepositoriesKeyArray, previousData);\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error deleting item from popularRepo',\n          description: error?.message,\n        });\n      }\n    },\n  });\n};\n\nexport const useDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const { notify } = useNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => uuid !== data.uuid),\n        meta: previousData.meta\n          ? {\n              ...previousData.meta,\n              count: previousData.meta.count ? previousData.meta.count - 1 : 1,\n            }\n          : undefined,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { previousData } = context as {\n        previousData: ContentListResponse;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = previousData?.meta?.count - 1;\n        }\n\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error deleting item from content list',\n          description: error?.message,\n        });\n      }\n    },\n  });\n};\n\nexport const useRepositoryParams = () =>\n  useQuery<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY, getRepositoryParams, {\n    keepPreviousData: true,\n    staleTime: Infinity,\n  });\n\nexport const useFetchGpgKey = () => {\n  const { notify } = useNotification();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchGpgKey = async (url: string): Promise<string> => {\n    setIsLoading(true);\n    let gpg_key = url;\n    try {\n      const data = await getGpgKey(url);\n      gpg_key = data.gpg_key;\n    } catch ({ response = {} }: any) {\n      const { data } = response as { data: { message: string | undefined } | string };\n      const description = typeof data === 'string' ? data : data?.message;\n      notify({\n        variant: AlertVariant.danger,\n        title: 'Error fetching GPG key from provided URL',\n        description,\n      });\n    }\n    setIsLoading(false);\n    return gpg_key;\n  };\n\n  return { fetchGpgKey, isLoading };\n};\n\nexport const useGetPackagesQuery = (\n  uuid: string,\n  count: number,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) =>\n  useQuery<PackagesResponse>(\n    [PACKAGES_KEY, uuid, page, limit, searchQuery, sortBy, count],\n    () => getPackages(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      onError: (err) => {\n        const { notify } = useNotification();\n        const error = err as Error; // Forced Type\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error fetching rpm packages',\n          description: error?.message,\n        });\n      },\n    },\n  );\n\nexport const useIntrospectRepositoryMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const { notify } = useNotification();\n  return useMutation(introspectRepository, {\n    onMutate: async (item: IntrospectRepositoryRequestItem) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      const previousStatus = previousData.data?.find((data) => item.uuid == data.uuid)?.status;\n      const newData = cloneDeep(previousData);\n      if (previousStatus) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        newData.data.filter((data) => item.uuid == data.uuid).at(0).status = 'Pending';\n      }\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...newData,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: 'Repository introspection in progress',\n      });\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err: { response?: { data: ErrorResponse } }, _newData, context) => {\n      if (context) {\n        const error = err as Error; // Forced Type\n\n        let description = error?.message;\n        switch (typeof err?.response?.data) {\n          case 'string':\n            description = err?.response?.data;\n            break;\n          case 'object':\n            // Only show the first error\n            err?.response?.data.errors?.find(({ detail }) => {\n              if (detail) {\n                description = detail;\n              }\n            })?.detail;\n            break;\n          default:\n            break;\n        }\n\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n\n        notify({\n          variant: AlertVariant.danger,\n          title: 'Error introspecting repository',\n          description,\n        });\n      }\n    },\n  });\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\n\nexport interface NotificationPayload {\n  title: React.ReactNode | string;\n  variant: AlertVariant;\n  description?: React.ReactNode | string;\n  dismissable?: boolean;\n}\n\nexport const useNotification = () => {\n  const dispatch = useDispatch();\n  const notify: (payload: NotificationPayload) => void = (payload: NotificationPayload) =>\n    dispatch(addNotification(payload));\n\n  return { notify };\n};\n","import { initStore, restoreStore } from '@redhat-cloud-services/insights-common-typescript';\nimport { Middleware } from 'redux';\n\nexport const createStore = (...middleware: Middleware[]) => initStore({}, {}, ...middleware);\n\nexport const resetStore = () => restoreStore();\n"],"names":["getRegistry","appname","insights","useAppContext","rbac","setRbac","chrome","useEffect","register","notifications","notificationsReducer","auth","getUser","then","fetchRBAC","Bullseye","Spinner","size","read","NoPermissionsPage","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","logger","store","useMemo","resetStore","createStore","appAction","ContextProvider","QueryClientProvider","client","value","delay","useState","debouncedValue","setDebouncedValue","isEqual","setTimeout","clearTimeout","useDeepCompareMemoize","ref","useRef","current","callback","dependencies","map","useStyles","createUseStyles","mainContainer","backgroundColor","global_BackgroundColor_100","display","flexDirection","mainContainer100Height","composes","minHeight","topContainer","justifyContent","padding","height","bottomContainer","invisible","opacity","classes","useQueryClient","storedPerPage","Number","localStorage","getItem","page","setPage","perPage","setPerPage","editModalOpen","setEditModalOpen","editValues","setEditValues","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","searchQuery","versions","arches","statuses","filterData","setFilterData","clearFilters","notFiltered","length","useRepositoryParams","repositoryParamsLoading","repositoryParamsError","repositoryParamsIsError","data","distribution_versions","distribution_arches","distVersions","distArches","columnSortAttributes","sortString","useContentListQuery","isLoading","error","isError","isFetching","meta","count","limit","offset","useDeleteContentItemMutate","deleteItem","isDeleting","useIntrospectRepositoryMutate","introspectRepository","isIntrospecting","introspectRepoForUuid","uuid","reset_count","actionTakingPlace","onSetPage","_","newPage","onPerPageSelect","newPerPage","setItem","toString","columnHeaders","archesDisplay","arch","find","label","name","contentList","rowActions","useCallback","rowData","title","onClick","isDisabled","status","countIsZero","Grid","className","values","open","setClosed","Flex","FlexItem","hide","Pagination","id","widgetId","perPageComponent","itemCount","isCompact","SkeletonTable","rowSize","colSize","variant","TableVariant","compact","TableComposable","ouiaId","Thead","Tr","columnHeader","index","Th","sort","columnIndex","sortBy","direction","defaultDirection","onSort","_event","Tbody","time","url","distribution_arch","last_introspection_time","Td","href","filter","includes","join","undefined","fromNow","retryHandler","isActionCell","content","show","write","setDisabled","ActionsColumn","items","PaginationVariant","bottom","description","paddingTop","color","global_Color_200","removeSideBorder","borderLeft","toggleAllRow","cursor","borderBottom","global_link_Color","fill","colHeader","mainContentCol","toggleAction","addRepositoryButton","marginBottom","saveButton","marginRight","transition","removeButton","singleContentCol","gpgKeyInput","backgroundPositionX","defaultValues","gpgKey","gpgLoading","expanded","metadataVerification","defaultTouchedState","isButtonDisabled","hidePackageVerification","isModalOpen","setIsModalOpen","changeVerified","setChangeVerified","gpgKeyList","setGpgKeyList","formik","useFormik","initialValues","validateOnBlur","validateOnChange","validationSchema","makeValidationSchema","initialTouched","onSubmit","updateGpgKey","updatedData","useFetchGpgKey","fetchGpgKey","isFetchingGpgKey","debouncedGpgKeyList","getQueryData","REPOSITORY_PARAMS_KEY","list","Promise","all","updateValue","isValidURL","result","validationList","metadata_signature_present","setValues","distributionArches","distributionVersions","forEach","closeModal","setTouched","resetForm","useAddContentQuery","mapFormikToAPIValues","addContent","isAdding","createDataLengthOf1","allExpanded","some","updateVariable","newValue","getFieldValidation","field","errors","touched","setTouchedOnLastItemIfUntouchedAndCollapsed","lastItem","updatedTouched","debouncedValues","useValidateContentList","validateContentList","isValidating","gpg_key","metadata_verification","validationData","validateForm","formikErrors","mappedErrorData","mapValidationData","setErrors","onToggle","notify","useNotification","Button","Modal","position","ModalVariant","medium","ouiaSafe","help","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","isOpen","onClose","footer","Stack","StackItem","isValid","vals","icon","PlusCircleIcon","isExpanded","expand","rowIndex","dataLabel","width","newValues","splice","newTouched","newErrors","removeRepository","MinusCircleIcon","colSpan","Form","FormGroup","isRequired","fieldId","validated","helperTextInvalid","TextInput","type","onChange","placeholder","onBlur","newVersion","isEmpty","updateArchAndVersion","labelIcon","Tooltip","menuAppendTo","document","body","toggleId","options","Object","keys","SelectVariant","single","selectedProp","key","setSelected","typeaheadMulti","placeholderText","valueToUpdate","val","setVersionSelected","FileUpload","filenamePlaceholder","textAreaPlaceholder","spellCheck","onDataChange","onTextChange","onClearClick","dropzoneProps","maxSize","maxUploadSize","onDropRejected","files","failedFileUpload","allowEditingUploadedText","browseButtonText","isInline","Radio","isChecked","red","global_danger_color_100","green","global_success_color_100","fontWeight","fontSize","loading","allTouched","every","noErrors","hasTouchedError","alignContent","default","spacer","CheckCircleIcon","ExclamationCircleIcon","REGEX_URL","regex","RegExp","match","formikValues","updatedValidationData","rest","metadata_present","http_code","mapNoMetaDataError","err","Yup","addMethod","object","propertyName","message","this","test","parent","v","createError","path","array","shape","string","min","max","required","uniqueProperty","AlertVariant","danger","chipsContainer","marginLeft","searchInput","paddingRight","searchIcon","global_secondary_color_100","top","left","pointerEvents","statusValues","filterType","setFilterType","versionNamesLabels","setVersionNamesLabels","archNamesLabels","setArchNamesLabels","setSearchQuery","selectedVersions","setSelectedVersions","selectedArches","setSelectedArches","selectedStatuses","setSelectedStatuses","debouncedSearchQuery","debouncedSelectedVersions","debouncedSelectedArches","debouncedSelectedStatuses","getLabels","names","namesLabels","labels","found","push","chips","setChips","chip","version","InputGroup","toggleIcon","FilterIcon","SearchIcon","toggleAriaLabel","checkbox","getSelectionByType","fullWidth","ChipGroup","categoryName","Chip","mapToDefaultFormikValues","valuesHaveChanged","useEditContentQuery","mapFormikToEditAPIValues","editContent","isEditing","hasNotChanged","urlOnBlur","noVerticalAlign","emptyStateContainer","flexGrow","emptStateBody","EmptyState","EmptyStateVariant","full","EmptyStateIcon","Title","headingLevel","EmptyStateBody","text","global_disabled_color_100","link","modalOpen","setModalOpen","package_count","isContentLeftAligned","Text","paddingBottom","packageCount","useGetPackagesQuery","sortParams","packageList","fetchingOrLoading","notLoadingZeroCount","hasNoBodyWrapper","InnerScrollContainer","release","clearSearch","margin","extend","relativeTime","gold","global_warning_color_100","spinner","animationDuration","PopoverDescription","timeText","PopoverFooter","failedIntrospectionsCount","lastIntrospectionTime","alertSeverityVariant","headerIcon","footerContent","isLink","ExclamationTriangleIcon","global_danger_color_200","global_success_color_200","global_warning_color_200","blue","global_info_color_200","props","fontStyle","textDecoration","children","addRepositoriesButton","checkboxMinWidth","minWidth","disabled","checkedRepositories","setCheckedRepositories","selectedData","setSelectedData","selectedUUID","setSelectedUUID","searchValue","setSearchValue","debouncedSearchValue","usePopularRepositoriesQuery","areAllReposAdded","atLeastOneRepoChecked","areAllReposSelected","useAddPopularRepositoryQuery","addContentQuery","useDeletePopularRepositoryMutate","popularData","request","checked","suggested_name","select","onSelect","isSelected","isHeaderSelectDisabled","existing_name","isSelecting","disable","newData","tabs","tab","outlineOffset","containerMargin","DEFAULT_ROUTE","POPULAR_REPOSITORIES_ROUTE","tabbedRoutes","route","Element","useLocation","pathname","locationKey","currentRoute","last","split","Tabs","activeKey","Tab","keyParams","tabIndex","eventKey","Link","accessKey","to","TabTitleText","Routes","Route","element","ErrorPage","Navigate","replace","cloneElement","selected","Array","isArray","setIsOpen","selectFrom","option","SelectOption","Select","selection","remaining","item","selections","isCheckboxSelectionBadgeHidden","ErrorBoundaryPage","headerTitle","errorTitle","errorDescription","PageHeader","subtext","global_Color_100","PageHeaderTitle","style","LockIcon","quickstartContainer","quickstartSpinner","buildCustomButton","marginTop","useChrome","isBeta","quickStarts","isPreview","setIsExpanded","quickStartLoading","setQuickStartLoading","prev","ExpandableSection","toggleText","displaySize","iconPosition","ArrowRightIcon","activateQuickstart","console","warn","alignItems","rel","target","ExternalLinkAltIcon","AppContext","createContext","useFlag","Provider","hasPermission","useContext","getPopularRepositories","versionParam","archParam","get","getContentList","statusParam","deleteContentListItem","delete","AddContentListItems","post","EditContentListItem","patch","getRepositoryParams","validateContentListItems","getGpgKey","getPackages","CONTENT_LIST_KEY","POPULAR_REPOSITORIES_LIST_KEY","CREATE_PARAMS_KEY","PACKAGES_KEY","useQuery","keepPreviousData","staleTime","polling","setPolling","pollCount","setPollCount","onSuccess","containsPending","onError","refetchInterval","refetchIntervalInBackground","useMutation","hasPending","success","invalidateQueries","response","detail","popularRepositoriesKeyArray","filteredRequest","onMutate","cancelQueries","previousPopularData","setQueryData","previousData","_newData","context","contentListKeyArray","_data","_variables","setQueriesData","Infinity","setIsLoading","optimisticResults","previousStatus","cloneDeep","at","dispatch","useDispatch","payload","addNotification","initStore","middleware","restoreStore"],"sourceRoot":""}