{"version":3,"file":"js/exposed-./RootApp.053bd44f7225a96c69f2.js","mappings":"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","sources":["webpack:///./src/App.tsx","webpack:///./src/AppEntry.tsx","webpack:///./src/Hooks/useDebounce.tsx","webpack:///./src/Hooks/useDeepCompareEffect.tsx","webpack:///./src/Hooks/useErrorNotification.tsx","webpack:///./src/Hooks/useNotification.tsx","webpack:///./src/Hooks/useRootPath.tsx","webpack:///./src/Pages/AdminTaskTable/AdminTaskTable.tsx","webpack:///./src/Pages/AdminTaskTable/components/AdminTaskFilters.tsx","webpack:///./src/Pages/AdminTaskTable/components/StatusIcon.tsx","webpack:///./src/Pages/AdminTaskTable/components/ViewPayloadModal/ViewPayloadModal.tsx","webpack:///./src/Pages/AdminTaskTable/components/ViewPayloadModal/components/AdminTaskInfo.tsx","webpack:///./src/Pages/ContentListTable/ContentListTable.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/AddContent.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/components/ContentValidity.tsx","webpack:///./src/Pages/ContentListTable/components/AddContent/helpers.ts","webpack:///./src/Pages/ContentListTable/components/ContentListFilters.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentForm.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/EditContentModal.tsx","webpack:///./src/Pages/ContentListTable/components/EditContentModal/helpers.ts","webpack:///./src/Pages/ContentListTable/components/PackageCount.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/PackageModal.tsx","webpack:///./src/Pages/ContentListTable/components/PackageModal/components/EmptyPackageState.tsx","webpack:///./src/Pages/ContentListTable/components/SnapshotListModal/SnapshotListModal.tsx","webpack:///./src/Pages/ContentListTable/components/SnapshotListModal/components/ChangedArrows.tsx","webpack:///./src/Pages/ContentListTable/components/StatusIcon.tsx","webpack:///./src/Pages/PopularRepositoriesTable/PopularRepositoriesTable.tsx","webpack:///./src/Pages/PopularRepositoriesTable/components/AddRepo.tsx","webpack:///./src/Pages/PopularRepositoriesTable/helper.ts","webpack:///./src/Routes/Layout.tsx","webpack:///./src/Routes/index.tsx","webpack:///./src/Routes/useTabbedRoutes.tsx","webpack:///./src/components/ConditionalTooltip/ConditionalTooltip.tsx","webpack:///./src/components/CustomHelperText/CustomHelperText.tsx","webpack:///./src/components/DeleteKebab/DeleteKebab.tsx","webpack:///./src/components/DropdownSelect/DropdownSelect.tsx","webpack:///./src/components/EmptyTableState/EmptyTableState.tsx","webpack:///./src/components/Error/ErrorPage.tsx","webpack:///./src/components/Header/Header.tsx","webpack:///./src/components/Hide/Hide.tsx","webpack:///./src/components/NoPermissionsPage/NoPermissionsPage.tsx","webpack:///./src/components/QuickStart/QuickStart.tsx","webpack:///./src/components/StatusText/StatusText.tsx","webpack:///./src/components/UrlWithLinkIcon/UrlWithLinkIcon.tsx","webpack:///./src/middleware/AppContext.tsx","webpack:///./src/middleware/RbacUtils.ts","webpack:///./src/services/AdminTasks/AdminTaskApi.ts","webpack:///./src/services/AdminTasks/AdminTaskQueries.ts","webpack:///./src/services/Content/ContentApi.ts","webpack:///./src/services/Content/ContentQueries.ts","webpack:///./src/services/Features/FeatureApi.ts","webpack:///./src/services/Features/FeatureQueries.ts","webpack:///./src/store/index.tsx"],"sourcesContent":["import '@redhat-cloud-services/frontend-components-utilities/styles/_all';\nimport 'react18-json-view/src/style.css';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport Routes from './Routes';\nimport { useAppContext } from './middleware/AppContext';\nimport { NoPermissionsPage } from './components/NoPermissionsPage/NoPermissionsPage';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nexport default function App() {\n  const { rbac, isFetchingFeatures } = useAppContext();\n\n  switch (true) {\n    case !rbac || isFetchingFeatures:\n      return (\n        <Bullseye>\n          <Spinner size='xl' />\n        </Bullseye>\n      );\n    case rbac?.read:\n      return (\n        <>\n          <NotificationsPortal />\n          <Routes />\n        </>\n      );\n\n    default:\n      return <NoPermissionsPage />;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport * as Redux from 'redux';\n\nimport App from './App';\nimport { ContextProvider } from './middleware/AppContext';\nimport { createStore, restoreStore } from './store';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false, // TODO: Have a conversation about this\n    },\n  },\n});\n\ninterface AppEntryProps {\n  logger?: Redux.Middleware;\n}\n\nexport default function AppEntry({ logger }: AppEntryProps) {\n  const store = React.useMemo(() => {\n    restoreStore();\n    if (logger) {\n      return createStore(logger).store;\n    }\n    return createStore().store;\n  }, [logger]);\n\n  useEffect(() => {\n    insights?.chrome?.appAction?.('view-list-page');\n  }, []);\n\n  return (\n    <ReduxProvider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <ContextProvider>\n          <App />\n        </ContextProvider>\n      </QueryClientProvider>\n    </ReduxProvider>\n  );\n}\n","import { isEqual } from 'lodash';\nimport { useEffect, useState } from 'react';\n\nfunction useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(() => {\n    // We need to make sure that we compare-deep here as the default useEffect deps do not.\n    if (!isEqual(value, debouncedValue)) {\n      const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { isEqual } from 'lodash';\nimport { useEffect, useRef } from 'react';\n\nfunction useDeepCompareMemoize(value) {\n  const ref = useRef();\n  // it can be done by using useMemo as well\n  // but useRef is rather cleaner and easier\n\n  if (!isEqual(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n\nexport default function useDeepCompareEffect(callback, dependencies) {\n  useEffect(callback, dependencies.map(useDeepCompareMemoize));\n}\n","import { AlertVariant } from '@patternfly/react-core';\nimport useNotification from './useNotification';\n\nexport default function useErrorNotification() {\n  const { notify } = useNotification();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const errorNotifier = (defaultTitle: string, defaultDescription: string, err: any) => {\n    let title = defaultTitle;\n    let description = defaultDescription;\n\n    switch (typeof err?.response?.data) {\n      case 'string':\n        description = err.response.data;\n        break;\n      case 'object':\n        // Only show the first error\n        err?.response?.data.errors?.find(\n          ({ title: errTitle, detail, description: errDescription }) => {\n            if (errTitle) title = errTitle;\n            if (errDescription) description = errDescription;\n            if (detail) description = detail;\n            if (errTitle || errDescription || detail) return true;\n          },\n        );\n        break;\n      default:\n        break;\n    }\n\n    notify({\n      variant: AlertVariant.danger,\n      title,\n      description,\n    });\n  };\n\n  return errorNotifier;\n}\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useDispatch } from 'react-redux';\n\nexport interface NotificationPayload {\n  title: React.ReactNode | string;\n  variant: AlertVariant;\n  description?: React.ReactNode | string;\n  dismissable?: boolean;\n}\n\nexport default function useNotification() {\n  const dispatch = useDispatch();\n  const notify = (payload: NotificationPayload) => dispatch(addNotification(payload));\n\n  return { notify };\n}\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction useRootPath(): string {\n  const { pathname } = useLocation();\n  const rootPath = useMemo(\n    () => pathname.split('content')[0] + 'content',\n    [pathname.split('content')[0]],\n  );\n\n  return rootPath;\n}\n\nexport default useRootPath;\n","import {\n  Bullseye,\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  Table /* data-codemods */,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from '../../components/EmptyTableState/EmptyTableState';\nimport AdminTaskFilters from './components/AdminTaskFilters';\nimport dayjs from 'dayjs';\nimport StatusIcon from './components/StatusIcon';\nimport { useAdminTaskListQuery } from '../../services/AdminTasks/AdminTaskQueries';\nimport { AdminTaskFilterData, AdminTask } from '../../services/AdminTasks/AdminTaskApi';\nimport { Outlet, useNavigate } from 'react-router-dom';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n});\n\nexport const formatDate = (date: string): string => dayjs(date).format('DD MMM YYYY HH:mm UTCZ');\n\nconst perPageKey = 'adminTaskPerPage';\n\nconst AdminTaskTable = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(3); // queued_at\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('desc');\n\n  const [filterData, setFilterData] = useState<AdminTaskFilterData>({\n    accountId: '',\n    orgId: '',\n    statuses: [],\n  });\n\n  const clearFilters = () => setFilterData({ statuses: [], accountId: '', orgId: '' });\n\n  const notFiltered =\n    filterData.statuses.length === 0 && filterData.accountId === '' && filterData.orgId === '';\n\n  const columnSortAttributes = [\n    'org_id',\n    'account_id',\n    'typename',\n    'queued_at',\n    'started_at',\n    'finished_at',\n    'status',\n  ];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useAdminTaskListQuery(page, perPage, filterData, sortString);\n\n  const actionTakingPlace = isFetching;\n\n  const onSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem(perPageKey, newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = ['Org ID', 'Account ID', 'Type', 'Queued At', 'Status'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n\n  const {\n    data: adminTaskList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const itemName = 'tasks';\n  const notFilteredBody = 'Certain actions, such as repository introspection, will start a task';\n\n  const countIsZero = count === 0;\n\n  if (countIsZero && notFiltered && !isLoading)\n    return (\n      <Bullseye data-ouia-safe={!actionTakingPlace} data-ouia-component-id='admin_task_list_page'>\n        <EmptyTableState\n          notFiltered={notFiltered}\n          clearFilters={clearFilters}\n          itemName={itemName}\n          notFilteredBody={notFilteredBody}\n        />\n      </Bullseye>\n    );\n\n  return (\n    <Grid\n      data-ouia-safe={!actionTakingPlace}\n      data-ouia-component-id='admin_task_list_page'\n      className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}\n    >\n      <Outlet />\n      <Flex className={classes.topContainer}>\n        <AdminTaskFilters\n          isLoading={isLoading}\n          setFilterData={(values) => {\n            setFilterData(values);\n            setPage(1);\n          }}\n          filterData={filterData}\n        />\n        <FlexItem>\n          <Hide hide={countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer}>\n          <SkeletonTable\n            rows={perPage}\n            numberOfColumns={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={countIsZero || isLoading}>\n        <>\n          <Table aria-label='Admin tasks table' ouiaId='admin_tasks_table' variant='compact'>\n            <Thead>\n              <Tr>\n                {columnHeaders.map((columnHeader, index) => (\n                  <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                    {columnHeader}\n                  </Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {adminTaskList.map((adminTask: AdminTask, index) => (\n                <Tr key={adminTask.uuid + index + ''}>\n                  <Td>{adminTask.org_id}</Td>\n                  <Td>{adminTask.account_id ? adminTask.account_id : 'Unknown'}</Td>\n                  <Td>{adminTask.typename}</Td>\n                  <Td>{formatDate(adminTask.queued_at)}</Td>\n                  <Td>\n                    <StatusIcon status={adminTask.status} />\n                  </Td>\n                  <Td width={10}>\n                    <Button\n                      onClick={() => navigate(adminTask.uuid)}\n                      variant='secondary'\n                      ouiaId='view_task_details'\n                    >\n                      View Details\n                    </Button>\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Pagination\n                id='bottom-pagination-id'\n                widgetId='bottomPaginationWidgetId'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={onPerPageSelect}\n              />\n            </FlexItem>\n          </Flex>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero || isLoading}>\n        <EmptyTableState\n          notFiltered={notFiltered}\n          clearFilters={clearFilters}\n          itemName={itemName}\n          notFilteredBody={notFilteredBody}\n        />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default AdminTaskTable;\n","import { useEffect, useMemo, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  TextInput,\n  InputGroupItem,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport { SelectVariant } from '@patternfly/react-core/deprecated';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport useDebounce from '../../../Hooks/useDebounce';\nimport { createUseStyles } from 'react-jss';\nimport { AdminTaskFilterData } from '../../../services/AdminTasks/AdminTaskApi';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: AdminTaskFilterData) => void;\n  filterData: AdminTaskFilterData;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n});\n\nconst statusValues = ['Running', 'Failed', 'Completed', 'Canceled', 'Pending'];\nconst filters = ['Account ID', 'Org ID', 'Status'];\nexport type AdminTaskFilters = 'Account ID' | 'Org ID' | 'Status';\n\nconst AdminTaskFilters = ({ isLoading, setFilterData, filterData }: Props) => {\n  const classes = useStyles();\n  const [filterType, setFilterType] = useState<AdminTaskFilters>('Account ID');\n  const [accountId, setAccountId] = useState('');\n  const [orgId, setOrgId] = useState('');\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n\n  const clearFilters = () => {\n    setAccountId('');\n    setOrgId('');\n    setSelectedStatuses([]);\n    setFilterData({ accountId: '', orgId: '', statuses: [] });\n  };\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.accountId === '' &&\n      filterData.orgId === '' &&\n      filterData.statuses.length === 0 &&\n      (accountId !== '' || orgId !== '' || selectedStatuses.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    accountId: debouncedAccountId,\n    orgId: debouncedOrgId,\n    selectedStatuses: debouncedSelectedStatuses,\n  } = useDebounce({\n    accountId,\n    orgId,\n    selectedStatuses,\n  });\n\n  useEffect(() => {\n    setFilterData({\n      accountId: debouncedAccountId,\n      orgId: debouncedOrgId,\n      statuses: debouncedSelectedStatuses,\n    });\n  }, [debouncedAccountId, debouncedOrgId, debouncedSelectedStatuses]);\n\n  const Filter = useMemo(() => {\n    switch (filterType) {\n      case 'Account ID':\n        return (\n          <InputGroupItem>\n            <TextInput\n              type='text'\n              isDisabled={isLoading}\n              id='account-id'\n              ouiaId='filter_account_id'\n              placeholder='Filter by account ID'\n              value={accountId}\n              onChange={(_event, value) => setAccountId(value)}\n            />\n            <InputGroupText isDisabled={isLoading} id='search-icon'>\n              <SearchIcon />\n            </InputGroupText>\n          </InputGroupItem>\n        );\n      case 'Org ID':\n        return (\n          <InputGroupItem>\n            <TextInput\n              isDisabled={isLoading}\n              id='org-id'\n              ouiaId='filter_org_id'\n              placeholder='Filter by org ID'\n              value={orgId}\n              onChange={(_event, value) => setOrgId(value)}\n            />\n            <InputGroupText id='search-icon'>\n              <SearchIcon />\n            </InputGroupText>\n          </InputGroupItem>\n        );\n      case 'Status':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter status'\n            toggleId='statusSelect'\n            ouiaId='filter_status'\n            isDisabled={isLoading}\n            options={statusValues}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedStatuses}\n            setSelected={setSelectedStatuses}\n            placeholderText='Filter by status'\n          />\n        );\n      default:\n        return <></>;\n    }\n  }, [filterType, isLoading, accountId, orgId, selectedStatuses]);\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupItem>\n            <FlexItem>\n              <DropdownSelect\n                toggleId='filterSelectionDropdown'\n                ouiaId='filter_type'\n                isDisabled={isLoading}\n                options={filters}\n                variant={SelectVariant.single}\n                selectedProp={filterType}\n                setSelected={setFilterType}\n                placeholderText='filter'\n                toggleIcon={<FilterIcon />}\n              />\n            </FlexItem>\n          </InputGroupItem>\n          <InputGroupItem>\n            <FlexItem>{Filter}</FlexItem>\n          </InputGroupItem>\n        </InputGroup>\n      </FlexItem>\n      <Hide hide={!(accountId !== '' || orgId !== '' || selectedStatuses.length)}>\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Status'>\n            {selectedStatuses.map((status) => (\n              <Chip\n                key={status}\n                onClick={() => deleteItem(status, selectedStatuses, setSelectedStatuses)}\n              >\n                {status}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {orgId !== '' && (\n            <ChipGroup categoryName='Org ID'>\n              <Chip key='org_id_chip' onClick={() => setOrgId('')}>\n                {orgId}\n              </Chip>\n            </ChipGroup>\n          )}\n          {accountId !== '' && (\n            <ChipGroup categoryName='Account ID'>\n              <Chip key='account_id_chip' onClick={() => setAccountId('')}>\n                {accountId}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedAccountId !== '' && accountId !== '') ||\n            (debouncedOrgId !== '' && orgId !== '') ||\n            !!selectedStatuses?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default AdminTaskFilters;\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  BanIcon,\n  ClockIcon,\n} from '@patternfly/react-icons';\nimport { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport StatusText from '../../../components/StatusText/StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n} from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\nimport { AdminTask } from '../../../services/AdminTasks/AdminTaskApi';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\n\nconst useStyles = createUseStyles({\n  spinner: {\n    animationDuration: '6s !important',\n    margin: '-3px 0',\n  },\n  red: {\n    color: red,\n    fill: red,\n  },\n  green: {\n    color: green,\n    fill: green,\n  },\n  gold: {\n    color: gold,\n    fill: gold,\n  },\n});\n\ninterface Props {\n  status: AdminTask['status'];\n}\n\nconst StatusIcon = ({ status }: Props) => {\n  const classes = useStyles();\n\n  switch (status) {\n    case 'running':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <Spinner size='md' className={classes.spinner} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='blue'>Running</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'failed':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon className={classes.red} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='red'>Failed</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'completed':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon className={classes.green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Completed</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'canceled':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <BanIcon className={classes.red} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='red'>Canceled</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'pending':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ClockIcon className={classes.gold} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='gold'>Pending</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import {\n  Bullseye,\n  Modal,\n  ModalVariant,\n  Spinner,\n  Tab,\n  TabContent,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { createRef, useEffect, useMemo, useState } from 'react';\nimport { AdminTask } from '../../../../services/AdminTasks/AdminTaskApi';\nimport AdminTaskInfo from './components/AdminTaskInfo';\nimport ReactJson from 'react18-json-view';\nimport Hide from '../../../../components/Hide/Hide';\nimport { useFetchAdminTaskQuery } from '../../../../services/AdminTasks/AdminTaskQueries';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ADMIN_TASKS_ROUTE } from '../../../../Routes/useTabbedRoutes';\nimport useRootPath from '../../../../Hooks/useRootPath';\n\nconst useStyles = createUseStyles({\n  jsonView: {\n    fontSize: '14px',\n  },\n});\n\nexport interface TabData {\n  title: string;\n  data: object;\n  contentRef: React.RefObject<HTMLElement>;\n}\n\nconst ViewPayloadModal = () => {\n  const { taskUUID: uuid } = useParams();\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const rootPath = useRootPath();\n\n  const onClose = () => navigate(`${rootPath}/${ADMIN_TASKS_ROUTE}`);\n\n  const [activeTabKey, setActiveTabKey] = useState<string | number>(0);\n  const detailRef = createRef<HTMLElement>();\n\n  const { isLoading, isFetching, data: adminTask, isError } = useFetchAdminTaskQuery(uuid);\n\n  const handleTabClick = (_, tabIndex: string | number) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    if (isError) {\n      onClose();\n    }\n  }, [isError]);\n\n  const tabs = useMemo(() => {\n    const tabs: TabData[] = [];\n\n    if (!adminTask) {\n      return tabs;\n    }\n\n    if (adminTask.payload) {\n      tabs.push({\n        title: 'Payload',\n        data: adminTask.payload,\n        contentRef: createRef<HTMLElement>(),\n      });\n    }\n\n    switch (adminTask.typename) {\n      case 'snapshot': {\n        const pulp = adminTask.pulp;\n        if (pulp) {\n          if (pulp.sync) {\n            tabs.push({\n              title: 'Sync',\n              data: pulp.sync,\n              contentRef: createRef<HTMLElement>(),\n            });\n          }\n          if (pulp.distribution) {\n            tabs.push({\n              title: 'Distribution',\n              data: pulp.distribution,\n              contentRef: createRef<HTMLElement>(),\n            });\n          }\n          if (pulp.publication) {\n            tabs.push({\n              title: 'Publication',\n              data: pulp.publication,\n              contentRef: createRef<HTMLElement>(),\n            });\n          }\n        }\n        break;\n      }\n    }\n    return tabs;\n  }, [adminTask?.uuid, isFetching]);\n\n  const actionTakingPlace = isFetching && !!adminTask;\n  const showLoading = isLoading || !adminTask;\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      ouiaId='task_details'\n      ouiaSafe={!actionTakingPlace}\n      aria-label='Task details'\n      isOpen\n      onClose={onClose}\n      header={\n        <Hide hide={isLoading}>\n          <Tabs\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n            aria-label='Task tabs'\n            ouiaId='task-tabs'\n          >\n            {[\n              <Tab\n                key='taskDetails'\n                title={<TabTitleText>Task details</TabTitleText>}\n                aria-label='Task details'\n                ouiaId='task-details'\n                eventKey={0}\n                tabContentRef={detailRef}\n              />,\n              ...tabs.map(({ title, contentRef }, key) => (\n                <Tab\n                  key={title + key}\n                  eventKey={title}\n                  aria-label={title}\n                  ouiaId={title}\n                  tabContentRef={contentRef}\n                  title={<TabTitleText>{title}</TabTitleText>}\n                />\n              )),\n            ]}\n          </Tabs>\n        </Hide>\n      }\n    >\n      <Hide hide={!showLoading}>\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      </Hide>\n      <Hide hide={showLoading}>\n        <TabContent aria-label='Task details' eventKey={0} id='task-details' ref={detailRef}>\n          {/* Hide \"isLoading\" checks if adminTask is not null */}\n          <AdminTaskInfo adminTask={adminTask as AdminTask} />\n        </TabContent>\n        {tabs.map(({ title, data, contentRef }, index) => (\n          <TabContent\n            key={index}\n            eventKey={title}\n            aria-label={title}\n            id={title}\n            className={classes.jsonView}\n            ref={contentRef}\n            hidden\n          >\n            <ReactJson src={data} enableClipboard theme='atom' />\n          </TabContent>\n        ))}\n      </Hide>\n    </Modal>\n  );\n};\n\nexport default ViewPayloadModal;\n","import {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n} from '@patternfly/react-core';\nimport { AdminTask } from '../../../../../services/AdminTasks/AdminTaskApi';\nimport { formatDate } from '../../../AdminTaskTable';\n\nexport interface AdminTaskInfoProps {\n  adminTask: AdminTask;\n}\nconst AdminTaskInfo = ({ adminTask }: AdminTaskInfoProps) => (\n  <DescriptionList>\n    <DescriptionListGroup>\n      <DescriptionListTerm>UUID</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.uuid}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Account ID</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.account_id ? adminTask.account_id : 'Unknown; repository configuration deleted'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Org ID</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.org_id}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Type</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.typename}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Status</DescriptionListTerm>\n      <DescriptionListDescription>{adminTask.status}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Queued At</DescriptionListTerm>\n      <DescriptionListDescription>{formatDate(adminTask.queued_at)}</DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Started At</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.started_at ? formatDate(adminTask.started_at) : 'Not started'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Finished At</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.finished_at ? formatDate(adminTask.finished_at) : 'Not finished'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n    <DescriptionListGroup>\n      <DescriptionListTerm>Error</DescriptionListTerm>\n      <DescriptionListDescription>\n        {adminTask.error ? adminTask.error : 'None'}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n  </DescriptionList>\n);\n\nexport default AdminTaskInfo;\n","import {\n  Bullseye,\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n} from '@patternfly/react-core';\nimport {\n  ActionsColumn,\n  IAction,\n  Table /* data-codemods */,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport { useCallback, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport {\n  ContentItem,\n  FilterData,\n  IntrospectRepositoryRequestItem,\n} from '../../services/Content/ContentApi';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  useBulkDeleteContentItemMutate,\n  useContentListQuery,\n  useDeleteContentItemMutate,\n  useIntrospectRepositoryMutate,\n  useRepositoryParams,\n} from '../../services/Content/ContentQueries';\nimport ContentListFilters from './components/ContentListFilters';\nimport Hide from '../../components/Hide/Hide';\nimport EmptyTableState from '../../components/EmptyTableState/EmptyTableState';\nimport { useQueryClient } from 'react-query';\nimport StatusIcon from './components/StatusIcon';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport PackageCount from './components/PackageCount';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport dayjs from 'dayjs';\nimport { Outlet, useNavigate, useOutletContext } from 'react-router-dom';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  mainContainer100Height: {\n    composes: ['$mainContainer'], // This extends another class within this stylesheet\n    minHeight: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n  checkboxMinWidth: {\n    minWidth: '45px!important',\n  },\n});\n\nconst perPageKey = 'contentListPerPage';\n\nconst ContentListTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const { rbac, features } = useAppContext();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [checkedRepositories, setCheckedRepositories] = useState(new Set<string>());\n\n  const [filterData, setFilterData] = useState<FilterData>({\n    searchQuery: '',\n    versions: [],\n    arches: [],\n    statuses: [],\n  });\n\n  const clearFilters = () =>\n    setFilterData({ searchQuery: '', versions: [], arches: [], statuses: [] });\n\n  const notFiltered =\n    !filterData.arches?.length &&\n    filterData.searchQuery === '' &&\n    !filterData.versions?.length &&\n    !filterData.statuses?.length;\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const columnSortAttributes = [\n    'name',\n    'distribution_arch',\n    'distribution_versions',\n    'package_count',\n    'last_introspection_time',\n    'status',\n  ];\n\n  const sortString = (): string =>\n    columnSortAttributes[activeSortIndex] + ':' + activeSortDirection;\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useContentListQuery(page, perPage, filterData, sortString());\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeleteContentItemMutate(\n    queryClient,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  const { mutateAsync: introspectRepository, isLoading: isIntrospecting } =\n    useIntrospectRepositoryMutate(queryClient, page, perPage, filterData, sortString());\n\n  const introspectRepoForUuid = (uuid: string): Promise<void> =>\n    introspectRepository({ uuid: uuid, reset_count: true } as IntrospectRepositoryRequestItem);\n\n  const { mutateAsync: deleteItems, isLoading: isDeletingItems } = useBulkDeleteContentItemMutate(\n    queryClient,\n    checkedRepositories,\n    page,\n    perPage,\n    filterData,\n    sortString(),\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace =\n    isDeleting || isFetching || repositoryParamsLoading || isIntrospecting || isDeletingItems;\n\n  const onSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem(perPageKey, newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const sortParams = (columnIndex: number): ThProps['sort'] => ({\n    sortBy: {\n      index: activeSortIndex,\n      direction: activeSortDirection,\n      defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n    },\n    onSort: (_event, index, direction) => {\n      setActiveSortIndex(index);\n      setActiveSortDirection(direction);\n    },\n    columnIndex,\n  });\n\n  const columnHeaders = [\n    'Name',\n    'Architecture',\n    'Versions',\n    'Packages',\n    'Last Introspection',\n    'Status',\n  ];\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const lastIntrospectionDisplay = (time?: string): string =>\n    time === '' || time === undefined ? 'Never' : dayjs(time).fromNow();\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: contentList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const rowActions = useCallback(\n    (rowData: ContentItem): IAction[] => [\n      {\n        isDisabled: actionTakingPlace,\n        title: 'Edit',\n        onClick: () => {\n          navigate(`edit-repository?repoUUIDS=${rowData.uuid}`);\n        },\n      },\n      ...(features?.snapshots?.accessible\n        ? [\n            {\n              isDisabled:\n                actionTakingPlace ||\n                !rowData.snapshot ||\n                !(rowData.snapshot && rowData.last_snapshot_uuid),\n              title:\n                rowData.snapshot && rowData.last_snapshot_uuid\n                  ? 'View all snapshots'\n                  : 'No snapshots yet',\n              onClick: () => {\n                navigate(`${rowData.uuid}/snapshots`);\n              },\n            },\n          ]\n        : []),\n      {\n        isDisabled: actionTakingPlace || rowData?.status == 'Retrying',\n        title: 'Introspect Now',\n        onClick: () => introspectRepoForUuid(rowData?.uuid).then(clearCheckedRepositories),\n      },\n      { isSeparator: true },\n      {\n        title: 'Delete',\n        onClick: () =>\n          deleteItem(rowData?.uuid).then(() => {\n            clearCheckedRepositories();\n            // If this is the last item on a page, go to previous page.\n            if (page > 1 && count / perPage + 1 >= page && (count - 1) % perPage === 0) {\n              setPage(page - 1);\n            }\n          }),\n      },\n    ],\n    [actionTakingPlace, checkedRepositories],\n  );\n\n  const clearCheckedRepositories = () => setCheckedRepositories(new Set<string>());\n\n  // Applied to all repos on current page\n  const selectAllRepos = (_, checked: boolean) => {\n    if (checked) {\n      const newSet = new Set<string>(checkedRepositories);\n      data.data\n        .filter((contentItem) => repoCanBeChecked(contentItem))\n        .forEach((contentItem) => newSet.add(contentItem.uuid));\n      setCheckedRepositories(newSet);\n    } else {\n      const newSet = new Set<string>(checkedRepositories);\n      for (const contentItem of data.data) {\n        newSet.delete(contentItem.uuid);\n      }\n      setCheckedRepositories(newSet);\n    }\n  };\n\n  const repoCanBeChecked = (contentItem: ContentItem) => contentItem.status !== 'Pending';\n\n  const atLeastOneRepoChecked = useMemo(() => checkedRepositories.size >= 1, [checkedRepositories]);\n\n  const areAllReposPending = useMemo(\n    () => data.data.every((contentItem) => !repoCanBeChecked(contentItem)),\n    [data],\n  );\n\n  const areAllReposSelected = useMemo(() => {\n    let atLeastOneSelectedOnPage = false;\n    const allSelectedOrPending = data.data.every((contentItem) => {\n      if (checkedRepositories.has(contentItem.uuid)) {\n        atLeastOneSelectedOnPage = true;\n      }\n      return !repoCanBeChecked(contentItem) || checkedRepositories.has(contentItem.uuid);\n    });\n    // Returns false if all repos on current page are pending (none selected)\n    return allSelectedOrPending && atLeastOneSelectedOnPage;\n  }, [data, checkedRepositories]);\n\n  const onSelectRepo = (uuid: string, value: boolean) => {\n    const newSet = new Set<string>(checkedRepositories);\n    if (value) {\n      newSet.add(uuid);\n    } else {\n      newSet.delete(uuid);\n    }\n    setCheckedRepositories(newSet);\n  };\n\n  const deleteCheckedRepos = () =>\n    deleteItems(checkedRepositories).then(() => {\n      const newMaxPage = Math.ceil((count - checkedRepositories.size) / perPage);\n      if (page > 1 && newMaxPage < page) {\n        setPage(newMaxPage);\n      }\n      clearCheckedRepositories();\n    });\n\n  const itemName = 'custom repositories';\n  const notFilteredBody = 'To get started, create a custom repository';\n\n  const countIsZero = count === 0;\n  const showLoader = countIsZero && notFiltered && !isLoading;\n  return (\n    <>\n      <Outlet context={{ clearCheckedRepositories }} />\n      {showLoader ? (\n        <Bullseye data-ouia-safe={!actionTakingPlace} data-ouia-component-id='content_list_page'>\n          <EmptyTableState\n            notFiltered={notFiltered}\n            clearFilters={clearFilters}\n            itemName={itemName}\n            notFilteredBody={notFilteredBody}\n            notFilteredButton={\n              <ConditionalTooltip\n                content='You do not have the required permissions to perform this action.'\n                show={!rbac?.write}\n                setDisabled\n              >\n                <Button\n                  id='createContentSourceButton'\n                  ouiaId='create_content_source'\n                  variant='primary'\n                  isDisabled={isLoading}\n                  onClick={() => navigate('add-repository')}\n                >\n                  Add repositories\n                </Button>\n              </ConditionalTooltip>\n            }\n          />\n        </Bullseye>\n      ) : (\n        <Grid\n          data-ouia-safe={!actionTakingPlace}\n          data-ouia-component-id='content_list_page'\n          className={countIsZero ? classes.mainContainer100Height : classes.mainContainer}\n        >\n          <Flex className={classes.topContainer}>\n            <ContentListFilters\n              isLoading={isLoading}\n              setFilterData={(values) => {\n                setFilterData(values);\n                setPage(1);\n              }}\n              filterData={filterData}\n              atLeastOneRepoChecked={atLeastOneRepoChecked}\n              numberOfReposChecked={checkedRepositories.size}\n              deleteCheckedRepos={deleteCheckedRepos}\n            />\n            <FlexItem>\n              <Hide hide={countIsZero}>\n                <Pagination\n                  id='top-pagination-id'\n                  widgetId='topPaginationWidgetId'\n                  isDisabled={isLoading}\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  isCompact\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n          <Hide hide={!isLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rows={perPage}\n                numberOfColumns={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={countIsZero || isLoading}>\n            <>\n              <Table\n                aria-label='Custom repositories table'\n                ouiaId='custom_repositories_table'\n                variant='compact'\n              >\n                <Thead>\n                  <Tr>\n                    <Hide hide={!rbac?.write}>\n                      <Th\n                        className={classes.checkboxMinWidth}\n                        select={{\n                          onSelect: selectAllRepos,\n                          isSelected: areAllReposSelected,\n                          isHeaderSelectDisabled: areAllReposPending,\n                        }}\n                      />\n                    </Hide>\n                    {columnHeaders.map((columnHeader, index) => (\n                      <Th key={columnHeader + 'column'} sort={sortParams(index)}>\n                        {columnHeader}\n                      </Th>\n                    ))}\n                    <Th>\n                      <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                    </Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {contentList.map((rowData: ContentItem, index) => {\n                    const {\n                      uuid,\n                      name,\n                      url,\n                      distribution_arch,\n                      distribution_versions,\n                      last_introspection_time,\n                    } = rowData;\n                    return (\n                      <Tr key={uuid}>\n                        <Hide hide={!rbac?.write}>\n                          <Td\n                            select={{\n                              rowIndex: index,\n                              onSelect: (_event, isSelecting) =>\n                                onSelectRepo(rowData.uuid, isSelecting),\n                              isSelected: checkedRepositories.has(rowData.uuid),\n                              isDisabled: !repoCanBeChecked(rowData),\n                            }}\n                          />\n                        </Hide>\n                        <Td>\n                          {name}\n                          <br />\n                          <UrlWithExternalIcon href={url} />\n                        </Td>\n                        <Td>{archesDisplay(distribution_arch)}</Td>\n                        <Td>{versionDisplay(distribution_versions)}</Td>\n                        <Td>\n                          <PackageCount rowData={rowData} />\n                        </Td>\n                        <Td>{lastIntrospectionDisplay(last_introspection_time)}</Td>\n                        <Td>\n                          <StatusIcon rowData={rowData} retryHandler={introspectRepoForUuid} />\n                        </Td>\n                        <Td isActionCell>\n                          <ConditionalTooltip\n                            content={\n                              rowData?.status == 'Pending'\n                                ? 'Introspection is in progress'\n                                : 'You do not have the required permissions to perform this action.'\n                            }\n                            show={!rbac?.write || rowData?.status === 'Pending'}\n                            setDisabled\n                          >\n                            <ActionsColumn items={rowActions(rowData)} />\n                          </ConditionalTooltip>\n                        </Td>\n                      </Tr>\n                    );\n                  })}\n                </Tbody>\n              </Table>\n              <Flex className={classes.bottomContainer}>\n                <FlexItem />\n                <FlexItem>\n                  <Pagination\n                    id='bottom-pagination-id'\n                    widgetId='bottomPaginationWidgetId'\n                    itemCount={count}\n                    perPage={perPage}\n                    page={page}\n                    onSetPage={onSetPage}\n                    variant={PaginationVariant.bottom}\n                    onPerPageSelect={onPerPageSelect}\n                  />\n                </FlexItem>\n              </Flex>\n            </>\n          </Hide>\n          <Hide hide={!countIsZero || isLoading}>\n            <EmptyTableState\n              notFiltered={notFiltered}\n              clearFilters={clearFilters}\n              itemName={itemName}\n              notFilteredBody={notFilteredBody}\n              notFilteredButton={\n                <ConditionalTooltip\n                  content='You do not have the required permissions to perform this action.'\n                  show={!rbac?.write}\n                  setDisabled\n                >\n                  <Button\n                    id='createContentSourceButton'\n                    ouiaId='create_content_source'\n                    variant='primary'\n                    isDisabled={isLoading}\n                    onClick={() => navigate('add-repository')}\n                  >\n                    Add repositories\n                  </Button>\n                </ConditionalTooltip>\n              }\n            />\n          </Hide>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport const useContentListOutletContext = () =>\n  useOutletContext<{ clearCheckedRepositories: () => void }>();\n\nexport default ContentListTable;\n","import {\n  Button,\n  Switch,\n  FileUpload,\n  Form,\n  FormGroup,\n  Modal,\n  ModalVariant,\n  Popover,\n  Radio,\n  Stack,\n  StackItem,\n  TextInput,\n  Tooltip,\n  Alert,\n  FormAlert,\n} from '@patternfly/react-core';\nimport { SelectVariant } from '@patternfly/react-core/deprecated';\nimport {\n  OutlinedQuestionCircleIcon,\n  PlusCircleIcon,\n  MinusCircleIcon,\n} from '@patternfly/react-icons';\nimport { Table /* data-codemods */, Tbody, Td, Tr } from '@patternfly/react-table';\nimport { global_Color_200, global_link_Color } from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  isValidURL,\n  mapFormikToAPIValues,\n  mapValidationData,\n  makeValidationSchema,\n  FormikValues,\n  maxUploadSize,\n  failedFileUpload,\n  getDefaultFormikValues,\n} from './helpers';\nimport useNotification from '../../../../Hooks/useNotification';\nimport ContentValidity from './components/ContentValidity';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useAddContentQuery,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport { RepositoryParamsResponse } from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { isEmpty, isEqual } from 'lodash';\nimport useDeepCompareEffect from '../../../../Hooks/useDeepCompareEffect';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport { useNavigate } from 'react-router-dom';\nimport { useContentListOutletContext } from '../../ContentListTable';\nimport useRootPath from '../../../../Hooks/useRootPath';\nimport { useAppContext } from '../../../../middleware/AppContext';\nimport CustomHelperText from '../../../../components/CustomHelperText/CustomHelperText';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '8px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '8px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  addRepositoryButton: {\n    marginBottom: '24px',\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  removeButton: {\n    display: 'flex!important',\n    justifyContent: 'flex-end',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n  gpgKeyInput: {\n    '& .pf-v5-svg': {\n      marginRight: '10px',\n    },\n  },\n  gpgKeyFormGroup: {\n    paddingBottom: '20px',\n    '& .pf-v5-c-radio': {\n      width: 'auto',\n    },\n  },\n});\n\nconst defaultTouchedState = { name: false, url: false, gpgKey: false };\n\nconst AddContent = () => {\n  const navigate = useNavigate();\n  const rootPath = useRootPath();\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(['']);\n  const { features } = useAppContext();\n  const snapshottingEnabled = useMemo(\n    () => !!features?.snapshots?.enabled && !!features?.snapshots?.accessible,\n    [!!features?.snapshots?.enabled],\n  );\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const formik = useFormik({\n    initialValues: [getDefaultFormikValues({ snapshot: snapshottingEnabled })],\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: [defaultTouchedState],\n    onSubmit: () => undefined,\n  });\n\n  const { clearCheckedRepositories } = useContentListOutletContext();\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n\n  const { fetchGpgKey, isLoading: isFetchingGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const onClose = () => navigate(rootPath);\n\n  const { mutateAsync: addContent, isLoading: isAdding } = useAddContentQuery(\n    queryClient,\n    mapFormikToAPIValues(formik.values),\n  );\n\n  const onSave = () => {\n    addContent().then(() => {\n      onClose();\n      clearCheckedRepositories();\n    });\n  };\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n    setTouchedOnLastItemIfUntouchedAndCollapsed();\n  };\n\n  const updateVariable = (index: number, newValue, callback?: () => void) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData).then(callback);\n  };\n\n  const addRepository = () => {\n    formik.setTouched([...formik.touched, defaultTouchedState]);\n    formik.setValues([\n      ...formik.values.map((vals) => ({ ...vals, expanded: false })),\n      getDefaultFormikValues({ snapshot: snapshottingEnabled }),\n    ]);\n    setChangeVerified(false);\n  };\n\n  const removeRepository = (index: number) => {\n    const newValues = formik.values;\n    newValues.splice(index, 1);\n\n    const newTouched = formik.touched;\n    newTouched.splice(index, 1);\n\n    const newErrors = formik.errors;\n    // This check is because the newErrors may not be present for tests\n    if (newErrors.length) newErrors.splice(index, 1);\n\n    formik.setTouched(newTouched);\n    formik.setErrors(newErrors);\n    formik.setValues(newValues);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikValues,\n  ): 'default' | 'success' | 'error' => {\n    const value = !!formik.values[index]?.[field];\n    const errors = !!formik.errors[index]?.[field];\n    const touched = formik.touched[index]?.[field];\n    switch (true) {\n      case errors && touched:\n        return 'error';\n      case field === 'gpgKey':\n        return 'default';\n      case value && touched:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  // The below sets the item as touched if the user closes the expansion without touching any fields\n  // This is to ensure that the user understands that the item needs attention (and is in error)\n  const setTouchedOnLastItemIfUntouchedAndCollapsed = () => {\n    const lastItem = formik.touched?.length - 1 || 0;\n    const { name, url } = formik.touched[lastItem] || {};\n    if (!name && !url) {\n      const updatedTouched = [...formik.touched];\n      updatedTouched[lastItem] = { ...updatedTouched[lastItem], name: true, url: true };\n      formik.setTouched(updatedTouched);\n    }\n  };\n\n  let debouncedValues = useDebounce(formik.values) || []; // Initial value of []\n\n  const {\n    mutateAsync: validateContentList,\n    data: validationList,\n    isLoading: isValidating,\n  } = useValidateContentList();\n\n  useDeepCompareEffect(() => {\n    // If validate is getting called to often, we could useDeepCompare\n    if (debouncedValues.length !== formik.values.length) debouncedValues = formik.values;\n    const newTouchedValues = [...formik.touched];\n    validateContentList(\n      debouncedValues.map(({ name, url, gpgKey, metadataVerification }, index) => {\n        if (!newTouchedValues[index]?.name && name) {\n          newTouchedValues[index] = { ...newTouchedValues[index], name: true };\n        }\n        if (!newTouchedValues[index]?.url && url) {\n          newTouchedValues[index] = { ...newTouchedValues[index], url: true };\n        }\n        if (!newTouchedValues[index]?.gpgKey && gpgKey) {\n          newTouchedValues[index] = { ...newTouchedValues[index], gpgKey: true };\n        }\n        return {\n          name,\n          url,\n          gpg_key: gpgKey,\n          metadata_verification: metadataVerification,\n        };\n      }),\n    ).then(async (validationData) => {\n      const formikErrors = await formik.validateForm(debouncedValues);\n      const mappedErrorData = mapValidationData(validationData, formikErrors);\n      formik.setErrors(mappedErrorData);\n      setChangeVerified(true);\n      formik.setTouched(newTouchedValues);\n    });\n  }, [debouncedValues, debouncedValues.length]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n      setTouchedOnLastItemIfUntouchedAndCollapsed();\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  const { notify } = useNotification();\n\n  const actionTakingPlace = isFetchingGpgKey || isAdding || isValidating || !changeVerified;\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Add custom repositories'\n      ouiaId='add_custom_repository'\n      ouiaSafe={!actionTakingPlace}\n      help={\n        <Popover\n          headerContent={<div>Add a custom repository</div>}\n          bodyContent={<div>Use this form to enter the values for a new repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Add by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen\n      onClose={onClose}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              isDisabled={!formik.isValid || formik.values.length > 19}\n              className={classes.addRepositoryButton}\n              variant='link'\n              onClick={addRepository}\n              icon={<PlusCircleIcon />}\n              ouiaId='add_row'\n            >\n              Add another repository\n            </Button>\n          </StackItem>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='modal_save'\n              variant='primary'\n              isLoading={actionTakingPlace}\n              isDisabled={\n                !changeVerified ||\n                !formik.isValid ||\n                actionTakingPlace ||\n                formik.values?.length !== debouncedValues?.length\n              }\n              onClick={onSave}\n            >\n              Save\n            </Button>\n            <Button key='cancel' variant='link' onClick={onClose} ouiaId='modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <Table aria-label='Table for repo add modal' ouiaId='add_modal_table'>\n        <Hide hide={createDataLengthOf1}>\n          <Tbody isExpanded={allExpanded}>\n            <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n              <Td\n                className={classes.toggleAction}\n                isActionCell\n                expand={{\n                  rowIndex: 0,\n                  isExpanded: allExpanded,\n                }}\n              />\n              <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n            </Tr>\n          </Tbody>\n        </Hide>\n        {formik.values.map(\n          (\n            {\n              expanded,\n              name,\n              url,\n              arch,\n              gpgKey,\n              versions,\n              gpgLoading,\n              metadataVerification,\n              snapshot,\n            },\n            index,\n          ) => (\n            <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Hide hide={createDataLengthOf1}>\n                <Tr className={classes.colHeader}>\n                  <Td\n                    onClick={() => onToggle(index)}\n                    className={classes.toggleAction}\n                    isActionCell\n                    expand={{\n                      rowIndex: index,\n                      isExpanded: expanded,\n                    }}\n                  />\n                  <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                    {name || 'New content'}\n                  </Td>\n                  <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                    <ContentValidity\n                      touched={formik.touched[index]}\n                      errors={formik.errors[index]}\n                    />\n                  </Td>\n                  <Td dataLabel='removeButton' className={classes.removeButton}>\n                    <Hide hide={formik.values.length === 1}>\n                      <Button\n                        onClick={() => removeRepository(index)}\n                        variant='link'\n                        icon={<MinusCircleIcon />}\n                      >\n                        Remove\n                      </Button>\n                    </Hide>\n                  </Td>\n                </Tr>\n              </Hide>\n              <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n                <Td\n                  colSpan={4}\n                  className={\n                    createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol\n                  }\n                >\n                  <Form>\n                    <Hide hide={!snapshottingEnabled}>\n                      <FormGroup fieldId='snapshot'>\n                        <Switch\n                          id={'snapshot-switch-' + index}\n                          hasCheckIcon\n                          label='Snapshot creation enabled'\n                          labelOff='Snapshot creation disabled'\n                          isChecked={snapshot}\n                          onChange={() => {\n                            updateVariable(index, { snapshot: !snapshot });\n                          }}\n                        />\n                        <Tooltip content='Automatically create daily snapshots of this repository.'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                        <Hide hide={snapshot}>\n                          <FormAlert style={{ paddingTop: '20px' }}>\n                            <Alert\n                              variant='warning'\n                              title='Disabling snapshots might result in a higher risk of losing content or unintentionally modifying it irreversibly.'\n                              isInline\n                              //   isPlain\n                            />\n                          </FormAlert>\n                        </Hide>\n                      </FormGroup>\n                    </Hide>\n                    <FormGroup label='Name' isRequired fieldId='namegroup'>\n                      <TextInput\n                        isRequired\n                        id='name'\n                        name='name'\n                        label='Name'\n                        ouiaId='input_name'\n                        type='text'\n                        validated={getFieldValidation(index, 'name')}\n                        onChange={(_event, value) => {\n                          updateVariable(index, { name: value });\n                        }}\n                        value={name || ''}\n                        placeholder='Enter name'\n                      />\n                      <CustomHelperText\n                        hide={getFieldValidation(index, 'name') === 'default'}\n                        textValue={formik.errors[index]?.name}\n                      />\n                    </FormGroup>\n                    <FormGroup label='URL' isRequired fieldId='url'>\n                      <TextInput\n                        isRequired\n                        type='url'\n                        validated={getFieldValidation(index, 'url')}\n                        onBlur={() => updateArchAndVersion(index)}\n                        onChange={(_event, value) => {\n                          if (url !== value) {\n                            updateVariable(index, { url: value });\n                          }\n                        }}\n                        value={url || ''}\n                        placeholder='https://'\n                        id='url'\n                        name='url'\n                        label='Url'\n                        ouiaId='input_url'\n                      />\n                      <CustomHelperText\n                        hide={getFieldValidation(index, 'url') === 'default'}\n                        textValue={formik.errors[index]?.url}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict architecture'\n                      aria-label='restrict_to_architecture'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package architecture'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='arch'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_architecture'\n                        menuAppendTo={document.body}\n                        toggleId={'archSelection' + index}\n                        options={Object.keys(distributionArches)}\n                        variant={SelectVariant.single}\n                        selectedProp={Object.keys(distributionArches).find(\n                          (key: string) => arch === distributionArches[key],\n                        )}\n                        setSelected={(value) =>\n                          updateVariable(index, { arch: distributionArches[value] })\n                        }\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='Restrict OS version'\n                      aria-label='restrict_to_os_version'\n                      labelIcon={\n                        <Tooltip content='Optional: Select value to restrict package OS version'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='version'\n                    >\n                      <DropdownSelect\n                        ouiaId='restrict_to_os_version'\n                        menuAppendTo={document.body}\n                        toggleId={'versionSelection' + index}\n                        options={Object.keys(distributionVersions)}\n                        variant={SelectVariant.typeaheadMulti}\n                        selectedProp={Object.keys(distributionVersions).filter(\n                          (key: string) => versions?.includes(distributionVersions[key]),\n                        )}\n                        placeholderText={versions?.length ? '' : 'Any version'}\n                        setSelected={(value) => setVersionSelected(value, index)}\n                      />\n                    </FormGroup>\n                    <FormGroup\n                      label='GPG key'\n                      labelIcon={\n                        <Tooltip content='Optional: Add GPG Key file or URL'>\n                          <OutlinedQuestionCircleIcon\n                            className='pf-u-ml-xs'\n                            color={global_Color_200.value}\n                          />\n                        </Tooltip>\n                      }\n                      fieldId='gpgKey'\n                    >\n                      <FileUpload\n                        className={classes.gpgKeyInput}\n                        validated={getFieldValidation(index, 'gpgKey')}\n                        id='gpgKey-uploader'\n                        aria-label='gpgkey_file_to_upload'\n                        type='text'\n                        filenamePlaceholder='Drag a file here or upload one'\n                        textAreaPlaceholder='Paste GPG key or URL here'\n                        value={gpgKeyList[index]}\n                        isLoading={gpgLoading}\n                        spellCheck={false}\n                        onDataChange={(_event, value) => updateGpgKey(index, value)}\n                        onTextChange={(_event, value) => updateGpgKey(index, value)}\n                        onClearClick={() => updateGpgKey(index, '')}\n                        dropzoneProps={{\n                          maxSize: maxUploadSize,\n                          onDropRejected: (files) => failedFileUpload(files, notify),\n                        }}\n                        allowEditingUploadedText\n                        browseButtonText='Upload'\n                      />\n                      <CustomHelperText\n                        hide={getFieldValidation(index, 'gpgKey') === 'default'}\n                        textValue={formik.errors[index]?.gpgKey}\n                      />\n                    </FormGroup>\n                    <Hide hide={!gpgKey}>\n                      <FormGroup\n                        fieldId='metadataVerification'\n                        label='Use GPG key for'\n                        isInline\n                        className={classes.gpgKeyFormGroup}\n                      >\n                        <Radio\n                          id='package-verification-only'\n                          name='package-verification-only'\n                          label='Package verification only'\n                          isChecked={!metadataVerification}\n                          onChange={() => updateVariable(index, { metadataVerification: false })}\n                        />\n                        <ConditionalTooltip\n                          show={validationList?.[index]?.url?.metadata_signature_present === false}\n                          content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                        >\n                          <Radio\n                            id='package-and-repository-verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                        </ConditionalTooltip>\n                      </FormGroup>\n                    </Hide>\n                  </Form>\n                </Td>\n              </Tr>\n            </Tbody>\n          ),\n        )}\n      </Table>\n    </Modal>\n  );\n};\n\nexport default AddContent;\n","import { Flex, FlexItem, Spinner } from '@patternfly/react-core';\nimport { FormikErrors, FormikTouched } from 'formik';\nimport { global_success_color_100, global_danger_color_100 } from '@patternfly/react-tokens';\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  red: { color: red, fontWeight: 'bold', fontSize: '14px' },\n  green: { color: green, fontWeight: 'bold', fontSize: '14px' },\n});\n\ninterface Props {\n  touched?: FormikTouched<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  errors?: FormikErrors<{\n    name: string;\n    url: string;\n    gpgKey: string;\n    gpgLoading: boolean;\n    expanded: boolean;\n  }>;\n  loading?: boolean;\n}\n\nconst ContentValidity = ({ touched, errors, loading }: Props) => {\n  const classes = useStyles();\n  const required = ['name', 'url'];\n  const allTouched = required.every((val) => touched?.[val]);\n  const noErrors = Object.values(errors || {}).every((val) => !val);\n  const hasTouchedError = Object.keys(touched || {})\n    .filter((key) => !!touched?.[key])\n    .some((key) => errors?.[key]);\n\n  switch (true) {\n    case loading:\n      return <Spinner size='md' />;\n    case allTouched && noErrors:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.green}>Valid</span>\n          </FlexItem>\n        </Flex>\n      );\n    case hasTouchedError:\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <span className={classes.red}>Invalid</span>\n          </FlexItem>\n        </Flex>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default ContentValidity;\n","import { isEmpty } from 'lodash';\nimport * as Yup from 'yup';\nimport { FormikErrors } from 'formik';\nimport { ValidationResponse } from '../../../../services/Content/ContentApi';\nimport { NotificationPayload } from '../../../../Hooks/useNotification';\nimport ERROR_CODE from './httpErrorCodes.json';\nimport { AlertVariant } from '@patternfly/react-core';\n\nexport enum ErrorCode {\n  FileInvalidType = 'file-invalid-type',\n  FileTooLarge = 'file-too-large',\n  FileTooSmall = 'file-too-small',\n  TooManyFiles = 'too-many-files',\n}\n\nexport interface FileError {\n  message: string;\n  code: ErrorCode | string;\n}\n\nexport interface FileRejection {\n  file: File;\n  errors: FileError[];\n}\n\nexport interface FormikValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  metadataVerification: boolean;\n  expanded: boolean;\n  snapshot: boolean;\n}\n\nexport const getDefaultFormikValues = (overrides: Partial<FormikValues> = {}): FormikValues => ({\n  name: '',\n  url: '',\n  gpgKey: '',\n  arch: 'any',\n  versions: ['any'],\n  gpgLoading: false,\n  expanded: true,\n  metadataVerification: false,\n  snapshot: false,\n  ...overrides,\n});\n\nexport const REGEX_URL =\n  /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nexport const isValidURL = (val: string) => {\n  if (!val) return false;\n  const regex = new RegExp(REGEX_URL);\n  return val.match(regex);\n};\n\nexport const mapFormikToAPIValues = (formikValues: FormikValues[]) =>\n  formikValues.map(({ name, url, arch, versions, gpgKey, metadataVerification, snapshot }) => ({\n    name,\n    url,\n    distribution_arch: arch,\n    distribution_versions: versions,\n    gpg_key: gpgKey,\n    snapshot,\n    metadata_verification: metadataVerification,\n  }));\n\nconst mapNoMetaDataError = (validationData: ValidationResponse) =>\n  validationData.map(({ url, ...rest }) => ({\n    ...rest,\n    url: {\n      ...url,\n      error:\n        !url?.error && !url?.metadata_present\n          ? `Unable to retrieve YUM Metadata, Recieved HTTP ${url?.http_code}: ${\n              url ? ERROR_CODE[url.http_code] : ''\n            }`\n          : url?.error,\n    },\n  }));\n\nexport const mapValidationData = (\n  validationData: ValidationResponse,\n  formikErrors: FormikErrors<FormikValues | undefined>[],\n) => {\n  const updatedValidationData = mapNoMetaDataError(validationData);\n\n  const errors = updatedValidationData.map(({ name, url, gpg_key: gpgKey }, index: number) => {\n    const hasUrlErrors = url?.error || formikErrors[index]?.url;\n    return {\n      // First apply the errors found in the ValidationAPI\n      ...(name?.error ? { name: name?.error } : {}),\n      ...(url?.error ? { url: url?.error } : {}),\n      ...(!hasUrlErrors && gpgKey?.error ? { gpgKey: gpgKey?.error } : {}),\n      // Overwrite any errors with errors found within the UI itself\n      ...formikErrors[index],\n    };\n  });\n\n  if (errors.every((err) => isEmpty(err))) {\n    return [];\n  }\n\n  return errors;\n};\n\nexport const makeValidationSchema = () => {\n  // This adds the uniqueProperty function to the below schema validation\n  Yup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n      if (\n        this.parent.filter((v) => v !== value).some((v) => v[propertyName] === value[propertyName])\n      ) {\n        throw this.createError({\n          path: `${this.path}.${propertyName}`,\n        });\n      }\n\n      return true;\n    });\n  });\n\n  return Yup.array(\n    Yup.object()\n      .shape({\n        name: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Required'),\n        url: Yup.string().url('Invalid URL').required('Required'),\n      })\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore-next-line\n      .uniqueProperty('name', 'Names must be unique')\n      .uniqueProperty('url', 'Url\\'s must be unique'),\n  );\n};\n\nexport const maxUploadSize = 32000;\n// TODO: check this is working\nexport const failedFileUpload = (\n  files: FileRejection[],\n  notify: (arg: NotificationPayload) => void,\n) => {\n  let description = 'Check the file and try again.';\n  if (files.length != 1) {\n    description = 'Only a single file upload is supported.';\n  } else if (files[0].file.size > maxUploadSize) {\n    description = 'The file is larger than ' + maxUploadSize + ' bytes.';\n  }\n  notify({\n    variant: AlertVariant.danger,\n    title: 'There was an problem uploading the file.',\n    description,\n  });\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport {\n  Button,\n  Chip,\n  ChipGroup,\n  Flex,\n  FlexItem,\n  InputGroup,\n  TextInput,\n  InputGroupItem,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport { SelectVariant } from '@patternfly/react-core/deprecated';\nimport DropdownSelect from '../../../components/DropdownSelect/DropdownSelect';\nimport { FilterIcon, SearchIcon } from '@patternfly/react-icons';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\nimport Hide from '../../../components/Hide/Hide';\nimport { FilterData, RepositoryParamsResponse } from '../../../services/Content/ContentApi';\nimport { useQueryClient } from 'react-query';\nimport { REPOSITORY_PARAMS_KEY } from '../../../services/Content/ContentQueries';\nimport useDebounce from '../../../Hooks/useDebounce';\nimport { createUseStyles } from 'react-jss';\nimport { isEmpty } from 'lodash';\nimport { useAppContext } from '../../../middleware/AppContext';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useNavigate } from 'react-router-dom';\nimport DeleteKebab from '../../../components/DeleteKebab/DeleteKebab';\n\ninterface Props {\n  isLoading?: boolean;\n  setFilterData: (filterData: FilterData) => void;\n  filterData: FilterData;\n  atLeastOneRepoChecked: boolean;\n  numberOfReposChecked: number;\n  deleteCheckedRepos: () => void;\n}\n\nconst useStyles = createUseStyles({\n  chipsContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    paddingTop: '16px',\n  },\n  clearFilters: {\n    marginLeft: '16px',\n  },\n  // Needed to fix styling when \"Add repositories\" button is disabled\n  repositoryActions: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n});\n\nconst statusValues = ['Invalid', 'Pending', 'Unavailable', 'Valid'];\nexport type Filters = 'Name/URL' | 'Version' | 'Architecture' | 'Status';\n\nconst ContentListFilters = ({\n  isLoading,\n  setFilterData,\n  filterData,\n  atLeastOneRepoChecked,\n  numberOfReposChecked,\n  deleteCheckedRepos,\n}: Props) => {\n  const classes = useStyles();\n  const { rbac } = useAppContext();\n  const queryClient = useQueryClient();\n  const navigate = useNavigate();\n  const filters = ['Name/URL', 'Version', 'Architecture', 'Status'];\n  const [filterType, setFilterType] = useState<Filters>('Name/URL');\n  const [versionNamesLabels, setVersionNamesLabels] = useState({});\n  const [archNamesLabels, setArchNamesLabels] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedVersions, setSelectedVersions] = useState<string[]>([]);\n  const [selectedArches, setSelectedArches] = useState<string[]>([]);\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n\n  const { distribution_arches = [], distribution_versions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setSelectedVersions([]);\n    setSelectedArches([]);\n    setSelectedStatuses([]);\n    setFilterData({ searchQuery: '', versions: [], arches: [], statuses: [] });\n  };\n\n  useEffect(() => {\n    // If the filters get cleared at the top level, sense that and clear them here.\n    if (\n      filterData.arches.length === 0 &&\n      filterData.versions.length === 0 &&\n      filterData.statuses.length === 0 &&\n      filterData.searchQuery === '' &&\n      (searchQuery !== '' ||\n        selectedArches.length !== 0 ||\n        selectedVersions.length !== 0 ||\n        selectedStatuses.length !== 0)\n    ) {\n      clearFilters();\n    }\n  }, [filterData]);\n\n  const {\n    searchQuery: debouncedSearchQuery,\n    selectedVersions: debouncedSelectedVersions,\n    selectedArches: debouncedSelectedArches,\n    selectedStatuses: debouncedSelectedStatuses,\n  } = useDebounce({\n    searchQuery,\n    selectedVersions,\n    selectedArches,\n    selectedStatuses,\n  });\n\n  const getLabels = (type: string, names: Array<string>) => {\n    const namesLabels = type === 'arch' ? distribution_arches : distribution_versions;\n\n    const labels: Array<string> = [];\n    names.forEach((name) => {\n      const found = namesLabels.find((v) => v.name === name);\n      if (found) {\n        labels.push(found.label);\n      }\n    });\n    return labels;\n  };\n\n  useEffect(() => {\n    setFilterData({\n      searchQuery: debouncedSearchQuery,\n      versions: getLabels('version', debouncedSelectedVersions),\n      arches: getLabels('arch', debouncedSelectedArches),\n      statuses: debouncedSelectedStatuses,\n    });\n  }, [\n    debouncedSearchQuery,\n    debouncedSelectedVersions,\n    debouncedSelectedArches,\n    debouncedSelectedStatuses,\n  ]);\n\n  const deleteItem = (id: string, chips, setChips) => {\n    const copyOfChips = [...chips];\n    const filteredCopy = copyOfChips.filter((chip) => chip !== id);\n    setChips(filteredCopy);\n  };\n\n  useEffect(() => {\n    if (\n      isEmpty(versionNamesLabels) &&\n      isEmpty(archNamesLabels) &&\n      distribution_arches.length !== 0 &&\n      distribution_versions.length !== 0\n    ) {\n      const arches = {};\n      const versions = {};\n      distribution_arches.forEach((arch) => (arches[arch.name] = arch.label));\n      distribution_versions.forEach((version) => (versions[version.name] = version.label));\n      setVersionNamesLabels(versions);\n      setArchNamesLabels(arches);\n    }\n  }, [distribution_arches, distribution_versions]);\n\n  const Filter = useMemo(() => {\n    switch (filterType) {\n      case 'Name/URL':\n        return (\n          <InputGroupItem isFill>\n            <TextInput\n              isDisabled={isLoading}\n              id='search'\n              ouiaId='filter_search'\n              placeholder='Filter by name/url'\n              value={searchQuery}\n              onChange={(_event, value) => setSearchQuery(value)}\n            />\n            <InputGroupText isDisabled={isLoading} id='search-icon'>\n              <SearchIcon />\n            </InputGroupText>\n          </InputGroupItem>\n        );\n      case 'Version':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter version'\n            toggleId='versionSelect'\n            ouiaId='filter_version'\n            isDisabled={isLoading}\n            options={Object.keys(versionNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedVersions}\n            setSelected={setSelectedVersions}\n            placeholderText='Filter by version'\n          />\n        );\n      case 'Architecture':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter architecture'\n            toggleId='archSelect'\n            ouiaId='filter_arch'\n            isDisabled={isLoading}\n            options={Object.keys(archNamesLabels)}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedArches}\n            setSelected={setSelectedArches}\n            placeholderText='Filter by architecture'\n          />\n        );\n      case 'Status':\n        return (\n          <DropdownSelect\n            toggleAriaLabel='filter status'\n            toggleId='statusSelect'\n            ouiaId='filter_status'\n            isDisabled={isLoading}\n            options={statusValues}\n            variant={SelectVariant.checkbox}\n            selectedProp={selectedStatuses}\n            setSelected={setSelectedStatuses}\n            placeholderText='Filter by status'\n          />\n        );\n      default:\n        return <></>;\n    }\n  }, [\n    filterType,\n    isLoading,\n    searchQuery,\n    versionNamesLabels,\n    selectedVersions,\n    archNamesLabels,\n    selectedArches,\n    selectedStatuses,\n  ]);\n\n  return (\n    <Flex>\n      <FlexItem>\n        <InputGroup>\n          <InputGroupItem>\n            <FlexItem>\n              <DropdownSelect\n                toggleId='filterSelectionDropdown'\n                ouiaId='filter_type'\n                isDisabled={isLoading}\n                options={filters}\n                variant={SelectVariant.single}\n                selectedProp={filterType}\n                setSelected={setFilterType}\n                placeholderText='filter'\n                toggleIcon={<FilterIcon />}\n              />\n            </FlexItem>\n          </InputGroupItem>\n          <InputGroupItem>\n            <FlexItem>{Filter}</FlexItem>\n          </InputGroupItem>\n        </InputGroup>\n      </FlexItem>\n      <FlexItem className={classes.repositoryActions}>\n        <ConditionalTooltip\n          content='You do not have the required permissions to perform this action.'\n          show={!rbac?.write}\n          setDisabled\n        >\n          <Button\n            id='createContentSourceButton'\n            ouiaId='create_content_source'\n            variant='primary'\n            isDisabled={isLoading}\n            onClick={() => navigate('add-repository')}\n          >\n            Add repositories\n          </Button>\n        </ConditionalTooltip>\n        <ConditionalTooltip\n          content='You do not have the required permissions to perform this action.'\n          show={!rbac?.write}\n          setDisabled\n        >\n          <DeleteKebab\n            atLeastOneRepoChecked={atLeastOneRepoChecked}\n            numberOfReposChecked={numberOfReposChecked}\n            deleteCheckedRepos={deleteCheckedRepos}\n            toggleOuiaId='custom_repositories_kebab_toggle'\n          />\n        </ConditionalTooltip>\n      </FlexItem>\n      <Hide\n        hide={\n          !(\n            selectedVersions.length ||\n            selectedArches.length ||\n            selectedStatuses.length ||\n            searchQuery != ''\n          )\n        }\n      >\n        <FlexItem fullWidth={{ default: 'fullWidth' }} className={classes.chipsContainer}>\n          <ChipGroup categoryName='Version'>\n            {selectedVersions.map((version) => (\n              <Chip\n                key={version}\n                onClick={() => deleteItem(version, selectedVersions, setSelectedVersions)}\n              >\n                {version}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Architecture'>\n            {selectedArches.map((arch) => (\n              <Chip key={arch} onClick={() => deleteItem(arch, selectedArches, setSelectedArches)}>\n                {arch}\n              </Chip>\n            ))}\n          </ChipGroup>\n          <ChipGroup categoryName='Status'>\n            {selectedStatuses.map((status) => (\n              <Chip\n                key={status}\n                onClick={() => deleteItem(status, selectedStatuses, setSelectedStatuses)}\n              >\n                {status}\n              </Chip>\n            ))}\n          </ChipGroup>\n          {searchQuery !== '' && (\n            <ChipGroup categoryName='Name/URL'>\n              <Chip key='search_chip' onClick={() => setSearchQuery('')}>\n                {searchQuery}\n              </Chip>\n            </ChipGroup>\n          )}\n          {((debouncedSearchQuery !== '' && searchQuery !== '') ||\n            !!selectedVersions?.length ||\n            !!selectedArches?.length ||\n            !!selectedStatuses?.length) && (\n            <Button className={classes.clearFilters} onClick={clearFilters} variant='link' isInline>\n              Clear filters\n            </Button>\n          )}\n        </FlexItem>\n      </Hide>\n    </Flex>\n  );\n};\n\nexport default ContentListFilters;\n","import {\n  Alert,\n  FileUpload,\n  Form,\n  FormGroup,\n  Radio,\n  TextInput,\n  Switch,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { SelectVariant } from '@patternfly/react-core/deprecated';\nimport { CheckCircleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Table /* data-codemods */, Tbody, Td, Tr } from '@patternfly/react-table';\nimport {\n  global_Color_200,\n  global_success_color_100,\n  global_link_Color,\n} from '@patternfly/react-tokens';\nimport { useFormik } from 'formik';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport {\n  REPOSITORY_PARAMS_KEY,\n  useFetchGpgKey,\n  useValidateContentList,\n} from '../../../../services/Content/ContentQueries';\nimport {\n  ContentItem,\n  EditContentRequest,\n  RepositoryParamsResponse,\n} from '../../../../services/Content/ContentApi';\nimport DropdownSelect from '../../../../components/DropdownSelect/DropdownSelect';\nimport { useQueryClient } from 'react-query';\nimport {\n  failedFileUpload,\n  isValidURL,\n  makeValidationSchema,\n  mapValidationData,\n  maxUploadSize,\n} from '../AddContent/helpers';\nimport ContentValidity from '../AddContent/components/ContentValidity';\nimport { FormikEditValues, mapFormikToEditAPIValues, mapToDefaultFormikValues } from './helpers';\nimport { isEmpty, isEqual } from 'lodash';\nimport ConditionalTooltip from '../../../../components/ConditionalTooltip/ConditionalTooltip';\nimport useNotification from '../../../../Hooks/useNotification';\nimport useDeepCompareEffect from '../../../../Hooks/useDeepCompareEffect';\nimport { useAppContext } from '../../../../middleware/AppContext';\nimport CustomHelperText from '../../../../components/CustomHelperText/CustomHelperText';\n\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  removeSideBorder: {\n    '&:after': {\n      borderLeft: 'none!important',\n    },\n  },\n  toggleAllRow: {\n    composes: ['$removeSideBorder'],\n    cursor: 'pointer',\n    borderBottom: 'none!important',\n    '& td': {\n      color: global_link_Color.value + '!important',\n      padding: '12px 0!important',\n    },\n    '& svg': {\n      fill: global_link_Color.value + '!important',\n      padding: '',\n    },\n  },\n  colHeader: {\n    '& td': {\n      '&:not(:last-child)': { cursor: 'pointer' },\n      padding: '12px 0!important',\n    },\n  },\n  mainContentCol: {\n    composes: ['$removeSideBorder'],\n    padding: '16px 0px 16px 36px!important',\n  },\n  toggleAction: {\n    composes: ['$removeSideBorder'],\n    '& button': {\n      padding: '8px',\n    },\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n  singleContentCol: {\n    padding: '8px 0px 0px !important',\n  },\n  gpgKeyInput: {\n    '& .pf-v5-svg': {\n      marginRight: '10px',\n    },\n  },\n  gpgKeyFormGroup: {\n    paddingBottom: '20px',\n    '& .pf-v5-c-radio': {\n      width: 'auto',\n    },\n  },\n});\nexport interface EditContentProps {\n  values: ContentItem[];\n  setIsLoading: (bool: boolean) => void;\n  setUpdatedValues: (values: EditContentRequest) => void;\n  setIsValid: (bool: boolean) => void;\n}\n\nconst EditContentForm = ({\n  setIsValid,\n  values,\n  setIsLoading,\n  setUpdatedValues,\n}: EditContentProps) => {\n  const initialValues = mapToDefaultFormikValues(values);\n  const [changeVerified, setChangeVerified] = useState(false);\n  const [gpgKeyList, setGpgKeyList] = useState<Array<string>>(\n    initialValues.map(({ gpgKey }) => gpgKey),\n  );\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { features } = useAppContext();\n  const snapshottingEnabled = useMemo(\n    () => !!features?.snapshots?.enabled && !!features?.snapshots?.accessible,\n    [!!features?.snapshots?.enabled],\n  );\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validateOnBlur: false,\n    validateOnChange: false,\n    validationSchema: makeValidationSchema(),\n    initialTouched: values.map(() => ({ name: true, url: true })),\n    onSubmit: () => undefined,\n  });\n\n  const updateGpgKey = (index: number, value: string) => {\n    setChangeVerified(false);\n    const updatedData: Array<string> = [...gpgKeyList];\n    updatedData[index] = value;\n    setGpgKeyList(updatedData);\n  };\n  const { fetchGpgKey, isLoading: isFetchingGpgKey } = useFetchGpgKey();\n\n  const debouncedGpgKeyList = useDebounce(gpgKeyList, 300);\n\n  const updateGpgKeyList = async (list: Array<string>) => {\n    const updatedData = await Promise.all(\n      [...formik.values].map(async (values, index) => {\n        const updateValue = list[index];\n        if (isValidURL(updateValue)) {\n          const result = await fetchGpgKey(updateValue);\n          // If successful\n          if (result !== updateValue) {\n            updateGpgKey(index, result);\n            return {\n              ...values,\n              gpgKey: result,\n              ...(values.gpgKey === '' && !!updateValue\n                ? {\n                    metadataVerification:\n                      !!validationList?.[index]?.url?.metadata_signature_present,\n                  }\n                : {}),\n            };\n          }\n        }\n\n        return {\n          ...values,\n          gpgKey: updateValue,\n          ...(values.gpgKey === '' && !!updateValue\n            ? {\n                metadataVerification: !!validationList?.[index]?.url?.metadata_signature_present,\n              }\n            : {}),\n        };\n      }),\n    );\n\n    formik.setValues(updatedData);\n  };\n\n  const { distribution_arches: distArches = [], distribution_versions: distVersions = [] } =\n    queryClient.getQueryData<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY) || {};\n\n  useEffect(() => {\n    updateGpgKeyList(debouncedGpgKeyList);\n  }, [debouncedGpgKeyList]);\n\n  const { distributionArches, distributionVersions } = useMemo(() => {\n    const distributionArches = {};\n    const distributionVersions = {};\n    distArches.forEach(({ name, label }) => (distributionArches[name] = label));\n    distVersions.forEach(({ name, label }) => (distributionVersions[name] = label));\n    return { distributionArches, distributionVersions };\n  }, [distArches, distVersions]);\n\n  const createDataLengthOf1 = formik.values.length === 1;\n\n  const allExpanded = !formik.values.some(({ expanded }) => !expanded);\n\n  const expandAllToggle = () => {\n    formik.setValues([...formik.values.map((vals) => ({ ...vals, expanded: !allExpanded }))]);\n  };\n\n  const updateVariable = (index: number, newValue) => {\n    setChangeVerified(false);\n    const updatedData = [...formik.values];\n    updatedData[index] = { ...updatedData[index], ...newValue };\n    formik.setValues(updatedData);\n  };\n\n  const getFieldValidation = (\n    index: number,\n    field: keyof FormikEditValues,\n  ): 'default' | 'success' | 'error' => {\n    let hasNotChanged = isEqual(initialValues[index]?.[field], formik.values[index]?.[field]);\n    if (field === 'metadataVerification') {\n      if (!initialValues[index].gpgKey) {\n        hasNotChanged = false;\n      }\n    }\n    const errors = !!formik.errors[index]?.[field];\n    switch (true) {\n      case errors:\n        return 'error';\n      case hasNotChanged || !isEmpty(formik.errors[index]) || !changeVerified:\n        return 'default';\n      case !hasNotChanged:\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const debouncedValues = useDebounce(formik.values);\n\n  const {\n    mutateAsync: validateContentList,\n    data: validationList,\n    isLoading: isValidating,\n  } = useValidateContentList();\n\n  useDeepCompareEffect(() => {\n    validateContentList(\n      debouncedValues.map(({ name, url, gpgKey, metadataVerification, uuid }) => ({\n        name,\n        url,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n        uuid,\n      })),\n    ).then(async (validationData) => {\n      const formikErrors = await formik.validateForm(debouncedValues);\n      const mappedErrorData = mapValidationData(validationData, formikErrors);\n      formik.setErrors(mappedErrorData);\n      setChangeVerified(true);\n    });\n  }, [debouncedValues, values, open]);\n\n  const onToggle = (index: number) => {\n    if (formik.values[index]?.expanded) {\n      updateVariable(index, { ...formik.values[index], expanded: false });\n    } else updateVariable(index, { ...formik.values[index], expanded: true });\n  };\n\n  const updateArchAndVersion = (index: number) => {\n    const url = formik.values[index]?.url;\n    if (\n      isValidURL(url) &&\n      (formik.values[index]?.arch === 'any' || formik.values[index].versions[0] === 'any')\n    ) {\n      const arch =\n        (formik.values[index]?.arch !== 'any' && formik.values[index]?.arch) ||\n        distArches.find(({ name, label }) => url.includes(name) || url.includes(label))?.label ||\n        'any';\n\n      let versions: Array<string> = [];\n      if (formik.values[index]?.versions?.length && formik.values[index].versions[0] !== 'any') {\n        versions = formik.values[index]?.versions;\n      } else {\n        const newVersion = distVersions.find(\n          ({ name, label }) => url.includes(name) || url.includes('/' + label),\n        )?.label;\n        if (newVersion) versions = [newVersion];\n        if (isEmpty(versions)) versions = ['any'];\n      }\n      if (formik.values[index]?.arch !== arch && !isEqual(versions, formik.values[index]?.arch)) {\n        const updatedData = [...formik.values];\n        updatedData[index] = { ...updatedData[index], ...{ arch, versions } };\n        formik.setValues(updatedData);\n      }\n    }\n  };\n\n  const urlOnBlur = (index: number) => {\n    updateArchAndVersion(index);\n  };\n\n  const setVersionSelected = (value: string[], index: number) => {\n    let valueToUpdate = value.map((val) => distributionVersions[val]);\n    if (value.length === 0 || valueToUpdate[value.length - 1] === 'any') {\n      valueToUpdate = ['any'];\n    }\n    if (valueToUpdate.length > 1 && valueToUpdate.includes('any')) {\n      valueToUpdate = valueToUpdate.filter((val) => val !== 'any');\n    }\n\n    updateVariable(index, {\n      versions: valueToUpdate,\n    });\n  };\n\n  const { notify } = useNotification();\n\n  // Tell the parent modal that things are happening\n  const actionTakingPlace = isFetchingGpgKey || isValidating || !changeVerified;\n\n  useEffect(() => {\n    setIsLoading(actionTakingPlace);\n    setIsValid(formik.isValid);\n  }, [actionTakingPlace, formik.isValid]);\n\n  useEffect(() => {\n    setUpdatedValues(mapFormikToEditAPIValues(formik.values));\n  }, [formik.values]);\n\n  return (\n    <Table aria-label='Table for edit modal' ouiaId='edit_modal_table'>\n      <Hide hide={createDataLengthOf1}>\n        <Tbody isExpanded={allExpanded}>\n          <Tr onClick={expandAllToggle} className={classes.toggleAllRow}>\n            <Td\n              className={classes.toggleAction}\n              isActionCell\n              expand={{\n                rowIndex: 0,\n                isExpanded: allExpanded,\n              }}\n            />\n            <Td dataLabel='expand-collapse'>{allExpanded ? 'Collapse all' : 'Expand all'}</Td>\n          </Tr>\n        </Tbody>\n      </Hide>\n      {formik.values.map(\n        (\n          {\n            expanded,\n            name,\n            url,\n            arch,\n            gpgKey,\n            versions,\n            gpgLoading,\n            metadataVerification,\n            snapshot,\n          },\n          index,\n        ) => (\n          <Tbody key={index} isExpanded={createDataLengthOf1 ? undefined : expanded}>\n            <Hide hide={createDataLengthOf1}>\n              <Tr className={classes.colHeader}>\n                <Td\n                  onClick={() => onToggle(index)}\n                  className={classes.toggleAction}\n                  isActionCell\n                  expand={{\n                    rowIndex: index,\n                    isExpanded: expanded,\n                  }}\n                />\n                <Td width={35} onClick={() => onToggle(index)} dataLabel={name}>\n                  {name || 'New content'}\n                </Td>\n                <Td onClick={() => onToggle(index)} dataLabel='validity'>\n                  <ContentValidity touched={formik.touched[index]} errors={formik.errors[index]} />\n                </Td>\n              </Tr>\n            </Hide>\n            <Tr isExpanded={createDataLengthOf1 ? undefined : expanded}>\n              <Td\n                colSpan={4}\n                className={createDataLengthOf1 ? classes.singleContentCol : classes.mainContentCol}\n              >\n                <Form>\n                  <Hide hide={!snapshottingEnabled}>\n                    <FormGroup fieldId='snapshot'>\n                      <Switch\n                        id='snapshot-switch'\n                        hasCheckIcon\n                        label='Snapshot creation enabled'\n                        labelOff='Snapshot creation disabled'\n                        isChecked={snapshot}\n                        onChange={() => {\n                          updateVariable(index, { snapshot: !snapshot });\n                        }}\n                      />\n                      <Tooltip content='Automatically create daily snapshots of this repository.'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                      <Hide hide={snapshot}>\n                        <Alert\n                          variant='warning'\n                          style={{ paddingTop: '10px' }}\n                          title='Disabling snapshots may result in a higher risk of losing content or unintentionally modifying it irreversibly.'\n                          isInline\n                          isPlain\n                        />\n                      </Hide>\n                    </FormGroup>\n                  </Hide>\n                  <FormGroup label='Name' isRequired fieldId='namegroup'>\n                    <TextInput\n                      isRequired\n                      id='name'\n                      name='name'\n                      label='Name'\n                      ouiaId='input_name'\n                      type='text'\n                      validated={getFieldValidation(index, 'name')}\n                      onChange={(_event, value) => {\n                        updateVariable(index, { name: value });\n                      }}\n                      value={name || ''}\n                      placeholder='Enter name'\n                    />\n                    <CustomHelperText\n                      hide={getFieldValidation(index, 'name') === 'default'}\n                      textValue={formik.errors[index]?.name}\n                    />\n                  </FormGroup>\n                  <FormGroup label='URL' isRequired fieldId='url'>\n                    <TextInput\n                      isRequired\n                      type='url'\n                      validated={getFieldValidation(index, 'url')}\n                      onBlur={() => urlOnBlur(index)}\n                      onChange={(_event, value) => {\n                        if (url !== value) {\n                          updateVariable(index, { url: value });\n                        }\n                      }}\n                      value={url || ''}\n                      placeholder='https://'\n                      id='url'\n                      name='url'\n                      label='Url'\n                      ouiaId='input_url'\n                    />\n                    <CustomHelperText\n                      hide={getFieldValidation(index, 'url') === 'default'}\n                      textValue={formik.errors[index]?.url}\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='Restrict architecture'\n                    aria-label='restrict_to_architecture'\n                    labelIcon={\n                      <Tooltip content='Optional: Select value to restrict package architecture'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                    }\n                    fieldId='arch'\n                  >\n                    <DropdownSelect\n                      ouiaId='restrict_to_architecture'\n                      validated={getFieldValidation(index, 'arch')}\n                      menuAppendTo={document.body}\n                      toggleId={'archSelection' + index}\n                      options={Object.keys(distributionArches)}\n                      variant={SelectVariant.single}\n                      selectedProp={Object.keys(distributionArches).find(\n                        (key: string) => arch === distributionArches[key],\n                      )}\n                      setSelected={(value) =>\n                        updateVariable(index, { arch: distributionArches[value] })\n                      }\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='Restrict OS version'\n                    aria-label='restrict_to_os_version'\n                    labelIcon={\n                      <Tooltip content='Optional: Select value to restrict package OS version'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                    }\n                    fieldId='version'\n                  >\n                    <DropdownSelect\n                      ouiaId='restrict_to_os_version'\n                      validated={getFieldValidation(index, 'versions')}\n                      menuAppendTo={document.body}\n                      toggleId={'versionSelection' + index}\n                      options={Object.keys(distributionVersions)}\n                      variant={SelectVariant.typeaheadMulti}\n                      selectedProp={Object.keys(distributionVersions).filter(\n                        (key: string) => versions?.includes(distributionVersions[key]),\n                      )}\n                      placeholderText={versions?.length ? '' : 'Any version'}\n                      setSelected={(value) => setVersionSelected(value, index)}\n                    />\n                  </FormGroup>\n                  <FormGroup\n                    label='GPG key'\n                    labelIcon={\n                      <Tooltip content='Optional: Add GPG Key file or URL'>\n                        <OutlinedQuestionCircleIcon\n                          className='pf-u-ml-xs'\n                          color={global_Color_200.value}\n                        />\n                      </Tooltip>\n                    }\n                    fieldId='gpgKey'\n                  >\n                    <FileUpload\n                      className={classes.gpgKeyInput}\n                      validated={getFieldValidation(index, 'gpgKey')}\n                      id='gpgKey-uploader'\n                      aria-label='gpgkey_file_to_upload'\n                      type='text'\n                      filenamePlaceholder='Drag a file here or upload one'\n                      textAreaPlaceholder='Paste GPG key or URL here'\n                      value={gpgKeyList[index]}\n                      isLoading={gpgLoading}\n                      spellCheck={false}\n                      onDataChange={(_event, value) => updateGpgKey(index, value)}\n                      onTextChange={(_event, value) => updateGpgKey(index, value)}\n                      onClearClick={() => updateGpgKey(index, '')}\n                      dropzoneProps={{\n                        maxSize: maxUploadSize,\n                        onDropRejected: (files) => failedFileUpload(files, notify),\n                      }}\n                      allowEditingUploadedText\n                      browseButtonText='Upload'\n                    />\n                    <CustomHelperText\n                      hide={getFieldValidation(index, 'gpgKey') === 'default'}\n                      textValue={formik.errors[index]?.gpgKey}\n                    />\n                  </FormGroup>\n                  <Hide hide={!gpgKey}>\n                    <FormGroup\n                      fieldId='metadataVerification'\n                      label='Use GPG key for'\n                      isInline\n                      className={classes.gpgKeyFormGroup}\n                    >\n                      <Radio\n                        id='package verification only'\n                        name='package-verification-only'\n                        label='Package verification only'\n                        isChecked={!metadataVerification}\n                        onChange={() => updateVariable(index, { metadataVerification: false })}\n                      />\n                      <ConditionalTooltip\n                        show={validationList?.[index]?.url?.metadata_signature_present === false}\n                        content=\"This repository's metadata is not signed, metadata verification is not possible.\"\n                      >\n                        <>\n                          <Radio\n                            id='Package and metadata verification'\n                            name='package-and-repository-verification'\n                            label='Package and metadata verification'\n                            isChecked={metadataVerification}\n                            onChange={() => updateVariable(index, { metadataVerification: true })}\n                          />\n                          <Hide\n                            hide={getFieldValidation(index, 'metadataVerification') !== 'success'}\n                          >\n                            <CheckCircleIcon style={{ marginLeft: '10px' }} color={green} />\n                          </Hide>\n                        </>\n                      </ConditionalTooltip>\n                    </FormGroup>\n                  </Hide>\n                </Form>\n              </Td>\n            </Tr>\n          </Tbody>\n        ),\n      )}\n    </Table>\n  );\n};\n\nexport default EditContentForm;\n","import {\n  Bullseye,\n  Button,\n  Modal,\n  ModalVariant,\n  Popover,\n  Spinner,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { global_Color_200 } from '@patternfly/react-tokens';\nimport { useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Hide from '../../../../components/Hide/Hide';\nimport {\n  CONTENT_ITEM_KEY,\n  useEditContentQuery,\n  useFetchContent,\n} from '../../../../services/Content/ContentQueries';\nimport { useQueryClient } from 'react-query';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport EditContentForm from './EditContentForm';\nimport { EditContentRequest } from '../../../../services/Content/ContentApi';\nimport { isEqual } from 'lodash';\nimport { mapToContentItemsToEditContentRequest } from './helpers';\nimport { useContentListOutletContext } from '../../ContentListTable';\nimport useRootPath from '../../../../Hooks/useRootPath';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    color: global_Color_200.value,\n  },\n  saveButton: {\n    marginRight: '36px',\n    transition: 'unset!important',\n  },\n});\n\nconst EditContentModal = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const rootPath = useRootPath();\n  const queryClient = useQueryClient();\n  const { search } = useLocation();\n  const [initialLoad, setInitialLoad] = useState(true);\n  const [updatedValues, setUpdatedValues] = useState<EditContentRequest>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const { clearCheckedRepositories } = useContentListOutletContext();\n\n  const uuids = new URLSearchParams(search).get('repoUUIDS')?.split(',') || [];\n\n  const { mutateAsync: editContent, isLoading: isEditing } = useEditContentQuery(\n    queryClient,\n    updatedValues,\n  );\n\n  const onClose = () => navigate(rootPath);\n  const onSave = async () =>\n    editContent().then(() => {\n      onClose();\n      clearCheckedRepositories();\n      queryClient.invalidateQueries(CONTENT_ITEM_KEY);\n    });\n\n  const { data, isError } = useFetchContent(uuids);\n  const values = data ? [data] : [];\n\n  useEffect(() => {\n    if (data) {\n      setUpdatedValues(values); // This has to happen above the initial Load being set\n    }\n    if (isError) {\n      onClose();\n    }\n  }, [isError, !!data]);\n\n  useEffect(() => {\n    if (values.length) {\n      setInitialLoad(false);\n    }\n  }, [values]);\n\n  const valuesHaveChanged = !isEqual(mapToContentItemsToEditContentRequest(values), updatedValues);\n  const actionTakingPlace = isEditing || isLoading || initialLoad;\n\n  return (\n    <Modal\n      position='top'\n      variant={ModalVariant.medium}\n      title='Edit custom repository'\n      ouiaId='edit_custom_repository'\n      ouiaSafe={!actionTakingPlace}\n      help={\n        <Popover\n          headerContent={<div>Edit custom repository</div>}\n          bodyContent={<div>Use this form to edit the values of an existing repository.</div>}\n        >\n          <Button variant='plain' aria-label='Help'>\n            <OutlinedQuestionCircleIcon />\n          </Button>\n        </Popover>\n      }\n      description={\n        <p className={classes.description}>\n          Edit by completing the form. Default values may be provided automatically.\n        </p>\n      }\n      isOpen\n      onClose={onClose}\n      footer={\n        <Stack>\n          <StackItem>\n            <Button\n              className={classes.saveButton}\n              key='confirm'\n              ouiaId='edit_modal_save'\n              variant='primary'\n              isLoading={actionTakingPlace}\n              isDisabled={actionTakingPlace || !valuesHaveChanged || !isValid}\n              onClick={onSave}\n            >\n              {valuesHaveChanged ? 'Save changes' : 'No changes'}\n            </Button>\n            <Button key='cancel' variant='link' onClick={onClose} ouiaId='edit_modal_cancel'>\n              Cancel\n            </Button>\n          </StackItem>\n        </Stack>\n      }\n    >\n      <Hide hide={!initialLoad}>\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      </Hide>\n      <Hide hide={initialLoad}>\n        <EditContentForm\n          setIsValid={setIsValid}\n          values={values}\n          setIsLoading={setIsLoading}\n          setUpdatedValues={setUpdatedValues}\n        />\n      </Hide>\n    </Modal>\n  );\n};\n\nexport default EditContentModal;\n","import { ContentItem, EditContentRequest } from '../../../../services/Content/ContentApi';\n\nexport interface FormikEditValues {\n  name: string;\n  url: string;\n  gpgKey: string;\n  metadataVerification: boolean;\n  arch: string;\n  versions: string[];\n  gpgLoading: boolean;\n  expanded: boolean;\n  uuid: string;\n  snapshot: boolean;\n}\n\nexport const mapFormikToEditAPIValues = (formikValues: FormikEditValues[]): EditContentRequest =>\n  formikValues.map(\n    ({ name, url, arch, versions, gpgKey, metadataVerification, uuid, snapshot }) => ({\n      uuid,\n      name,\n      url,\n      distribution_arch: arch,\n      distribution_versions: versions,\n      gpg_key: gpgKey,\n      metadata_verification: metadataVerification,\n      snapshot,\n    }),\n  );\n\nexport const mapToDefaultFormikValues = (values: ContentItem[]): FormikEditValues[] =>\n  values.map(\n    (\n      {\n        name,\n        url,\n        distribution_arch: arch,\n        distribution_versions: versions,\n        uuid,\n        gpg_key: gpgKey,\n        metadata_verification: metadataVerification,\n        snapshot,\n      },\n      index,\n    ) => ({\n      name,\n      url,\n      arch,\n      versions,\n      gpgKey,\n      gpgLoading: false,\n      metadataVerification,\n      expanded: index + 1 === values.length,\n      uuid,\n      snapshot,\n    }),\n  );\n\nexport const mapToContentItemsToEditContentRequest = (values: ContentItem[]): EditContentRequest =>\n  mapFormikToEditAPIValues(mapToDefaultFormikValues(values));\n","import { Button, Text, Tooltip } from '@patternfly/react-core';\nimport { createUseStyles } from 'react-jss';\nimport { global_disabled_color_100 } from '@patternfly/react-tokens';\nimport { useNavigate } from 'react-router-dom';\n\nimport { ContentItem } from '../../../services/Content/ContentApi';\n\nconst useStyles = createUseStyles({\n  text: {\n    color: global_disabled_color_100.value,\n    width: 'fit-content',\n  },\n  link: {\n    padding: 0,\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n}\n\nconst PackageCount = ({ rowData }: Props) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  if (!rowData.package_count && rowData.status === 'Pending') {\n    return (\n      <Tooltip isContentLeftAligned content='Introspection is in progress'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  if (rowData.status === 'Invalid') {\n    return (\n      <Tooltip isContentLeftAligned content='Repository is invalid.'>\n        <Text className={classes.text}>N/A</Text>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Button\n      ouiaId='package_count_button'\n      variant='link'\n      className={classes.link}\n      onClick={() => navigate(`${rowData.uuid}/packages`)}\n    >\n      {rowData.package_count}\n    </Button>\n  );\n};\n\nexport default PackageCount;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  InputGroupItem,\n  InputGroupText,\n  Modal,\n  ModalVariant,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  Table /* data-codemods */,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100, global_Color_200 } from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../../components/Hide/Hide';\nimport { PackageItem } from '../../../../services/Content/ContentApi';\nimport { useGetPackagesQuery } from '../../../../services/Content/ContentQueries';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport EmptyPackageState from './components/EmptyPackageState';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useRootPath from '../../../../Hooks/useRootPath';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    paddingBottom: '8px',\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n});\n\nconst perPageKey = 'packagePerPage';\n\nexport default function PackageModal() {\n  const classes = useStyles();\n  const { repoUUID: uuid } = useParams();\n  const rootPath = useRootPath();\n  const navigate = useNavigate();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Name', 'Version', 'Release', 'Arch'];\n\n  const columnSortAttributes = ['name', 'version', 'release', 'arch'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetPackagesQuery(uuid as string, page, perPage, debouncedSearchQuery, sortString);\n\n  useEffect(() => {\n    if (isError) {\n      onClose();\n    }\n  }, [isError]);\n\n  const onSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem(perPageKey, newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  const onClose = () => navigate(rootPath);\n\n  const {\n    data: packageList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const loadingOrZeroCount = fetchingOrLoading || !count;\n\n  return (\n    <Modal\n      key={uuid}\n      position='top'\n      hasNoBodyWrapper\n      aria-label='RPM package modal'\n      ouiaId='rpm_package_modal'\n      ouiaSafe={fetchingOrLoading}\n      variant={ModalVariant.medium}\n      title='Packages'\n      description={<p className={classes.description}>View list of packages</p>}\n      isOpen\n      onClose={onClose}\n      footer={\n        <Button key='close' variant='secondary' onClick={onClose}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <InputGroup className={classes.topContainer}>\n            <InputGroupItem>\n              <TextInput\n                id='search'\n                ouiaId='name_search'\n                placeholder='Filter by name'\n                value={searchQuery}\n                onChange={(_event, value) => setSearchQuery(value)}\n              />\n              <InputGroupText id='search-icon'>\n                <SearchIcon />\n              </InputGroupText>\n            </InputGroupItem>\n            <Hide hide={loadingOrZeroCount}>\n              <Pagination\n                id='top-pagination-id'\n                widgetId='topPaginationWidgetId'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                isCompact\n                onPerPageSelect={onPerPageSelect}\n              />\n            </Hide>\n          </InputGroup>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rows={perPage}\n                numberOfColumns={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <Table aria-label='Custom repositories table' ouiaId='packages_table' variant='compact'>\n              <Hide hide={loadingOrZeroCount}>\n                <Thead>\n                  <Tr>\n                    {columnHeaders.map((columnHeader, index) => (\n                      <Th\n                        key={columnHeader + '_column'}\n                        sort={sortParams(index, loadingOrZeroCount)}\n                      >\n                        {columnHeader}\n                      </Th>\n                    ))}\n                  </Tr>\n                </Thead>\n              </Hide>\n              <Tbody>\n                {packageList.map(({ name, version, release, arch }: PackageItem, index: number) => (\n                  <Tr key={name + index}>\n                    <Td>{name}</Td>\n                    <Td>{version}</Td>\n                    <Td>{release}</Td>\n                    <Td>{arch}</Td>\n                  </Tr>\n                ))}\n                <Hide hide={!loadingOrZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </Table>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={loadingOrZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  Button,\n  Bullseye,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { Td, Tr } from '@patternfly/react-table';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    margin: 'auto',\n  },\n});\n\ninterface Props {\n  clearSearch: () => void;\n}\n\nexport default function EmptyPackageState({ clearSearch }: Props) {\n  const classes = useStyles();\n  return (\n    <Tr>\n      <Td colSpan={4}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n            <EmptyStateHeader\n              titleText='No packages match the search criteria'\n              icon={<EmptyStateIcon icon={SearchIcon} />}\n              headingLevel='h2'\n            />\n            <EmptyStateBody>Clear your current search to show more results</EmptyStateBody>\n            <EmptyStateFooter>\n              <Button ouiaId='clear_filters' variant='link' onClick={clearSearch}>\n                Clear search\n              </Button>\n            </EmptyStateFooter>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n}\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  InputGroupItem,\n  InputGroupText,\n  Modal,\n  ModalVariant,\n  Pagination,\n  PaginationVariant,\n  TextInput,\n} from '@patternfly/react-core';\nimport {\n  InnerScrollContainer,\n  Table /* data-codemods */,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  ThProps,\n  Tr,\n} from '@patternfly/react-table';\nimport { global_BackgroundColor_100, global_Color_200 } from '@patternfly/react-tokens';\nimport { useEffect, useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\nimport Hide from '../../../../components/Hide/Hide';\nimport { SnapshotItem } from '../../../../services/Content/ContentApi';\nimport { useFetchContent, useGetSnapshotList } from '../../../../services/Content/ContentQueries';\nimport useDebounce from '../../../../Hooks/useDebounce';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useRootPath from '../../../../Hooks/useRootPath';\nimport EmptyPackageState from '../PackageModal/components/EmptyPackageState';\nimport ChangedArrows from './components/ChangedArrows';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst useStyles = createUseStyles({\n  description: {\n    paddingTop: '12px', // 4px on the title bottom padding makes this the \"standard\" 16 total padding\n    paddingBottom: '8px',\n    color: global_Color_200.value,\n  },\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px',\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n});\n\nconst perPageKey = 'snapshotPerPage';\n\nexport default function SnapshotListModal() {\n  const classes = useStyles();\n  const rootPath = useRootPath();\n  const { repoUUID: uuid = '' } = useParams();\n  const navigate = useNavigate();\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeSortIndex, setActiveSortIndex] = useState<number>(0);\n  const [activeSortDirection, setActiveSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  const columnHeaders = ['Snapshots', 'Change', 'Packages', 'Errata'];\n\n  const columnSortAttributes = ['created_at'];\n\n  const sortString = useMemo(\n    () => columnSortAttributes[activeSortIndex] + ':' + activeSortDirection,\n    [activeSortIndex, activeSortDirection],\n  );\n\n  const debouncedSearchQuery = useDebounce(searchQuery);\n\n  useEffect(() => {\n    setPage(1);\n  }, [debouncedSearchQuery, sortString]);\n\n  const {\n    isLoading,\n    isFetching,\n    isError,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = useGetSnapshotList(uuid as string, page, perPage, debouncedSearchQuery, sortString);\n\n  const { data: contentData } = useFetchContent([uuid]);\n\n  useEffect(() => {\n    if (isError) {\n      onClose();\n    }\n  }, [isError]);\n\n  const onSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    setPerPage(newPerPage);\n    setPage(newPage);\n    localStorage.setItem(perPageKey, newPerPage.toString());\n  };\n\n  const sortParams = (columnIndex: number, isDisabled: boolean): ThProps['sort'] | undefined => {\n    if (isDisabled || !columnSortAttributes[columnIndex]) return;\n    return {\n      sortBy: {\n        index: activeSortIndex,\n        direction: activeSortDirection,\n        defaultDirection: 'asc', // starting sort direction when first sorting a column. Defaults to 'asc'\n      },\n      onSort: (_event, index, direction) => {\n        setActiveSortIndex(index);\n        setActiveSortDirection(direction);\n      },\n      columnIndex,\n    };\n  };\n\n  const onClose = () => navigate(rootPath);\n\n  const {\n    data: snapshotsList = [],\n    meta: { count = 0 },\n  } = data;\n\n  const fetchingOrLoading = isFetching || isLoading;\n\n  const loadingOrZeroCount = fetchingOrLoading || !count;\n\n  return (\n    <Modal\n      key={uuid}\n      position='top'\n      hasNoBodyWrapper\n      aria-label='Snapshot list modal'\n      ouiaId='snapshot_list_modal'\n      ouiaSafe={fetchingOrLoading}\n      variant={ModalVariant.medium}\n      title='Snapshots'\n      description={\n        <p className={classes.description}>\n          View list of snapshots for{' '}\n          {contentData?.name ? <b>{contentData?.name}</b> : 'a repository'}.\n          {/* You may select snapshots to delete them.\n          <br />\n          You may also view the snapshot comparisons <b>here</b>. */}\n        </p>\n      }\n      isOpen\n      onClose={onClose}\n      footer={\n        <Button key='close' variant='secondary' onClick={onClose}>\n          Close\n        </Button>\n      }\n    >\n      <InnerScrollContainer>\n        <Grid className={classes.mainContainer}>\n          <InputGroup className={classes.topContainer}>\n            <InputGroupItem>\n              <TextInput\n                id='search'\n                type='text'\n                ouiaId='name_search'\n                placeholder='Search snapshot'\n                value={searchQuery}\n                onChange={(_, value) => setSearchQuery(value)}\n              />\n              <InputGroupText id='search-icon'>\n                <SearchIcon />\n              </InputGroupText>\n            </InputGroupItem>\n            <Hide hide={loadingOrZeroCount}>\n              <Pagination\n                id='top-pagination-id'\n                widgetId='topPaginationWidgetId'\n                itemCount={count}\n                perPage={perPage}\n                page={page}\n                onSetPage={onSetPage}\n                isCompact\n                onPerPageSelect={onPerPageSelect}\n              />\n            </Hide>\n          </InputGroup>\n          <Hide hide={!fetchingOrLoading}>\n            <Grid className={classes.mainContainer}>\n              <SkeletonTable\n                rows={perPage}\n                numberOfColumns={columnHeaders.length}\n                variant={TableVariant.compact}\n              />\n            </Grid>\n          </Hide>\n          <Hide hide={fetchingOrLoading}>\n            <Table aria-label='snapshot list table' ouiaId='snapshot_list_table' variant='compact'>\n              <Hide hide={loadingOrZeroCount}>\n                <Thead>\n                  <Tr>\n                    {columnHeaders.map((columnHeader, index) => (\n                      <Th\n                        key={columnHeader + '_column'}\n                        sort={sortParams(index, loadingOrZeroCount)}\n                      >\n                        {columnHeader}\n                      </Th>\n                    ))}\n                  </Tr>\n                </Thead>\n              </Hide>\n              <Tbody>\n                {snapshotsList.map(\n                  (\n                    { created_at, content_counts, added_counts, removed_counts }: SnapshotItem,\n                    index: number,\n                  ) => (\n                    <Tr key={created_at + index}>\n                      <Td>{new Date(created_at).toUTCString()}</Td>\n                      <Td>\n                        <ChangedArrows\n                          addedCount={\n                            (added_counts?.['rpm.advisory'] || 0) +\n                            (added_counts?.['rpm.package'] || 0)\n                          }\n                          removedCount={\n                            (removed_counts?.['rpm.advisory'] || 0) +\n                            (removed_counts?.['rpm.package'] || 0)\n                          }\n                        />\n                      </Td>\n                      <Td>{content_counts?.['rpm.package'] || 0}</Td>\n                      <Td>{content_counts?.['rpm.advisory'] || 0}</Td>\n                    </Tr>\n                  ),\n                )}\n                <Hide hide={!loadingOrZeroCount}>\n                  <EmptyPackageState clearSearch={() => setSearchQuery('')} />\n                </Hide>\n              </Tbody>\n            </Table>\n          </Hide>\n          <Flex className={classes.bottomContainer}>\n            <FlexItem />\n            <FlexItem>\n              <Hide hide={loadingOrZeroCount}>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </Hide>\n            </FlexItem>\n          </Flex>\n        </Grid>\n      </InnerScrollContainer>\n    </Modal>\n  );\n}\n","import { LongArrowAltDownIcon, LongArrowAltUpIcon } from '@patternfly/react-icons';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { global_danger_color_100, global_success_color_100 } from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\n\nconst useStyles = createUseStyles({\n  base: {\n    fontWeight: 'bold',\n    alignItems: 'center',\n    display: 'flex',\n    '& svg': {\n      marginRight: '5px',\n    },\n  },\n  red: { extend: 'base', color: red },\n  green: { extend: 'base', color: green },\n});\n\ninterface Props {\n  addedCount: number;\n  removedCount: number;\n}\n\nconst ChangedArrows = ({ addedCount, removedCount }: Props) => {\n  const classes = useStyles();\n  return (\n    <Flex>\n      <FlexItem className={classes.green}>\n        <LongArrowAltUpIcon />\n        {addedCount}\n      </FlexItem>\n      <FlexItem className={classes.red}>\n        <LongArrowAltDownIcon />\n        {removedCount}\n      </FlexItem>\n    </Flex>\n  );\n};\n\nexport default ChangedArrows;\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Popover,\n  Spinner,\n  Stack,\n  StackItem,\n  Tooltip,\n} from '@patternfly/react-core';\nimport StatusText from '../../../components/StatusText/StatusText';\nimport {\n  global_danger_color_100,\n  global_success_color_100,\n  global_warning_color_100,\n} from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { ContentItem } from '../../../services/Content/ContentApi';\nimport ConditionalTooltip from '../../../components/ConditionalTooltip/ConditionalTooltip';\nimport { useAppContext } from '../../../middleware/AppContext';\ndayjs.extend(relativeTime);\n\nconst red = global_danger_color_100.value;\nconst green = global_success_color_100.value;\nconst gold = global_warning_color_100.value;\n\nconst useStyles = createUseStyles({\n  spinner: {\n    animationDuration: '6s !important',\n    margin: '-3px 0',\n  },\n});\n\ninterface Props {\n  rowData: ContentItem;\n  retryHandler?: (string) => Promise<void>;\n}\n\ninterface DescriptionProps {\n  error?: string;\n  count?: number;\n  time?: string;\n}\n\ninterface FooterProps {\n  retryHandler?: (string) => Promise<void>;\n  uuid: string;\n}\n\nconst PopoverDescription = ({ error, count, time }: DescriptionProps) => {\n  const timeText = time === '' || time === undefined ? 'Never' : dayjs(time).fromNow();\n  return (\n    <div>\n      {error}\n      <Flex>\n        <Stack className='pf-u-mt-sm'>\n          <StackItem className='pf-u-font-weight-bold'>Last introspection</StackItem>\n          <StackItem> {timeText} </StackItem>\n        </Stack>\n        <Stack className='pf-u-mt-sm'>\n          <StackItem className='pf-u-font-weight-bold'>Failed attempts</StackItem>\n          <StackItem> {count} </StackItem>\n        </Stack>\n      </Flex>\n    </div>\n  );\n};\n\nconst PopoverFooter = ({ retryHandler, uuid }: FooterProps) => {\n  const { rbac } = useAppContext();\n  return (\n    <Flex>\n      <ConditionalTooltip\n        content='You do not have the required permissions to perform this action.'\n        show={!rbac?.write}\n        setDisabled\n      >\n        <Button variant='link' isInline onClick={() => (retryHandler ? retryHandler(uuid) : null)}>\n          Retry\n        </Button>\n      </ConditionalTooltip>\n    </Flex>\n  );\n};\n\nconst StatusIcon = ({\n  rowData: {\n    uuid,\n    status,\n    failed_introspections_count: failedIntrospectionsCount,\n    last_introspection_time: lastIntrospectionTime,\n    last_introspection_error: error,\n  },\n  retryHandler,\n}: Props) => {\n  const classes = useStyles();\n\n  switch (status) {\n    case 'Valid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <CheckCircleIcon color={green} />\n          </FlexItem>\n          <FlexItem>\n            <StatusText color='green'>Valid</StatusText>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Invalid':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationCircleIcon color={red} />\n          </FlexItem>\n          <FlexItem>\n            <Popover\n              aria-label='invalid popover'\n              alertSeverityVariant='danger'\n              headerContent='Invalid'\n              headerIcon={<ExclamationCircleIcon />}\n              bodyContent={\n                <PopoverDescription\n                  error={error}\n                  count={failedIntrospectionsCount}\n                  time={lastIntrospectionTime}\n                />\n              }\n              position='left'\n              footerContent={<PopoverFooter retryHandler={retryHandler} uuid={uuid} />}\n            >\n              <Button variant='link' isInline>\n                <StatusText color='red' isLink>\n                  Invalid\n                </StatusText>\n              </Button>\n            </Popover>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Unavailable':\n      return (\n        <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n          <FlexItem spacer={{ default: 'spacerSm' }}>\n            <ExclamationTriangleIcon color={gold} />\n          </FlexItem>\n          <FlexItem>\n            <Popover\n              aria-label='unavailable popover'\n              alertSeverityVariant='warning'\n              headerContent='Unavailable'\n              headerIcon={<ExclamationTriangleIcon />}\n              bodyContent={\n                <PopoverDescription\n                  error={error}\n                  count={failedIntrospectionsCount}\n                  time={lastIntrospectionTime}\n                />\n              }\n              position='left'\n              footerContent={<PopoverFooter retryHandler={retryHandler} uuid={uuid} />}\n            >\n              <StatusText color='gold' isLink>\n                Unavailable\n              </StatusText>\n            </Popover>\n          </FlexItem>\n        </Flex>\n      );\n    case 'Pending':\n      return (\n        <Tooltip position='top-start' content='Repository is being introspected'>\n          <Flex alignContent={{ default: 'alignContentCenter' }} direction={{ default: 'row' }}>\n            <FlexItem spacer={{ default: 'spacerSm' }}>\n              <Spinner size='md' className={classes.spinner} />\n            </FlexItem>\n            <FlexItem>\n              <StatusText color='blue'>In progress</StatusText>\n            </FlexItem>\n          </Flex>\n        </Tooltip>\n      );\n    default:\n      return <></>;\n  }\n};\n\nexport default StatusIcon;\n","import {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  InputGroup,\n  Pagination,\n  PaginationVariant,\n  Spinner,\n  TextInput,\n  InputGroupItem,\n  InputGroupText,\n} from '@patternfly/react-core';\nimport {\n  Table /* data-codemods */,\n  TableVariant,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@patternfly/react-table';\nimport {\n  global_BackgroundColor_100,\n  global_disabled_color_100,\n  global_disabled_color_200,\n} from '@patternfly/react-tokens';\nimport { useEffect, useState, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components';\n\nimport {\n  usePopularRepositoriesQuery,\n  useDeletePopularRepositoryMutate,\n  useRepositoryParams,\n  useAddPopularRepositoryQuery,\n  useBulkDeleteContentItemMutate,\n} from '../../services/Content/ContentQueries';\nimport {\n  CreateContentRequest,\n  CreateContentRequestItem,\n  FilterData,\n  PopularRepository,\n} from '../../services/Content/ContentApi';\nimport Hide from '../../components/Hide/Hide';\nimport { useQueryClient } from 'react-query';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../../components/ConditionalTooltip/ConditionalTooltip';\nimport UrlWithExternalIcon from '../../components/UrlWithLinkIcon/UrlWithLinkIcon';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport useDebounce from '../../Hooks/useDebounce';\nimport EmptyTableState from '../../components/EmptyTableState/EmptyTableState';\nimport DeleteKebab from '../../components/DeleteKebab/DeleteKebab';\nimport { repoToRequestItem } from './helper';\nimport { AddRepo } from './components/AddRepo';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleAction,\n} from '@patternfly/react-core/deprecated';\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    backgroundColor: global_BackgroundColor_100.value,\n    display: 'flex',\n    flexDirection: 'column',\n    // Remove the below targeted style when removing deprecated components\n    '& .pf-v5-c-dropdown__menu': {\n      marginLeft: '-138px',\n      '& li': {\n        listStyle: 'none',\n      },\n    },\n  },\n\n  topContainer: {\n    justifyContent: 'space-between',\n    padding: '16px 24px', // This is needed\n    height: 'fit-content',\n  },\n  bottomContainer: {\n    justifyContent: 'space-between',\n    height: 'fit-content',\n  },\n  invisible: {\n    opacity: 0,\n  },\n  addRepositoriesButton: {\n    marginLeft: '16px',\n  },\n  checkboxMinWidth: {\n    minWidth: '45px!important',\n  },\n  disabled: {\n    color: global_disabled_color_100.value,\n  },\n  repositoryActions: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  disabledDropdownButton: {\n    color: global_disabled_color_100.value + ' !important',\n    backgroundColor: global_disabled_color_200.value + ' !important',\n  },\n});\n\nconst perPageKey = 'popularRepositoriesperPage';\n\nconst PopularRepositoriesTable = () => {\n  const classes = useStyles();\n  const queryClient = useQueryClient();\n  const { rbac, features } = useAppContext();\n  // Uses urls as map key because uuids don't exist on repositories that haven't been created\n  const [checkedRepositoriesToAdd, setCheckedRepositoriesToAdd] = useState<\n    Map<string, CreateContentRequestItem>\n  >(new Map());\n  // Set of uuids which are required for bulk delete\n  const [checkedRepositoriesToDelete, setCheckedRepositoriesToDelete] = useState<Set<string>>(\n    new Set(),\n  );\n  const [selectedData, setSelectedData] = useState<CreateContentRequest>([]);\n  const [selectedUUID, setSelectedUUID] = useState<string>('');\n\n  const storedPerPage = Number(localStorage.getItem(perPageKey)) || 20;\n  const [page, setPage] = useState(1);\n  const [searchValue, setSearchValue] = useState('');\n  const debouncedSearchValue = useDebounce(searchValue);\n  const [perPage, setPerPage] = useState(storedPerPage);\n  const [isActionOpen, setIsActionOpen] = useState(false);\n\n  const onDropdownToggle = (_, isActionOpen: boolean) => {\n    setIsActionOpen(isActionOpen);\n  };\n\n  const onDropdownFocus = () => {\n    const element = document.getElementById('toggle-add-selected');\n    element?.focus();\n  };\n\n  const onDropdownSelect = () => {\n    setIsActionOpen(false);\n    onDropdownFocus();\n  };\n\n  const {\n    isLoading,\n    error,\n    isError,\n    isFetching,\n    data = { data: [], meta: { count: 0, limit: 20, offset: 0 } },\n  } = usePopularRepositoriesQuery(page, perPage, {\n    searchQuery: !searchValue ? searchValue : debouncedSearchValue,\n  });\n\n  const {\n    isLoading: repositoryParamsLoading,\n    error: repositoryParamsError,\n    isError: repositoryParamsIsError,\n    data: { distribution_versions: distVersions, distribution_arches: distArches } = {\n      distribution_versions: [],\n      distribution_arches: [],\n    },\n  } = useRepositoryParams();\n\n  const { mutateAsync: addContentQuery, isLoading: isAdding } = useAddPopularRepositoryQuery(\n    queryClient,\n    selectedData,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n  );\n\n  const clearCheckedRepositories = () => {\n    setCheckedRepositoriesToAdd(new Map());\n    setCheckedRepositoriesToDelete(new Set());\n  };\n\n  const selectAllRepos = (_, checked: boolean) => {\n    const newSet = new Set(checkedRepositoriesToDelete);\n    const newMap = new Map(checkedRepositoriesToAdd);\n    if (checked) {\n      popularData.forEach((repo) => {\n        if (repo.uuid) {\n          newSet.add(repo.uuid);\n        } else {\n          newMap.set(repo.url, repoToRequestItem(repo));\n        }\n      });\n    } else {\n      popularData.forEach((repo) => {\n        if (repo.uuid) {\n          newSet.delete(repo.uuid);\n        } else {\n          newMap.delete(repo.url);\n        }\n      });\n    }\n    setCheckedRepositoriesToDelete(newSet);\n    setCheckedRepositoriesToAdd(newMap);\n  };\n\n  const atLeastOneRepoToDeleteChecked = useMemo(\n    () => checkedRepositoriesToDelete.size >= 1,\n    [checkedRepositoriesToDelete],\n  );\n  const atLeastOneRepoToAddChecked = useMemo(\n    () => checkedRepositoriesToAdd.size >= 1,\n    [checkedRepositoriesToAdd],\n  );\n\n  const areAllReposSelected = useMemo(\n    () =>\n      data.data.every((repo) => {\n        if (repo.uuid) {\n          return checkedRepositoriesToDelete.has(repo.uuid);\n        } else {\n          return checkedRepositoriesToAdd.has(repo.url);\n        }\n      }),\n    [data, checkedRepositoriesToAdd, checkedRepositoriesToDelete],\n  );\n\n  const onSelectRepo = (repo: PopularRepository, value: boolean) => {\n    if (repo.uuid) {\n      const newSet = new Set(checkedRepositoriesToDelete);\n      if (value) {\n        newSet.add(repo.uuid);\n      } else {\n        newSet.delete(repo.uuid);\n      }\n      setCheckedRepositoriesToDelete(newSet);\n    } else {\n      const newMap = new Map(checkedRepositoriesToAdd);\n      if (value) {\n        newMap.set(repo.url, repoToRequestItem(repo));\n      } else {\n        newMap.delete(repo.url);\n      }\n      setCheckedRepositoriesToAdd(newMap);\n    }\n  };\n\n  useEffect(() => {\n    if (!isFetching) {\n      setSelectedData([]);\n      setSelectedUUID('');\n    }\n  }, [isFetching]);\n\n  useEffect(() => {\n    if (selectedData.length != 0) {\n      addContentQuery().then(\n        () => {\n          setSelectedData([]);\n          clearCheckedRepositories();\n        },\n        () => setSelectedData([]),\n      );\n    }\n  }, [selectedData]);\n\n  useEffect(() => {\n    if (selectedUUID) {\n      deleteItem(selectedUUID).then(clearCheckedRepositories, () => setSelectedUUID(''));\n    }\n  }, [selectedUUID]);\n\n  const archesDisplay = (arch: string) => distArches.find(({ label }) => arch === label)?.name;\n\n  const versionDisplay = (versions: Array<string>): string =>\n    distVersions\n      .filter(({ label }) => versions?.includes(label))\n      .map(({ name }) => name)\n      .join(', ');\n\n  const { mutateAsync: deleteItem, isLoading: isDeleting } = useDeletePopularRepositoryMutate(\n    queryClient,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n  );\n\n  const { mutateAsync: deleteItems, isLoading: isDeletingItems } = useBulkDeleteContentItemMutate(\n    queryClient,\n    checkedRepositoriesToDelete,\n    page,\n    perPage,\n    { searchQuery: debouncedSearchValue } as FilterData,\n    undefined, // sort string\n  );\n\n  // Other update actions will be added to this later.\n  const actionTakingPlace =\n    isDeleting || isFetching || repositoryParamsLoading || isAdding || isDeletingItems;\n\n  const onSetPage = (_, newPage) => setPage(newPage);\n\n  const onPerPageSelect = (_, newPerPage, newPage) => {\n    // Save this value through page refresh for use on next reload\n    localStorage.setItem(perPageKey, newPerPage.toString());\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const addSelected = (snapshot: boolean) => {\n    const request: CreateContentRequest = [];\n    checkedRepositoriesToAdd.forEach((repo) => {\n      request.push({\n        ...repo,\n        snapshot,\n      });\n    });\n    setSelectedData(request);\n  };\n\n  const deleteSelected = async () => {\n    deleteItems(checkedRepositoriesToDelete).then(() => {\n      const newMaxPage = Math.ceil((count - checkedRepositoriesToDelete.size) / perPage);\n      if (page > 1 && newMaxPage < page) {\n        setPage(newMaxPage);\n      }\n      clearCheckedRepositories();\n    });\n  };\n\n  const addRepo = (key: number, repo: PopularRepository, snapshot: boolean) => {\n    const newData: CreateContentRequest = [];\n    newData[key] = repoToRequestItem(repo, snapshot);\n    setSelectedData(newData);\n  };\n\n  const columnHeaders = ['Name', 'Architecture', 'Versions'];\n\n  // Error is caught in the wrapper component\n  if (isError) throw error;\n  if (repositoryParamsIsError) throw repositoryParamsError;\n\n  const {\n    data: popularData = [],\n    meta: { count = 0 },\n  } = data;\n\n  const countIsZero = !data?.data?.length;\n\n  return (\n    <Grid\n      data-ouia-safe={!actionTakingPlace}\n      data-ouia-component-id='popular_repositories_page'\n      className={classes.mainContainer}\n    >\n      <Flex className={classes.topContainer}>\n        <FlexItem>\n          <InputGroup>\n            <InputGroupItem isFill>\n              <TextInput\n                isDisabled={isLoading}\n                type='text'\n                id='search'\n                ouiaId='popular_filter_search'\n                placeholder='Filter by name/url'\n                value={searchValue}\n                onChange={(_event, val) => setSearchValue(val)}\n              />\n              <InputGroupText isDisabled={isLoading} id='search-icon'>\n                <SearchIcon />\n              </InputGroupText>\n            </InputGroupItem>\n            <InputGroupItem>\n              <FlexItem className={classes.repositoryActions}>\n                {/* RBAC popover takes precedence */}\n                <ConditionalTooltip\n                  content={\n                    !rbac?.write\n                      ? 'You do not have the required permissions to perform this action.'\n                      : 'Make a selection below to add multiple repositories'\n                  }\n                  show={!rbac?.write || !atLeastOneRepoToAddChecked}\n                  setDisabled\n                >\n                  {(() => {\n                    const defaultText = atLeastOneRepoToAddChecked\n                      ? `Add ${checkedRepositoriesToAdd.size} repositories`\n                      : 'Add selected repositories';\n                    const withoutSnapshotText = defaultText + ' without snapshotting';\n                    const isDisabled = !rbac?.write || !atLeastOneRepoToAddChecked;\n                    if (features?.snapshots?.enabled && features.snapshots.accessible) {\n                      const className = isDisabled ? classes.disabledDropdownButton : undefined;\n                      return (\n                        <Dropdown\n                          onSelect={onDropdownSelect}\n                          className={classes.addRepositoriesButton}\n                          ouiaId='add-selected-toggle-dropdown'\n                          toggle={\n                            <DropdownToggle\n                              ouiaId='add-selected-dropdown-toggle-no-snap'\n                              className={className}\n                              splitButtonItems={[\n                                <DropdownToggleAction\n                                  key='action'\n                                  data-ouia-component-id='add_checked_repos-with-snap'\n                                  onClick={() => addSelected(true)}\n                                  className={className}\n                                >\n                                  {defaultText}\n                                </DropdownToggleAction>,\n                              ]}\n                              toggleVariant='primary'\n                              splitButtonVariant='action'\n                              onToggle={onDropdownToggle}\n                              isDisabled={isDisabled}\n                            />\n                          }\n                          isOpen={isActionOpen}\n                        >\n                          <DropdownItem\n                            key='action'\n                            component='button'\n                            onClick={() => addSelected(false)}\n                            ouiaId='add-selected-repos-no-snap'\n                          >\n                            {withoutSnapshotText}\n                          </DropdownItem>\n                        </Dropdown>\n                      );\n                    } else {\n                      return (\n                        <Button\n                          onClick={() => addSelected(false)}\n                          className={classes.addRepositoriesButton}\n                          isDisabled={isDisabled}\n                          ouiaId='add_checked_repos'\n                        >\n                          {defaultText}\n                        </Button>\n                      );\n                    }\n                  })()}\n                </ConditionalTooltip>\n                <ConditionalTooltip\n                  content='You do not have the required permissions to perform this action.'\n                  show={!rbac?.write}\n                  setDisabled\n                >\n                  <DeleteKebab\n                    atLeastOneRepoChecked={atLeastOneRepoToDeleteChecked}\n                    numberOfReposChecked={checkedRepositoriesToDelete.size}\n                    deleteCheckedRepos={deleteSelected}\n                    toggleOuiaId='popular_repositories_kebab_toggle'\n                  />\n                </ConditionalTooltip>\n              </FlexItem>\n            </InputGroupItem>\n          </InputGroup>\n        </FlexItem>\n        <FlexItem>\n          <Hide hide={isLoading || countIsZero}>\n            <Pagination\n              id='top-pagination-id'\n              widgetId='topPaginationWidgetId'\n              isDisabled={isLoading}\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={onSetPage}\n              isCompact\n              onPerPageSelect={onPerPageSelect}\n            />\n          </Hide>\n        </FlexItem>\n      </Flex>\n      <Hide hide={!isLoading}>\n        <Grid className={classes.mainContainer}>\n          <SkeletonTable\n            rows={perPage}\n            numberOfColumns={columnHeaders.length}\n            variant={TableVariant.compact}\n          />\n        </Grid>\n      </Hide>\n      <Hide hide={isLoading || countIsZero}>\n        <>\n          <Table\n            aria-label='Popular repositories table'\n            ouiaId='popular_repos_table'\n            variant='compact'\n          >\n            <Thead>\n              <Tr>\n                <Hide hide={!rbac?.write}>\n                  <Th\n                    className={classes.checkboxMinWidth}\n                    select={{\n                      onSelect: selectAllRepos,\n                      isSelected: areAllReposSelected,\n                    }}\n                  />\n                </Hide>\n                {columnHeaders.map((columnHeader) => (\n                  <Th key={columnHeader + 'column'}>{columnHeader}</Th>\n                ))}\n                <Th>\n                  <Spinner size='md' className={actionTakingPlace ? '' : classes.invisible} />\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {popularData.map((repo, key) => {\n                const {\n                  uuid,\n                  existing_name,\n                  suggested_name,\n                  url,\n                  distribution_arch,\n                  distribution_versions,\n                } = repo;\n                return (\n                  <Tr key={suggested_name + uuid}>\n                    <Hide hide={!rbac?.write}>\n                      {/* Never disabled because popular repositories can be both added and deleted */}\n                      <Td\n                        select={{\n                          rowIndex: key,\n                          onSelect: (_event, isSelecting) => onSelectRepo(repo, isSelecting),\n                          isSelected: uuid\n                            ? checkedRepositoriesToDelete.has(uuid)\n                            : checkedRepositoriesToAdd.has(url),\n                        }}\n                      />\n                    </Hide>\n                    <Td>\n                      <>\n                        <Flex direction={{ default: 'row' }}>\n                          <FlexItem>{suggested_name}</FlexItem>\n                          {existing_name && suggested_name !== existing_name && (\n                            <FlexItem className={classes.disabled}>\n                              Current name: {existing_name}\n                            </FlexItem>\n                          )}\n                        </Flex>\n                        <UrlWithExternalIcon href={url} />\n                      </>\n                    </Td>\n                    <Td>{archesDisplay(distribution_arch)}</Td>\n                    <Td>{versionDisplay(distribution_versions)}</Td>\n                    <Td width={10}>\n                      <ConditionalTooltip\n                        content='You do not have the required permissions to perform this action.'\n                        show={!rbac?.write}\n                        setDisabled\n                      >\n                        {uuid ? (\n                          <Button\n                            isDisabled={uuid === selectedUUID || isAdding}\n                            onClick={() => setSelectedUUID(uuid)}\n                            variant='danger'\n                            ouiaId='remove_popular_repo'\n                          >\n                            Remove\n                          </Button>\n                        ) : (\n                          <AddRepo\n                            isDisabled={\n                              selectedData[key]?.url === url ||\n                              isFetching ||\n                              isDeleting ||\n                              isDeletingItems\n                            }\n                            addRepo={(snapshot) => addRepo(key, repo, snapshot)}\n                          />\n                        )}\n                      </ConditionalTooltip>\n                    </Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n          </Table>\n          <Hide hide={isLoading || countIsZero}>\n            <Flex className={classes.bottomContainer}>\n              <FlexItem />\n              <FlexItem>\n                <Pagination\n                  id='bottom-pagination-id'\n                  widgetId='bottomPaginationWidgetId'\n                  itemCount={count}\n                  perPage={perPage}\n                  page={page}\n                  onSetPage={onSetPage}\n                  variant={PaginationVariant.bottom}\n                  onPerPageSelect={onPerPageSelect}\n                />\n              </FlexItem>\n            </Flex>\n          </Hide>\n        </>\n      </Hide>\n      <Hide hide={!countIsZero}>\n        <EmptyTableState\n          clearFilters={() => setSearchValue('')}\n          notFiltered={!debouncedSearchValue} // The second item prevents the clear button from being removed abruptly\n          itemName='popular repositories'\n        />\n      </Hide>\n    </Grid>\n  );\n};\n\nexport default PopularRepositoriesTable;\n","import React, { useState } from 'react';\nimport { Button } from '@patternfly/react-core';\n\nimport { useAppContext } from '../../../middleware/AppContext';\nimport { global_disabled_color_100, global_disabled_color_200 } from '@patternfly/react-tokens';\nimport { createUseStyles } from 'react-jss';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleAction,\n} from '@patternfly/react-core/deprecated';\n\nconst useStyles = createUseStyles({\n  disabledButton: {\n    color: global_disabled_color_100.value + ' !important',\n    backgroundColor: global_disabled_color_200.value + ' !important',\n  },\n});\n\nexport interface Props {\n  isDisabled: boolean;\n  addRepo: (snapshot: boolean) => void;\n}\n\nexport const AddRepo = ({ isDisabled, addRepo }: Props) => {\n  const { features } = useAppContext();\n  const classes = useStyles();\n  const [isActionOpen, setIsActionOpen] = useState(false);\n\n  const onActionToggle = (_, isActionOpen: boolean) => {\n    setIsActionOpen(isActionOpen);\n  };\n\n  const onActionFocus = () => {\n    const element = document.getElementById('toggle-add');\n    element?.focus();\n  };\n\n  const onActionSelect = () => {\n    setIsActionOpen(false);\n    onActionFocus();\n  };\n\n  const dropdownItems = [\n    <DropdownItem\n      data-ouia-component-id='add-popular_repo_without-snapshotting'\n      key='action'\n      component='button'\n      onClick={() => addRepo(false)}\n    >\n      Add without snapshotting\n    </DropdownItem>,\n  ];\n\n  if (features?.snapshots?.enabled && features.snapshots.accessible) {\n    const className = isDisabled ? classes.disabledButton : undefined;\n    return (\n      <Dropdown\n        onSelect={onActionSelect}\n        toggle={\n          <DropdownToggle\n            id='toggle-add'\n            className={className}\n            ouiaId='add_popular_repo_toggle'\n            splitButtonItems={[\n              <DropdownToggleAction\n                data-ouia-component-id='add_popular_repo'\n                key='action'\n                onClick={() => addRepo(true)}\n                className={className}\n              >\n                Add\n              </DropdownToggleAction>,\n            ]}\n            toggleVariant='primary'\n            splitButtonVariant='action'\n            onToggle={onActionToggle}\n            isDisabled={isDisabled}\n          />\n        }\n        isOpen={isActionOpen}\n      >\n        {dropdownItems}\n      </Dropdown>\n    );\n  } else {\n    return (\n      <Button\n        variant='secondary'\n        isDisabled={isDisabled}\n        onClick={() => addRepo(false)}\n        ouiaId='add_popular_repo'\n      >\n        Add\n      </Button>\n    );\n  }\n};\n","import { PopularRepository, CreateContentRequestItem } from '../../services/Content/ContentApi';\n\nexport const repoToRequestItem = (\n  repo: PopularRepository,\n  snapshot = false,\n): CreateContentRequestItem => {\n  const {\n    suggested_name,\n    url,\n    distribution_versions,\n    distribution_arch,\n    gpg_key,\n    metadata_verification,\n  } = repo;\n\n  return {\n    name: suggested_name,\n    url,\n    distribution_versions,\n    distribution_arch,\n    gpg_key,\n    metadata_verification,\n    snapshot,\n  };\n};\n","import { useMemo } from 'react';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\n\nimport { createUseStyles } from 'react-jss';\nimport { last } from 'lodash';\nimport Header from '../components/Header/Header';\nimport QuickStart from '../components/QuickStart/QuickStart';\nimport { TabbedRoute } from './useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  tabs: {\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  tab: {\n    '& button': {\n      padding: 0, // Remove the default button padding\n    },\n  },\n  link: {\n    color: 'inherit', // Receives parent \"Tab\" components color\n    textDecoration: 'none',\n    padding: '8px 16px', // Add it back so that the entire clickable area works\n    '&:focus-visible': {\n      outlineOffset: '-6px',\n    },\n  },\n});\n\nexport default function Layout({ tabs }: { tabs: TabbedRoute[] }) {\n  const { pathname } = useLocation();\n  const classes = useStyles();\n  const currentRoute = useMemo(() => last(pathname.split('/')), [pathname]);\n\n  return (\n    <>\n      <Header />\n      <Tabs className={classes.tabs} ouiaId='routed-tabs' activeKey={currentRoute}>\n        {tabs.map(({ title, route }) => (\n          <Tab\n            className={classes.tab}\n            keyParams={route}\n            key={route}\n            tabIndex={-1} // This prevents the tab from being targetable by accessibility features.\n            eventKey={route || 'content'} // the current route will be \"content\" when there is no route specified (root)\n            aria-label={title}\n            ouiaId={title}\n            title={\n              <Link className={classes.link} accessKey={route} key={route} to={route}>\n                <TabTitleText>{title}</TabTitleText>\n              </Link>\n            }\n          />\n        ))}\n      </Tabs>\n      <QuickStart />\n      {/* Render the app routes via the Layout Outlet */}\n      <Outlet />\n    </>\n  );\n}\n","import { Grid } from '@patternfly/react-core';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { createUseStyles } from 'react-jss';\nimport { ErrorPage } from '../components/Error/ErrorPage';\nimport Layout from './Layout';\nimport { useMemo } from 'react';\nimport useTabbedRoutes, { DEFAULT_ROUTE } from './useTabbedRoutes';\n\nconst useStyles = createUseStyles({\n  containerMargin: {\n    margin: '24px',\n  },\n});\n\nexport default function MainRoutes() {\n  const classes = useStyles();\n  const key = useMemo(() => Math.random(), []);\n  const tabs = useTabbedRoutes();\n\n  return (\n    <Routes key={key}>\n      <Route element={<Layout tabs={tabs} />}>\n        {tabs.map(({ route, Element, ChildRoutes }, key) => (\n          <Route\n            key={key.toString()}\n            path={route}\n            element={\n              <ErrorPage>\n                <Grid className={classes.containerMargin}>\n                  <Element />\n                </Grid>\n              </ErrorPage>\n            }\n          >\n            {ChildRoutes?.map(({ path, Element: ChildRouteElement }, childRouteKey) => (\n              <Route key={childRouteKey} path={path} element={<ChildRouteElement />} />\n            ))}\n          </Route>\n        ))}\n        <Route path='*' element={<Navigate to={DEFAULT_ROUTE} replace />} />\n      </Route>\n    </Routes>\n  );\n}\n","import { useMemo } from 'react';\nimport AdminTaskTable from '../Pages/AdminTaskTable/AdminTaskTable';\nimport ViewPayloadModal from '../Pages/AdminTaskTable/components/ViewPayloadModal/ViewPayloadModal';\nimport ContentListTable from '../Pages/ContentListTable/ContentListTable';\nimport AddContent from '../Pages/ContentListTable/components/AddContent/AddContent';\nimport EditContentModal from '../Pages/ContentListTable/components/EditContentModal/EditContentModal';\nimport PackageModal from '../Pages/ContentListTable/components/PackageModal/PackageModal';\nimport PopularRepositoriesTable from '../Pages/PopularRepositoriesTable/PopularRepositoriesTable';\nimport { useAppContext } from '../middleware/AppContext';\nimport SnapshotListModal from '../Pages/ContentListTable/components/SnapshotListModal/SnapshotListModal';\n\nexport const DEFAULT_ROUTE = '';\nexport const POPULAR_REPOSITORIES_ROUTE = 'popular-repositories';\nexport const ADMIN_TASKS_ROUTE = 'admin-tasks';\n\nexport type TabbedRoute = {\n  title: string;\n  route: string;\n  Element: () => JSX.Element;\n  ChildRoutes?: { path: string; Element: () => JSX.Element }[];\n};\n\nexport default function useTabbedRoutes(): TabbedRoute[] {\n  const { features, rbac } = useAppContext();\n  const hasWrite = rbac?.write;\n\n  // Wrap in a memo to prevent recalculation if values haven't changed.\n  const tabs = useMemo(\n    () => [\n      {\n        title: 'Your repositories',\n        route: DEFAULT_ROUTE,\n        Element: ContentListTable,\n        ChildRoutes: [\n          ...(hasWrite // These child routes are only permitted with rbac?.write access\n            ? [\n                { path: 'edit-repository', Element: EditContentModal },\n                { path: 'add-repository', Element: AddContent },\n              ]\n            : []),\n          ...(features?.admintasks?.enabled && features.snapshots?.accessible\n            ? [{ path: ':repoUUID/snapshots', Element: SnapshotListModal }]\n            : []),\n          { path: ':repoUUID/packages', Element: PackageModal },\n        ],\n      },\n      {\n        title: 'Popular repositories',\n        route: POPULAR_REPOSITORIES_ROUTE,\n        Element: PopularRepositoriesTable,\n      },\n      ...(features?.admintasks?.enabled && features.admintasks?.accessible\n        ? [\n            {\n              title: 'Admin tasks',\n              route: ADMIN_TASKS_ROUTE,\n              Element: AdminTaskTable,\n              ChildRoutes: [{ path: ':taskUUID', Element: ViewPayloadModal }],\n            },\n          ]\n        : []),\n    ],\n    [hasWrite, features],\n  );\n\n  return tabs;\n}\n","import { Tooltip, TooltipProps } from '@patternfly/react-core';\nimport { cloneElement } from 'react';\n\ninterface Props extends TooltipProps {\n  show: boolean;\n  setDisabled?: boolean;\n}\n\nconst ConditionalTooltip = ({ show, children, setDisabled, ...rest }: Props) =>\n  show ? (\n    <Tooltip {...rest}>\n      <div>\n        {children && cloneElement(children, setDisabled ? { isDisabled: setDisabled } : undefined)}\n      </div>\n    </Tooltip>\n  ) : (\n    <div>{children}</div>\n  );\n\nexport default ConditionalTooltip;\n","import { HelperText, HelperTextItem, FormHelperText } from '@patternfly/react-core';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nexport type HelperTextVariant = 'default' | 'indeterminate' | 'warning' | 'success' | 'error';\n\ninterface Props {\n  variant?: HelperTextVariant;\n  textValue?: string;\n  defaultText?: string;\n  hide?: boolean;\n}\n\nconst CustomHelperText = ({\n  hide = false,\n  variant = 'error',\n  textValue = '',\n  defaultText = '',\n}: Props) =>\n  (!!textValue || !!defaultText) && !hide ? (\n    <FormHelperText>\n      <HelperText>\n        <HelperTextItem icon={<ExclamationCircleIcon />} variant={variant}>\n          {textValue ? textValue : defaultText}\n        </HelperTextItem>\n      </HelperText>\n    </FormHelperText>\n  ) : (\n    <></>\n  );\n\nexport default CustomHelperText;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core/deprecated';\nimport { useState } from 'react';\nimport { useAppContext } from '../../middleware/AppContext';\nimport ConditionalTooltip from '../ConditionalTooltip/ConditionalTooltip';\n\ninterface Props {\n  atLeastOneRepoChecked: boolean;\n  numberOfReposChecked: number;\n  deleteCheckedRepos: () => void;\n  toggleOuiaId?: string;\n}\n\nconst DeleteKebab = ({\n  atLeastOneRepoChecked,\n  numberOfReposChecked,\n  deleteCheckedRepos,\n  toggleOuiaId,\n}: Props) => {\n  const { rbac } = useAppContext();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onToggle = (isOpen: boolean) => {\n    setIsOpen(isOpen);\n  };\n\n  const onFocus = () => {\n    const element = document.getElementById('delete-kebab') as HTMLElement;\n    element.focus();\n  };\n\n  const onSelect = () => {\n    setIsOpen(false);\n    onFocus();\n  };\n\n  const dropdownItems = [\n    <ConditionalTooltip\n      key='delete'\n      content='Make a selection below to delete multiple repositories'\n      show={!atLeastOneRepoChecked}\n      setDisabled\n    >\n      <DropdownItem onClick={deleteCheckedRepos}>\n        {atLeastOneRepoChecked\n          ? `Remove ${numberOfReposChecked} repositories`\n          : 'Remove selected repositories'}\n      </DropdownItem>\n    </ConditionalTooltip>,\n  ];\n\n  return (\n    <Dropdown\n      onSelect={onSelect}\n      toggle={\n        <KebabToggle\n          id='delete-kebab'\n          data-ouia-component-id={toggleOuiaId}\n          onToggle={(_event, isOpen: boolean) => onToggle(isOpen)}\n          isDisabled={!rbac?.write}\n        />\n      }\n      isOpen={isOpen}\n      isPlain\n      dropdownItems={dropdownItems}\n      direction='down'\n    />\n  );\n};\n\nexport default DeleteKebab;\n","import {\n  Select,\n  SelectOption,\n  SelectProps,\n  SelectVariant,\n} from '@patternfly/react-core/deprecated';\n\nimport React, { Dispatch, SetStateAction, useState } from 'react';\n\ninterface DropdownSelectProps extends Partial<SelectProps> {\n  options: Array<string>;\n  variant: SelectVariant.single | SelectVariant.checkbox | SelectVariant.typeaheadMulti;\n  selectedProp: any; // eslint-disable-line\n  setSelected: Dispatch<SetStateAction<any>>; // eslint-disable-line\n  toggleIcon?: React.ReactElement;\n  placeholderText?: string | React.ReactNode;\n  isDisabled?: boolean;\n}\n\nconst DropdownSelect = ({\n  options,\n  variant,\n  selectedProp,\n  setSelected,\n  toggleIcon,\n  placeholderText,\n  isDisabled,\n  ...rest\n}: DropdownSelectProps) => {\n  const selected = Array.isArray(selectedProp) ? selectedProp : [selectedProp];\n  const [isOpen, setIsOpen] = useState(false);\n\n  const selectFrom = options.map((option, index) => (\n    <SelectOption key={option + index} id={option} value={option} />\n  ));\n\n  const onSelect = (_event, selection) => {\n    switch (variant) {\n      case SelectVariant.single:\n        setSelected(selection);\n        setIsOpen(false);\n        break;\n      case SelectVariant.typeaheadMulti:\n      case SelectVariant.checkbox:\n        if (Array.isArray(selectedProp)) {\n          if (selected.includes(selection)) {\n            const remaining = selected.filter((item) => item !== selection);\n            setSelected(remaining);\n            break;\n          }\n          setSelected([...selected, selection]);\n          break;\n        }\n        break;\n    }\n  };\n\n  return (\n    <Select\n      isDisabled={isDisabled}\n      variant={variant}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      onToggle={(_event, isOpen) => setIsOpen(isOpen)}\n      placeholderText={placeholderText}\n      isCheckboxSelectionBadgeHidden\n      toggleIcon={toggleIcon}\n      {...rest}\n    >\n      {selectFrom}\n    </Select>\n  );\n};\n\nexport default DropdownSelect;\n","import {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  Button,\n  EmptyStateHeader,\n  EmptyStateFooter,\n} from '@patternfly/react-core';\nimport { SearchIcon, PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  emptyStateContainer: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  emptyStateBody: {\n    marginBottom: '16px',\n  },\n});\n\ninterface Props {\n  notFiltered?: boolean;\n  clearFilters: () => void;\n  itemName: string;\n  notFilteredBody?: string;\n  notFilteredButton?: React.ReactNode;\n}\n\nconst EmptyTableState = ({\n  notFiltered,\n  clearFilters,\n  itemName,\n  notFilteredBody,\n  notFilteredButton,\n}: Props) => {\n  const classes = useStyles();\n  return (\n    <EmptyState variant={EmptyStateVariant.full} className={classes.emptyStateContainer}>\n      <EmptyStateHeader\n        titleText={\n          <>{notFiltered ? `No ${itemName}` : `No ${itemName} match the filter criteria`}</>\n        }\n        icon={<EmptyStateIcon icon={notFiltered ? PlusCircleIcon : SearchIcon} />}\n        headingLevel='h2'\n      />\n      <EmptyStateBody className={classes.emptyStateBody}>\n        {notFiltered ? notFilteredBody : 'Clear all filters to show more results'}\n      </EmptyStateBody>\n      <EmptyStateFooter>\n        {notFiltered ? (\n          notFilteredButton\n        ) : (\n          <Button ouiaId='clear_filters' variant='link' onClick={clearFilters}>\n            Clear all filters\n          </Button>\n        )}\n      </EmptyStateFooter>\n    </EmptyState>\n  );\n};\n\nexport default EmptyTableState;\n","import { ErrorBoundary as _ErrorBoundaryPage } from '@redhat-cloud-services/frontend-components';\n\nconst ErrorBoundaryPage = _ErrorBoundaryPage as unknown as React.FunctionComponent<{\n  children?: React.ReactNode;\n  headerTitle: string;\n  errorTitle?: string;\n  errorDescription?: string;\n}>;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const ErrorPage = ({ children }: Props) => (\n  <ErrorBoundaryPage\n    headerTitle=''\n    errorTitle='Unhandled error'\n    errorDescription='There was a problem trying to process your request'\n  >\n    {children}\n  </ErrorBoundaryPage>\n);\n","import { Text } from '@patternfly/react-core';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { PageHeaderProps as _PageHeaderProps } from '@redhat-cloud-services/frontend-components/PageHeader/PageHeader';\nimport { global_Color_100 } from '@patternfly/react-tokens';\n\nimport { FunctionComponent, ReactElement } from 'react';\nimport { createUseStyles } from 'react-jss';\n\ninterface PageHeaderProps extends _PageHeaderProps {\n  children?: ReactElement | Array<ReactElement>;\n}\n\n// Example of how to extend inaccurately typed imports\nconst PageHeader = _PageHeader as FunctionComponent<PageHeaderProps>;\n\nconst useStyles = createUseStyles({\n  subtext: {\n    color: global_Color_100.value,\n    paddingTop: '8px',\n  },\n});\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <PageHeader>\n      <PageHeaderTitle title='Custom repositories' />\n      <Text className={classes.subtext} ouiaId='custom_repositories_description'>\n        View all custom repositories within your organization.\n      </Text>\n    </PageHeader>\n  );\n}\n","interface Props {\n  hide: boolean;\n  children?: React.ReactNode;\n}\n\nconst Hide = ({ hide, children }: Props) => (hide ? <></> : <>{children}</>);\n\nexport default Hide;\n","import {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Grid,\n  EmptyStateHeader,\n} from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport {\n  PageHeader as _PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components';\nimport { FunctionComponent } from 'react';\n\nconst PageHeader = _PageHeader as unknown as FunctionComponent<{\n  children: React.ReactNode;\n}>;\n\nexport const NoPermissionsPage: React.FunctionComponent = () => (\n  <>\n    <PageHeader>\n      <PageHeaderTitle title='Repositories' />\n    </PageHeader>\n    <Grid style={{ margin: '24px' }}>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateHeader\n          titleText='You do not have access to repositories'\n          icon={<EmptyStateIcon icon={LockIcon} />}\n          headingLevel='h5'\n        />\n        <EmptyStateBody>\n          Contact your organization administrator(s) for more information.\n        </EmptyStateBody>\n      </EmptyState>\n    </Grid>\n  </>\n);\n","import { Button, ExpandableSection, Grid, Spinner, Text } from '@patternfly/react-core';\nimport { global_BackgroundColor_100 } from '@patternfly/react-tokens';\n\nimport { useMemo, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\n\nconst useStyles = createUseStyles({\n  quickstartContainer: {\n    margin: '24px 24px 0',\n    backgroundColor: global_BackgroundColor_100.value,\n  },\n  quickstartSpinner: {\n    margin: '0 0 -4px 5px',\n  },\n  buildCustomButton: {\n    marginTop: '20px',\n    padding: 0,\n    fontWeight: 600,\n  },\n});\n\nconst quickStartExpandedKey = 'QUICKSTART_EXPANDED';\n\nexport default function QuickStart() {\n  const { isBeta, quickStarts } = useChrome();\n  // These values only need to be computed once\n  // So we wrap them in useMemos and give them an empty dependency array to prevent them from being called on every render.\n  const isPreview = useMemo(isBeta, []);\n  const quickStartExpanded = useMemo(\n    () => localStorage.getItem(quickStartExpandedKey) || 'true',\n    [],\n  );\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(quickStartExpanded === 'true');\n  const [quickStartLoading, setQuickStartLoading] = useState(false);\n  const classes = useStyles();\n\n  if (!isPreview) return <></>;\n\n  const onToggle = () =>\n    setIsExpanded((prev) => {\n      localStorage.setItem(quickStartExpandedKey, `${!prev}`);\n      return !prev;\n    });\n\n  const activateQuickStart = async () => {\n    setQuickStartLoading(true);\n    try {\n      await quickStarts?.activateQuickstart('insights-custom-repos');\n      onToggle();\n    } catch (error) {\n      console.warn(error);\n    }\n    setQuickStartLoading(false);\n  };\n\n  return (\n    <Grid className={classes.quickstartContainer}>\n      <ExpandableSection\n        toggleText='Need help getting started with Preview features?'\n        onToggle={onToggle}\n        isExpanded={isExpanded}\n        displaySize='lg'\n        aria-label='quickStart-expansion'\n        data-ouia-component-id='quickstart_expand'\n      >\n        <Text>For help getting started, access the quick start below:</Text>\n        <Button\n          className={classes.buildCustomButton}\n          iconPosition='right'\n          icon={\n            quickStartLoading ? (\n              <Spinner size='md' className={classes.quickstartSpinner} />\n            ) : (\n              <ArrowRightIcon />\n            )\n          }\n          variant='link'\n          ouiaId='quickstart_link'\n          onClick={activateQuickStart}\n          isDisabled={quickStartLoading}\n        >\n          Build an Image with Custom Content\n        </Button>\n      </ExpandableSection>\n    </Grid>\n  );\n}\n","import { createUseStyles } from 'react-jss';\nimport {\n  global_danger_color_200,\n  global_info_color_200,\n  global_success_color_200,\n  global_warning_color_200,\n} from '@patternfly/react-tokens';\n\nconst red = global_danger_color_200.value;\nconst green = global_success_color_200.value;\nconst gold = global_warning_color_200.value;\nconst blue = global_info_color_200.value;\n\ninterface Props {\n  color: 'red' | 'green' | 'gold' | 'blue';\n  isLink?: boolean;\n  children?: React.ReactNode;\n}\n\nconst useStyles = ({ isLink }: Props) =>\n  createUseStyles({\n    fontStyle: {\n      fontWeight: 'bold',\n      fontSize: '14px',\n      ...(isLink\n        ? {\n            textDecoration: 'grey dotted underline',\n            cursor: 'pointer',\n          }\n        : {}),\n    },\n    red: { extend: 'fontStyle', color: red },\n    green: { extend: 'fontStyle', color: green },\n    gold: { extend: 'fontStyle', color: gold },\n    blue: { extend: 'fontStyle', color: blue },\n  });\n\nconst StatusText = (props: Props) => {\n  const classes = useStyles(props)();\n  const { color, children } = props;\n\n  return <span className={classes[color]}>{children}</span>;\n};\n\nexport default StatusText;\n","import { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  link: {\n    alignItems: 'center',\n    display: 'flex',\n    width: 'fit-content', // Prevents overflow of clickable area beyond visible content\n  },\n  icon: {\n    marginLeft: '5px',\n  },\n});\n\ninterface Props {\n  href: string;\n}\n\nconst UrlWithExternalIcon = ({ href }: Props) => {\n  const classes = useStyles();\n  return (\n    <a href={href} className={classes.link} rel='noreferrer' target='_blank'>\n      {href} <ExternalLinkAltIcon className={classes.icon} />\n    </a>\n  );\n};\n\nexport default UrlWithExternalIcon;\n","import { createContext, ReactNode, useContext, useEffect, useState } from 'react';\nimport { Features } from '../services/Features/FeatureApi';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { getRegistry as _getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport PackageJson from '../../package.json';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { useFetchFeaturesQuery } from '../services/Features/FeatureQueries';\nimport { fetchRBAC, Rbac } from './RbacUtils';\n\nconst getRegistry = _getRegistry as unknown as () => { register: ({ notifications }) => void };\nconst { appname } = PackageJson.insights;\n\nexport interface AppContextInterface {\n  rbac?: { read: boolean; write: boolean };\n  features: Features | null;\n  isFetchingFeatures: boolean;\n}\nexport const AppContext = createContext({} as AppContextInterface);\n\nexport const ContextProvider = ({ children }: { children: ReactNode }) => {\n  const [rbac, setRbac] = useState<Rbac | undefined>(undefined);\n  const [features, setFeatures] = useState<Features | null>(null);\n  const chrome = useChrome();\n  const { fetchFeatures, isLoading: isFetchingFeatures } = useFetchFeaturesQuery();\n\n  useEffect(() => {\n    // Get chrome and register app\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer });\n\n    if (chrome && !rbac) {\n      // Get permissions and store them in context\n      chrome.auth.getUser().then(async () => fetchRBAC(appname).then(setRbac));\n    }\n\n    (async () => {\n      const fetchedFeatures = await fetchFeatures();\n      setFeatures(fetchedFeatures);\n    })();\n  }, [!!chrome]);\n\n  return (\n    <AppContext.Provider\n      value={{\n        rbac: rbac\n          ? {\n              read: rbac?.hasPermission('content-sources', 'repositories', 'read'),\n              write: rbac?.hasPermission('content-sources', 'repositories', 'write'),\n            }\n          : undefined,\n        features: features,\n        isFetchingFeatures: isFetchingFeatures,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useAppContext = () => useContext(AppContext);\n","// THIS IS A DIRECT IMPORT FROM insights-common-typescript/packages/insights-common-typescript/src/types/Rbac.ts\n// The original package was not supported in React 18 so we have pulled the needed wrapper methods here.\n\nimport { AccessApi, AccessPagination } from '@redhat-cloud-services/rbac-client';\nimport axios from 'axios';\n\nconst BASE_PATH = '/api/rbac/v1';\n\ntype Verb = string;\ntype What = string;\ntype App = string;\n\ntype WhatPermissions = Array<Verb>;\ntype AppPermissions = Record<What, WhatPermissions>;\nexport type RbacPermission = Record<App, AppPermissions>;\n\nconst anything: Verb | What = '*';\n\nexport class RbacPermissionsBuilder {\n  readonly accessPagination: AccessPagination;\n\n  constructor(accessPagination: AccessPagination) {\n    this.accessPagination = accessPagination;\n  }\n\n  public build(): RbacPermission {\n    if (!this.accessPagination?.data || this.accessPagination.data.length === 0) {\n      return {};\n    }\n\n    const permissions: RbacPermission = {};\n\n    for (const access of this.accessPagination.data) {\n      const [app, what, verb] = access.permission.split(':');\n\n      if (!permissions[app]) {\n        permissions[app] = {};\n      }\n\n      if (!permissions[app][what]) {\n        permissions[app][what] = [];\n      }\n\n      permissions[app][what].push(verb);\n    }\n\n    return permissions;\n  }\n}\n\nexport const fetchRBAC = (appQuery: string): Promise<Rbac> => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const instance = axios.create() as any;\n\n  return new AccessApi(undefined, BASE_PATH, instance)\n    .getPrincipalAccess(appQuery)\n    .then((response) => new RbacPermissionsBuilder(response.data))\n    .then((builder) => new Rbac(builder.build()));\n};\n\nexport class Rbac {\n  private permissions: RbacPermission = {};\n\n  constructor(permissions: RbacPermission) {\n    this.permissions = permissions;\n  }\n\n  public hasPermission(app: App, what: What, verb: Verb): boolean {\n    const appPermission = this.permissions[app];\n    if (!appPermission) {\n      return false;\n    }\n\n    return this.hasAppPermission(appPermission, what, verb);\n  }\n\n  private hasWhatPermission(permissions: WhatPermissions, verb: Verb): boolean {\n    return permissions.includes(verb) || permissions.includes(anything);\n  }\n\n  private hasAppPermission(permissions: AppPermissions, what: What, verb: Verb): boolean {\n    const verbs = permissions[what];\n    const specificPermission = verbs ? this.hasWhatPermission(verbs, verb) : undefined;\n\n    if (specificPermission) {\n      return specificPermission;\n    } else if (what !== anything) {\n      return this.hasAppPermission(permissions, anything, verb);\n    }\n\n    return false;\n  }\n}\n","import axios from 'axios';\nimport { Links, Meta } from '../Content/ContentApi';\n\nexport interface AdminTaskFilterData {\n  statuses: string[];\n  accountId: string;\n  orgId: string;\n}\n\nexport interface PulpData {\n  sync?: Record<string, unknown>;\n  publication?: Record<string, unknown>;\n  distribution?: Record<string, unknown>;\n}\n\nexport interface AdminTask {\n  uuid: string;\n  account_id?: string;\n  org_id: string;\n  typename: string;\n  status: 'running' | 'failed' | 'completed' | 'canceled' | 'pending';\n  queued_at: string;\n  started_at: string;\n  finished_at: string;\n  error: string;\n  payload?: Record<string, unknown>;\n  pulp?: PulpData;\n}\n\nexport type AdminTaskList = AdminTask[];\n\nexport interface AdminTaskListResponse {\n  data: AdminTaskList;\n  links: Links;\n  meta: Meta;\n}\n\nexport const getAdminTasks: (\n  page: number,\n  limit: number,\n  filterData: AdminTaskFilterData,\n  sortBy: string,\n) => Promise<AdminTaskListResponse> = async (page, limit, filterData, sortBy) => {\n  const accountIdParam = filterData.accountId;\n  const orgIdParam = filterData.orgId;\n  const statusParam = filterData?.statuses?.join(',').toLowerCase();\n  const { data } = await axios.get(\n    `/api/content-sources/v1/admin/tasks/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&account_id=${accountIdParam}&org_id=${orgIdParam}&status=${statusParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getAdminTask: (uuid: string) => Promise<AdminTask> = async (uuid) => {\n  const { data } = await axios.get(`/api/content-sources/v1/admin/tasks/${uuid}`);\n  return data;\n};\n","import { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport {\n  AdminTaskFilterData,\n  AdminTaskListResponse,\n  getAdminTasks,\n  AdminTask,\n  getAdminTask,\n} from './AdminTaskApi';\nimport useErrorNotification from '../../Hooks/useErrorNotification';\n\nexport const ADMIN_TASK_LIST_KEY = 'ADMIN_TASK_LIST_KEY';\nexport const ADMIN_TASK_KEY = 'ADMIN_TASK_KEY';\n\nconst ADMIN_TASK_LIST_POLLING_TIME = 15000; // 15 seconds\n\nexport const useAdminTaskListQuery = (\n  page: number,\n  limit: number,\n  filterData: AdminTaskFilterData,\n  sortBy: string,\n) => {\n  const [polling, setPolling] = useState(false);\n  const [pollCount, setPollCount] = useState(0);\n  const errorNotifier = useErrorNotification();\n  const flattenedFilterData = Object.values(filterData).flat(1);\n  return useQuery<AdminTaskListResponse>(\n    [ADMIN_TASK_LIST_KEY, page, limit, sortBy, ...flattenedFilterData],\n    () => getAdminTasks(page, limit, filterData, sortBy),\n    {\n      onSuccess: (data) => {\n        const containsRunning = data?.data?.some(({ status }) => status === 'running');\n        if (polling && containsRunning) {\n          // Count each consecutive time polling occurs\n          setPollCount(pollCount + 1);\n        }\n        if (polling && !containsRunning) {\n          // We were polling, but now the data is valid, we stop the count.\n          setPollCount(0);\n        }\n        if (pollCount > 40) {\n          // If polling occurs 40 times in a row, we stop it. Likely a data/kafka issue has occurred with the API.\n          return setPolling(false);\n        }\n        // This sets the polling state based whether the data contains any \"Running\" status\n        return setPolling(containsRunning);\n      },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        setPolling(false);\n        setPollCount(0);\n        errorNotifier('Unable to get admin task list', 'An error occurred', err);\n      },\n      refetchInterval: polling ? ADMIN_TASK_LIST_POLLING_TIME : undefined,\n      refetchIntervalInBackground: false, // This prevents endless polling when our app isn't the focus tab in a browser\n      refetchOnWindowFocus: polling, // If polling and navigate to another tab, on refocus, we want to poll once more. (This is based off of the stalestime below)\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n\nexport const useFetchAdminTaskQuery = (uuid?: string) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<AdminTask>(\n    [ADMIN_TASK_KEY, uuid],\n    () => getAdminTask(uuid as string), // Will be disabled if undefined\n    {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        errorNotifier(\n          'Unable to find an Admin task with the given UUID.',\n          'An error occurred',\n          err,\n        );\n      },\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n","import axios from 'axios';\n\nexport interface ContentItem {\n  uuid: string;\n  name: string;\n  package_count: number;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  account_id: string;\n  org_id: string;\n  status: string;\n  last_introspection_error: string;\n  last_introspection_time: string;\n  failed_introspections_count: number;\n  gpg_key: string;\n  metadata_verification: boolean;\n  snapshot: boolean;\n  last_snapshot_uuid?: string;\n  last_snapshot?: SnapshotItem;\n}\n\nexport interface PopularRepository {\n  uuid: string;\n  existing_name: string;\n  suggested_name: string;\n  url: string;\n  distribution_versions: Array<string>;\n  distribution_arch: string;\n  gpg_key: string;\n  metadata_verification: boolean;\n}\n\nexport interface CreateContentRequestItem {\n  name: string;\n  url: string;\n  distribution_versions?: Array<string>;\n  distribution_arch?: string;\n  gpg_key?: string;\n  metadata_verification?: boolean;\n  snapshot?: boolean;\n}\n\nexport interface ErrorItem {\n  status: number;\n  title?: string;\n  detail?: string;\n}\n\nexport interface ErrorResponse {\n  errors: ErrorItem[];\n}\n\nexport type CreateContentRequestResponse = ContentItem[] | ErrorResponse;\n\nexport type CreateContentRequest = Array<CreateContentRequestItem>;\n\nexport interface EditContentRequestItem {\n  uuid: string;\n  name: string;\n  url: string;\n  distribution_arch: string;\n  distribution_versions: string[];\n  gpg_key: string;\n  metadata_verification: boolean;\n  snapshot: boolean;\n}\n\nexport type EditContentRequest = Array<EditContentRequestItem>;\n\nexport type ContentList = Array<ContentItem>;\n\nexport type Links = {\n  first: string;\n  last: string;\n  next?: string;\n  prev?: string;\n};\n\nexport type Meta = {\n  count: number;\n  limit: number;\n  offset: number;\n};\n\nexport interface ContentListResponse {\n  data: ContentList;\n  links: Links;\n  meta: Meta;\n}\n\nexport interface PopularRepositoriesResponse {\n  data: PopularRepository[];\n  links: Links;\n  meta: Meta;\n}\n\nexport interface RepositoryParamsResponse {\n  distribution_versions: Array<NameLabel>;\n  distribution_arches: Array<NameLabel>;\n}\n\nexport interface GpgKeyResponse {\n  gpg_key: string;\n}\n\nexport type NameLabel = {\n  name: string;\n  label: string;\n};\n\nexport type FilterData = {\n  searchQuery: string;\n  versions: Array<string>;\n  arches: Array<string>;\n  statuses: Array<string>;\n};\n\nexport type ValidateItem = {\n  skipped: boolean;\n  valid: boolean;\n  error: string;\n};\n\nexport interface ValidationUrl extends ValidateItem {\n  http_code: number;\n  metadata_present: boolean;\n  metadata_signature_present: boolean;\n}\n\nexport type ValidationResponse = {\n  name?: ValidateItem;\n  url?: ValidationUrl;\n  distribution_versions?: ValidateItem;\n  distribution_arch?: ValidateItem;\n  gpg_key?: ValidateItem;\n}[];\n\nexport interface PackageItem {\n  arch: string;\n  checksum: string;\n  epoch: number;\n  name: string;\n  release: string;\n  summary: string;\n  uuid: string;\n  version: string;\n}\n\nexport type PackagesResponse = {\n  data: PackageItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport type ContentCounts = {\n  'rpm.advisory'?: number;\n  'rpm.package'?: number;\n  'rpm.packagecategory'?: number;\n  'rpm.packageenvironment'?: number;\n  'rpm.packagegroup'?: number;\n};\n\nexport interface SnapshotItem {\n  created_at: string;\n  distribution_path: string;\n  content_counts: ContentCounts;\n  added_counts: ContentCounts;\n  removed_counts: ContentCounts;\n}\n\nexport type SnapshotListResponse = {\n  data: SnapshotItem[];\n  links: Links;\n  meta: Meta;\n};\n\nexport type IntrospectRepositoryRequestItem = {\n  uuid: string;\n  reset_count?: boolean;\n};\n\nexport const getPopularRepositories: (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => Promise<PopularRepositoriesResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData?.searchQuery;\n  const versionParam = filterData?.versions?.join(',');\n  const archParam = filterData?.arches?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/popular_repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getContentList: (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => Promise<ContentListResponse> = async (page, limit, filterData, sortBy) => {\n  const searchQuery = filterData.searchQuery;\n  const versionParam = filterData.versions.join(',');\n  const archParam = filterData.arches.join(',');\n  const statusParam = filterData?.statuses?.join(',');\n  const { data } = await axios.get(\n    `/api/content-sources/v1/repositories/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&version=${versionParam}&status=${statusParam}&arch=${archParam}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const fetchContentItem: (uuid: string) => Promise<ContentItem> = async (uuid: string) => {\n  const { data } = await axios.get(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const deleteContentListItem: (uuid: string) => Promise<void> = async (uuid: string) => {\n  const { data } = await axios.delete(`/api/content-sources/v1/repositories/${uuid}`);\n  return data;\n};\n\nexport const deleteContentListItems: (uuids: string[]) => Promise<void> = async (\n  uuids: string[],\n) => {\n  const { data } = await axios.post('/api/content-sources/v1/repositories/bulk_delete/', { uuids });\n  return data;\n};\n\nexport const AddContentListItems: (\n  request: CreateContentRequest,\n) => Promise<CreateContentRequestResponse> = async (request) => {\n  const { data } = await axios.post('/api/content-sources/v1.0/repositories/bulk_create/', request);\n  return data;\n};\n\nexport const EditContentListItem: (request: EditContentRequestItem) => Promise<void> = async (\n  request,\n) => {\n  const { data } = await axios.patch(\n    `/api/content-sources/v1.0/repositories/${request.uuid}`,\n    request,\n  );\n  return data;\n};\n\nexport const getRepositoryParams: () => Promise<RepositoryParamsResponse> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/repository_parameters/');\n  return data;\n};\n\nexport const validateContentListItems: (\n  request: CreateContentRequest,\n) => Promise<ValidationResponse> = async (request) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1.0/repository_parameters/validate/',\n    request,\n  );\n  return data;\n};\n\nexport const getGpgKey: (url: string) => Promise<GpgKeyResponse> = async (url: string) => {\n  const { data } = await axios.post(\n    '/api/content-sources/v1/repository_parameters/external_gpg_key/',\n    { url },\n  );\n  return data;\n};\n\nexport const getPackages: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<PackagesResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/rpms?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const getSnapshotList: (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => Promise<SnapshotListResponse> = async (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const { data } = await axios.get(\n    `/api/content-sources/v1.0/repositories/${uuid}/snapshots/?offset=${\n      (page - 1) * limit\n    }&limit=${limit}&search=${searchQuery}&sort_by=${sortBy}`,\n  );\n  return data;\n};\n\nexport const introspectRepository: (\n  request: IntrospectRepositoryRequestItem,\n) => Promise<void> = async (request) => {\n  const { data } = await axios.post(\n    `/api/content-sources/v1/repositories/${request.uuid}/introspect/`,\n    { reset_count: request.reset_count },\n  );\n  return data;\n};\n","import { AlertVariant } from '@patternfly/react-core';\nimport { useState } from 'react';\nimport { QueryClient, useMutation, useQuery } from 'react-query';\nimport { cloneDeep } from 'lodash';\n\nimport {\n  ContentListResponse,\n  deleteContentListItem,\n  getContentList,\n  RepositoryParamsResponse,\n  getRepositoryParams,\n  AddContentListItems,\n  CreateContentRequest,\n  FilterData,\n  validateContentListItems,\n  EditContentListItem,\n  EditContentRequest,\n  getGpgKey,\n  PackagesResponse,\n  getPackages,\n  getPopularRepositories,\n  PopularRepositoriesResponse,\n  CreateContentRequestResponse,\n  ContentItem,\n  introspectRepository,\n  IntrospectRepositoryRequestItem,\n  fetchContentItem,\n  deleteContentListItems,\n  Meta,\n  ErrorResponse,\n  getSnapshotList,\n  SnapshotListResponse,\n} from './ContentApi';\nimport { ADMIN_TASK_LIST_KEY } from '../AdminTasks/AdminTaskQueries';\nimport useErrorNotification from '../../Hooks/useErrorNotification';\nimport useNotification from '../../Hooks/useNotification';\n\nexport const CONTENT_LIST_KEY = 'CONTENT_LIST_KEY';\nexport const POPULAR_REPOSITORIES_LIST_KEY = 'POPULAR_REPOSITORIES_LIST_KEY';\nexport const REPOSITORY_PARAMS_KEY = 'REPOSITORY_PARAMS_KEY';\nexport const CREATE_PARAMS_KEY = 'CREATE_PARAMS_KEY';\nexport const PACKAGES_KEY = 'PACKAGES_KEY';\nexport const LIST_SNAPSHOTS_KEY = 'PACKAGES_KEY';\nexport const CONTENT_ITEM_KEY = 'CONTENT_ITEM_KEY';\n\nconst CONTENT_LIST_POLLING_TIME = 15000; // 15 seconds\n\nexport const useFetchContent = (uuids: string[]) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<ContentItem>([CONTENT_ITEM_KEY, ...uuids], () => fetchContentItem(uuids[0]), {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any) =>\n      errorNotifier('Unable to find associated repository.', 'An error occurred', err),\n    keepPreviousData: true,\n    staleTime: 20000,\n  });\n};\n\nexport const usePopularRepositoriesQuery = (\n  page: number,\n  limit: number,\n  filterData?: Partial<FilterData>,\n  sortBy?: string,\n) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<PopularRepositoriesResponse>(\n    [POPULAR_REPOSITORIES_LIST_KEY, page, limit, sortBy, ...Object.values(filterData || {})], // NOTE: Update this if larger list!!!!\n    () => getPopularRepositories(page, limit, filterData, sortBy),\n    {\n      keepPreviousData: true,\n      staleTime: 20000,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) =>\n        errorNotifier('Unable to get popular repositories list', 'An error occurred', err),\n    },\n  );\n};\n\nexport const useContentListQuery = (\n  page: number,\n  limit: number,\n  filterData: FilterData,\n  sortBy: string,\n) => {\n  const [polling, setPolling] = useState(false);\n  const [pollCount, setPollCount] = useState(0);\n  const errorNotifier = useErrorNotification();\n  return useQuery<ContentListResponse>(\n    // Below MUST match the \"contentListKeyArray\" seen below in the useDeleteContent.\n    [CONTENT_LIST_KEY, page, limit, sortBy, ...Object.values(filterData)],\n    () => getContentList(page, limit, filterData, sortBy),\n    {\n      onSuccess: (data) => {\n        const containsPending = data?.data?.some(\n          ({ status }) => status === 'Pending' || status === '',\n        );\n        if (polling && containsPending) {\n          // Count each consecutive time polling occurs\n          setPollCount(pollCount + 1);\n        }\n        if (polling && !containsPending) {\n          // We were polling, but now the data is valid, we stop the count.\n          setPollCount(0);\n        }\n        if (pollCount > 40) {\n          // If polling occurs 40 times in a row, we stop it. Likely a data/kafka issue has occurred with the API.\n          return setPolling(false);\n        }\n        // This sets the polling state based whether the data contains any \"Pending\" status\n        return setPolling(containsPending);\n      },\n      onError: (err) => {\n        setPolling(false);\n        setPollCount(0);\n        errorNotifier('Unable to get repositories list', 'An error occurred', err);\n      },\n      refetchInterval: polling ? CONTENT_LIST_POLLING_TIME : undefined,\n      refetchIntervalInBackground: false, // This prevents endless polling when our app isn't the focus tab in a browser\n      refetchOnWindowFocus: polling, // If polling and navigate to another tab, on refocus, we want to poll once more. (This is based off of the stalestime below)\n      keepPreviousData: true,\n      staleTime: 20000,\n    },\n  );\n};\n\nexport const useAddContentQuery = (queryClient: QueryClient, request: CreateContentRequest) => {\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  return useMutation(() => AddContentListItems(request.filter((item) => !!item)), {\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n\n      notify({\n        variant: AlertVariant.success,\n        title:\n          request?.length > 1\n            ? `${request?.length} custom repositories added`\n            : `Custom repository \"${request?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any) => {\n      errorNotifier('Error adding items to content list', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useAddPopularRepositoryQuery = (\n  queryClient: QueryClient,\n  request: CreateContentRequest,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n) => {\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  const popularRepositoriesKeyArray = [\n    POPULAR_REPOSITORIES_LIST_KEY,\n    page,\n    perPage,\n    undefined,\n    ...Object.values(filterData || {}),\n  ];\n  const filteredRequest = request.filter((item) => !!item);\n  return useMutation(() => AddContentListItems(filteredRequest), {\n    onMutate: async () => {\n      const { name } = filteredRequest[0];\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(popularRepositoriesKeyArray);\n      // Snapshot the previous value\n      const previousPopularData: Partial<PopularRepositoriesResponse> =\n        queryClient.getQueryData(popularRepositoriesKeyArray) || {};\n\n      queryClient.setQueryData(popularRepositoriesKeyArray, () => ({\n        ...previousPopularData,\n        data: previousPopularData.data?.map((data) => {\n          if (name === data.suggested_name && !data.uuid) {\n            return { ...data, uuid: 'temp', existing_name: name };\n          }\n          return data;\n        }),\n      }));\n      return { previousData: previousPopularData };\n    },\n    onSuccess: (data: CreateContentRequestResponse) => {\n      const hasPending = (data as ContentItem[]).some(({ status }) => status === 'Pending');\n      notify({\n        variant: AlertVariant.success,\n        title: `Custom repository \"${data?.[0]?.name}\" added`,\n        description: hasPending\n          ? 'Repository introspection in progress'\n          : 'Repository introspection data already available',\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    onError: (err, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: PopularRepositoriesResponse;\n        };\n        queryClient.setQueryData(popularRepositoriesKeyArray, previousData);\n      }\n      errorNotifier('Error adding item from popularRepo', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useEditContentQuery = (queryClient: QueryClient, request: EditContentRequest) => {\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  return useMutation(() => EditContentListItem(request[0]), {\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: `Successfully edited ${request.length} ${request.length > 1 ? 'items' : 'item'}`,\n      });\n\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any) => {\n      errorNotifier('Error editing items on content list', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useValidateContentList = () => {\n  const errorNotifier = useErrorNotification();\n  return useMutation((request: CreateContentRequest) => validateContentListItems(request), {\n    onError: (err) => {\n      errorNotifier('Error validating form fields', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useDeletePopularRepositoryMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n) => {\n  const popularRepositoriesKeyArray = [\n    POPULAR_REPOSITORIES_LIST_KEY,\n    page,\n    perPage,\n    undefined,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(popularRepositoriesKeyArray);\n      // Snapshot the previous value\n      const previousPopularData: Partial<PopularRepositoriesResponse> =\n        queryClient.getQueryData(popularRepositoriesKeyArray) || {};\n\n      queryClient.setQueryData(popularRepositoriesKeyArray, () => ({\n        ...previousPopularData,\n        data: previousPopularData.data?.map((data) => {\n          if (data.uuid === uuid) {\n            return { ...data, uuid: undefined };\n          }\n          return data;\n        }),\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData: previousPopularData, queryClient };\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: PopularRepositoriesResponse;\n        };\n        queryClient.setQueryData(popularRepositoriesKeyArray, previousData);\n      }\n      errorNotifier('Unable to delete the given repository.', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  return useMutation(deleteContentListItem, {\n    onMutate: async (uuid: string) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => uuid !== data.uuid),\n        meta: previousData.meta\n          ? {\n              ...previousData.meta,\n              count: previousData.meta.count ? previousData.meta.count - 1 : 1,\n            }\n          : undefined,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { previousData } = context as {\n        previousData: ContentListResponse;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = previousData?.meta?.count - 1;\n        }\n\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n      }\n      errorNotifier('Unable to delete the given repository.', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useBulkDeleteContentItemMutate = (\n  queryClient: QueryClient,\n  selected: Set<string>,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  const uuids = Array.from(selected);\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  return useMutation(() => deleteContentListItems(uuids), {\n    onMutate: async (checkedRepositories: Set<string>) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      const newMeta = previousData.meta\n        ? {\n            ...previousData.meta,\n            count: previousData.meta.count ? previousData.meta.count - checkedRepositories.size : 1,\n          }\n        : undefined;\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...previousData,\n        data: previousData.data?.filter((data) => !checkedRepositories.has(data.uuid)),\n        meta: newMeta,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, newMeta, queryClient };\n    },\n    onSuccess: (_data, _variables, context) => {\n      // Update all of the existing calls \"count\" to prevent number jumping on pagination\n      const { newMeta } = context as {\n        newMeta: Meta;\n      };\n      queryClient.setQueriesData(CONTENT_LIST_KEY, (data: Partial<ContentListResponse> = {}) => {\n        if (data?.meta?.count) {\n          data.meta.count = newMeta?.count;\n        }\n        return data;\n      });\n      queryClient.invalidateQueries(CONTENT_LIST_KEY);\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n      queryClient.invalidateQueries(POPULAR_REPOSITORIES_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    onError: (err: { response?: { data: ErrorResponse } }, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n      }\n      errorNotifier('Error deleting items from content list', 'An error occurred', err);\n    },\n  });\n};\n\nexport const useRepositoryParams = () =>\n  useQuery<RepositoryParamsResponse>(REPOSITORY_PARAMS_KEY, getRepositoryParams, {\n    keepPreviousData: true,\n    staleTime: Infinity,\n  });\n\nexport const useFetchGpgKey = () => {\n  const errorNotifier = useErrorNotification();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchGpgKey = async (url: string): Promise<string> => {\n    setIsLoading(true);\n    let gpg_key = url;\n    try {\n      const data = await getGpgKey(url);\n      gpg_key = data.gpg_key;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      errorNotifier('Error fetching GPG key from provided URL', 'An error occurred', err);\n    }\n    setIsLoading(false);\n    return gpg_key;\n  };\n\n  return { fetchGpgKey, isLoading };\n};\n\nexport const useGetSnapshotList = (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<SnapshotListResponse>(\n    [LIST_SNAPSHOTS_KEY, uuid, page, limit, searchQuery, sortBy],\n    () => getSnapshotList(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        errorNotifier('Unable to find snapshots with the given UUID.', 'An error occurred', err);\n      },\n    },\n  );\n};\n\nexport const useGetPackagesQuery = (\n  uuid: string,\n  page: number,\n  limit: number,\n  searchQuery: string,\n  sortBy: string,\n) => {\n  const errorNotifier = useErrorNotification();\n  return useQuery<PackagesResponse>(\n    [PACKAGES_KEY, uuid, page, limit, searchQuery, sortBy],\n    () => getPackages(uuid, page, limit, searchQuery, sortBy),\n    {\n      keepPreviousData: true,\n      optimisticResults: true,\n      staleTime: 60000,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onError: (err: any) => {\n        errorNotifier('Unable to find packages with the given UUID.', 'An error occurred', err);\n      },\n    },\n  );\n};\n\nexport const useIntrospectRepositoryMutate = (\n  queryClient: QueryClient,\n  page: number,\n  perPage: number,\n  filterData?: FilterData,\n  sortString?: string,\n) => {\n  // Below MUST match the \"useContentList\" key found above or updates will fail.\n  const contentListKeyArray = [\n    CONTENT_LIST_KEY,\n    page,\n    perPage,\n    sortString,\n    ...Object.values(filterData || {}),\n  ];\n  const errorNotifier = useErrorNotification();\n  const { notify } = useNotification();\n  return useMutation(introspectRepository, {\n    onMutate: async (item: IntrospectRepositoryRequestItem) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(contentListKeyArray);\n      // Snapshot the previous value\n      const previousData: Partial<ContentListResponse> =\n        queryClient.getQueryData(contentListKeyArray) || {};\n\n      const previousStatus = previousData.data?.find((data) => item.uuid == data.uuid)?.status;\n      const newData = cloneDeep(previousData);\n      if (previousStatus) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        newData.data.filter((data) => item.uuid == data.uuid).at(0).status = 'Pending';\n      }\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(contentListKeyArray, () => ({\n        ...newData,\n      }));\n      // Return a context object with the snapshotted value\n      return { previousData, queryClient };\n    },\n    onSuccess: () => {\n      notify({\n        variant: AlertVariant.success,\n        title: 'Repository introspection in progress',\n      });\n      queryClient.invalidateQueries(ADMIN_TASK_LIST_KEY);\n    },\n    // If the mutation fails, use the context returned from onMutate to roll back\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onError: (err: any, _newData, context) => {\n      if (context) {\n        const { previousData } = context as {\n          previousData: ContentListResponse;\n        };\n        queryClient.setQueryData(contentListKeyArray, previousData);\n      }\n      errorNotifier('Error introspecting repository', 'An error occurred', err);\n    },\n  });\n};\n","import axios from 'axios';\n\nexport interface Feature {\n  enabled: boolean;\n  accessible: boolean;\n}\n\nexport interface Features {\n  snapshots?: Feature;\n  admintasks?: Feature;\n}\n\nexport const getFeatures: () => Promise<Features> = async () => {\n  const { data } = await axios.get('/api/content-sources/v1/features/');\n  return data;\n};\n","import { useState } from 'react';\nimport { Features, getFeatures } from './FeatureApi';\nimport useErrorNotification from '../../Hooks/useErrorNotification';\n\nexport const useFetchFeaturesQuery = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const errorNotifier = useErrorNotification();\n\n  const fetchFeatures = async (): Promise<Features | null> => {\n    setIsLoading(true);\n    let features: Features | null = null;\n    try {\n      features = await getFeatures();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (err: any) {\n      errorNotifier('Error fetching features', 'An error occurred', err);\n    }\n    setIsLoading(false);\n    return features;\n  };\n\n  return { fetchFeatures, isLoading };\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// import { initStore, restoreStore } from '@redhat-cloud-services/insights-common-typescript';\nimport { Middleware } from 'redux';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry/index';\n// import promiseMiddleware from 'redux-promise-middleware';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\n\nlet registry: any;\n\nexport const restoreStore = () => {\n  registry = undefined;\n};\n\nexport const initStore = <State, Reducer extends Record<string, any>>(\n  initialState?: State,\n  reducer?: Reducer,\n  ...middleware: Middleware[]\n) => {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry(initialState ?? {}, [...middleware]);\n\n  if (reducer && Object.keys(reducer).includes('notifications')) {\n    throw new Error(\n      'Invalid reducer with `notifications` key. This key is reserved for frontend-components-notifications',\n    );\n  }\n\n  registry.register({\n    notifications,\n    ...(reducer ?? {}),\n  });\n\n  return registry;\n};\n\nexport const createStore = (...middleware: Middleware[]) => initStore({}, {}, ...middleware);\n"],"names":["rbac","isFetchingFeatures","useAppContext","Bullseye","Spinner","size","read","NoPermissionsPage","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","logger","store","useMemo","restoreStore","createStore","useEffect","insights","chrome","appAction","QueryClientProvider","client","ContextProvider","value","delay","debouncedValue","setDebouncedValue","useState","isEqual","timer","setTimeout","clearTimeout","useDeepCompareMemoize","ref","useRef","current","callback","dependencies","map","notify","defaultTitle","defaultDescription","err","title","description","response","data","errors","find","errTitle","detail","errDescription","variant","AlertVariant","danger","dispatch","useDispatch","payload","addNotification","pathname","useLocation","split","useStyles","createUseStyles","mainContainer","backgroundColor","global_BackgroundColor_100","display","flexDirection","mainContainer100Height","composes","minHeight","topContainer","justifyContent","padding","height","bottomContainer","invisible","opacity","formatDate","date","format","perPageKey","classes","navigate","useNavigate","storedPerPage","Number","localStorage","getItem","page","setPage","perPage","setPerPage","activeSortIndex","setActiveSortIndex","activeSortDirection","setActiveSortDirection","filterData","setFilterData","accountId","orgId","statuses","clearFilters","notFiltered","length","columnSortAttributes","sortString","isLoading","error","isError","isFetching","meta","count","limit","offset","useAdminTaskListQuery","actionTakingPlace","onSetPage","_","newPage","onPerPageSelect","newPerPage","setItem","toString","columnHeaders","adminTaskList","itemName","notFilteredBody","countIsZero","Grid","className","Outlet","Flex","values","FlexItem","hide","Pagination","id","widgetId","isDisabled","itemCount","isCompact","SkeletonTable","rows","numberOfColumns","TableVariant","compact","Table","ouiaId","Thead","Tr","columnHeader","index","Th","sort","columnIndex","sortBy","direction","defaultDirection","onSort","_event","Tbody","adminTask","Td","org_id","account_id","typename","queued_at","status","width","Button","onClick","uuid","PaginationVariant","bottom","chipsContainer","paddingTop","marginLeft","statusValues","filters","filterType","setFilterType","setAccountId","setOrgId","selectedStatuses","setSelectedStatuses","debouncedAccountId","debouncedOrgId","debouncedSelectedStatuses","Filter","InputGroupItem","TextInput","type","placeholder","onChange","InputGroupText","SearchIcon","toggleAriaLabel","toggleId","options","SelectVariant","checkbox","selectedProp","setSelected","placeholderText","InputGroup","single","toggleIcon","FilterIcon","fullWidth","default","ChipGroup","categoryName","Chip","deleteItem","chips","filter","chip","isInline","red","global_danger_color_100","green","global_success_color_100","gold","global_warning_color_100","spinner","animationDuration","margin","color","fill","alignContent","spacer","ExclamationCircleIcon","CheckCircleIcon","BanIcon","ClockIcon","jsonView","fontSize","taskUUID","useParams","rootPath","onClose","ADMIN_TASKS_ROUTE","activeTabKey","setActiveTabKey","detailRef","createRef","useFetchAdminTaskQuery","tabs","push","contentRef","pulp","sync","distribution","publication","showLoading","Modal","position","ModalVariant","medium","ouiaSafe","isOpen","header","Tabs","activeKey","onSelect","tabIndex","Tab","TabTitleText","eventKey","tabContentRef","key","TabContent","hidden","src","enableClipboard","theme","DescriptionList","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","started_at","finished_at","checkboxMinWidth","minWidth","useContentListOutletContext","useOutletContext","useQueryClient","features","checkedRepositories","setCheckedRepositories","Set","searchQuery","versions","arches","repositoryParamsLoading","repositoryParamsError","repositoryParamsIsError","distribution_versions","distVersions","distribution_arches","distArches","useRepositoryParams","useContentListQuery","mutateAsync","isDeleting","useDeleteContentItemMutate","introspectRepository","isIntrospecting","useIntrospectRepositoryMutate","introspectRepoForUuid","reset_count","deleteItems","isDeletingItems","useBulkDeleteContentItemMutate","contentList","rowActions","useCallback","rowData","snapshots","accessible","snapshot","last_snapshot_uuid","then","clearCheckedRepositories","isSeparator","repoCanBeChecked","contentItem","atLeastOneRepoChecked","areAllReposPending","every","areAllReposSelected","atLeastOneSelectedOnPage","has","showLoader","context","notFilteredButton","content","show","write","setDisabled","numberOfReposChecked","deleteCheckedRepos","newMaxPage","Math","ceil","select","checked","newSet","forEach","add","delete","isSelected","isHeaderSelectDisabled","name","url","distribution_arch","last_introspection_time","rowIndex","isSelecting","onSelectRepo","href","arch","label","includes","join","time","undefined","fromNow","retryHandler","isActionCell","ActionsColumn","items","global_Color_200","removeSideBorder","borderLeft","toggleAllRow","cursor","borderBottom","global_link_Color","colHeader","mainContentCol","toggleAction","addRepositoryButton","marginBottom","saveButton","marginRight","transition","removeButton","singleContentCol","gpgKeyInput","gpgKeyFormGroup","paddingBottom","defaultTouchedState","gpgKey","changeVerified","setChangeVerified","gpgKeyList","setGpgKeyList","snapshottingEnabled","enabled","formik","useFormik","initialValues","getDefaultFormikValues","validateOnBlur","validateOnChange","validationSchema","makeValidationSchema","initialTouched","onSubmit","updateGpgKey","updatedData","fetchGpgKey","isFetchingGpgKey","useFetchGpgKey","debouncedGpgKeyList","getQueryData","REPOSITORY_PARAMS_KEY","async","list","Promise","all","updateValue","isValidURL","result","metadataVerification","validationList","metadata_signature_present","setValues","updateGpgKeyList","distributionArches","distributionVersions","addContent","isAdding","useAddContentQuery","mapFormikToAPIValues","createDataLengthOf1","allExpanded","some","expanded","updateVariable","newValue","getFieldValidation","field","touched","setTouchedOnLastItemIfUntouchedAndCollapsed","lastItem","updatedTouched","setTouched","debouncedValues","validateContentList","isValidating","useValidateContentList","newTouchedValues","gpg_key","metadata_verification","validationData","formikErrors","validateForm","mappedErrorData","mapValidationData","setErrors","onToggle","help","Popover","headerContent","bodyContent","OutlinedQuestionCircleIcon","footer","Stack","StackItem","isValid","vals","icon","PlusCircleIcon","isExpanded","expand","dataLabel","gpgLoading","newValues","splice","newTouched","newErrors","removeRepository","MinusCircleIcon","colSpan","Form","FormGroup","fieldId","Switch","hasCheckIcon","labelOff","isChecked","Tooltip","FormAlert","style","Alert","isRequired","validated","textValue","onBlur","newVersion","isEmpty","updateArchAndVersion","labelIcon","menuAppendTo","document","body","Object","keys","typeaheadMulti","valueToUpdate","val","setVersionSelected","FileUpload","filenamePlaceholder","textAreaPlaceholder","spellCheck","onDataChange","onTextChange","onClearClick","dropzoneProps","maxSize","maxUploadSize","onDropRejected","files","failedFileUpload","allowEditingUploadedText","browseButtonText","Radio","fontWeight","loading","allTouched","noErrors","hasTouchedError","ErrorCode","overrides","REGEX_URL","regex","RegExp","match","formikValues","updatedValidationData","rest","metadata_present","http_code","mapNoMetaDataError","hasUrlErrors","Yup","addMethod","object","propertyName","message","this","test","parent","v","createError","path","array","shape","string","min","max","required","uniqueProperty","file","repositoryActions","versionNamesLabels","setVersionNamesLabels","archNamesLabels","setArchNamesLabels","setSearchQuery","selectedVersions","setSelectedVersions","selectedArches","setSelectedArches","debouncedSearchQuery","debouncedSelectedVersions","debouncedSelectedArches","getLabels","names","namesLabels","labels","found","setChips","version","isFill","toggleOuiaId","setIsValid","setIsLoading","setUpdatedValues","mapToDefaultFormikValues","hasNotChanged","open","mapFormikToEditAPIValues","isPlain","urlOnBlur","search","initialLoad","setInitialLoad","updatedValues","uuids","URLSearchParams","get","editContent","isEditing","useEditContentQuery","useFetchContent","valuesHaveChanged","mapToContentItemsToEditContentRequest","invalidateQueries","CONTENT_ITEM_KEY","text","global_disabled_color_100","link","package_count","isContentLeftAligned","Text","repoUUID","useGetPackagesQuery","sortParams","packageList","fetchingOrLoading","loadingOrZeroCount","hasNoBodyWrapper","InnerScrollContainer","release","clearSearch","emptyStateContainer","flexGrow","EmptyState","EmptyStateVariant","full","EmptyStateHeader","titleText","EmptyStateIcon","headingLevel","EmptyStateBody","EmptyStateFooter","useGetSnapshotList","contentData","snapshotsList","created_at","content_counts","added_counts","removed_counts","Date","toUTCString","addedCount","removedCount","base","alignItems","extend","LongArrowAltUpIcon","LongArrowAltDownIcon","PopoverDescription","timeText","PopoverFooter","failed_introspections_count","failedIntrospectionsCount","lastIntrospectionTime","last_introspection_error","alertSeverityVariant","headerIcon","footerContent","isLink","ExclamationTriangleIcon","listStyle","addRepositoriesButton","disabled","disabledDropdownButton","global_disabled_color_200","checkedRepositoriesToAdd","setCheckedRepositoriesToAdd","Map","checkedRepositoriesToDelete","setCheckedRepositoriesToDelete","selectedData","setSelectedData","selectedUUID","setSelectedUUID","searchValue","setSearchValue","debouncedSearchValue","isActionOpen","setIsActionOpen","onDropdownToggle","onDropdownSelect","element","getElementById","focus","onDropdownFocus","usePopularRepositoriesQuery","addContentQuery","useAddPopularRepositoryQuery","atLeastOneRepoToDeleteChecked","atLeastOneRepoToAddChecked","repo","useDeletePopularRepositoryMutate","addSelected","request","popularData","defaultText","withoutSnapshotText","Dropdown","toggle","DropdownToggle","splitButtonItems","DropdownToggleAction","toggleVariant","splitButtonVariant","DropdownItem","component","newMap","set","repoToRequestItem","existing_name","suggested_name","AddRepo","addRepo","newData","disabledButton","onActionToggle","onActionSelect","onActionFocus","dropdownItems","tab","textDecoration","outlineOffset","currentRoute","last","route","keyParams","Link","accessKey","to","containerMargin","random","Routes","Route","Element","ChildRoutes","ErrorPage","ChildRouteElement","childRouteKey","Navigate","DEFAULT_ROUTE","replace","POPULAR_REPOSITORIES_ROUTE","hasWrite","admintasks","children","cloneElement","FormHelperText","HelperText","HelperTextItem","setIsOpen","KebabToggle","selected","Array","isArray","selectFrom","option","SelectOption","Select","selection","remaining","item","selections","isCheckboxSelectionBadgeHidden","emptyStateBody","ErrorBoundaryPage","headerTitle","errorTitle","errorDescription","PageHeader","subtext","global_Color_100","PageHeaderTitle","LockIcon","quickstartContainer","quickstartSpinner","buildCustomButton","marginTop","quickStartExpandedKey","isBeta","quickStarts","useChrome","isPreview","quickStartExpanded","setIsExpanded","quickStartLoading","setQuickStartLoading","prev","ExpandableSection","toggleText","displaySize","iconPosition","ArrowRightIcon","activateQuickstart","console","warn","global_danger_color_200","global_success_color_200","global_warning_color_200","blue","global_info_color_200","props","fontStyle","rel","target","ExternalLinkAltIcon","getRegistry","appname","AppContext","createContext","setRbac","setFeatures","fetchFeatures","useFetchFeaturesQuery","register","notifications","notificationsReducer","auth","getUser","fetchRBAC","fetchedFeatures","Provider","hasPermission","useContext","RbacPermissionsBuilder","accessPagination","constructor","build","permissions","access","app","what","verb","permission","appQuery","instance","create","AccessApi","getPrincipalAccess","builder","Rbac","appPermission","hasAppPermission","hasWhatPermission","verbs","getAdminTasks","accountIdParam","orgIdParam","statusParam","toLowerCase","getAdminTask","ADMIN_TASK_LIST_KEY","ADMIN_TASK_KEY","polling","setPolling","pollCount","setPollCount","errorNotifier","flattenedFilterData","flat","useQuery","onSuccess","containsRunning","onError","refetchInterval","refetchIntervalInBackground","keepPreviousData","staleTime","getPopularRepositories","versionParam","archParam","getContentList","fetchContentItem","deleteContentListItem","deleteContentListItems","post","AddContentListItems","EditContentListItem","patch","getRepositoryParams","validateContentListItems","getGpgKey","getPackages","getSnapshotList","CONTENT_LIST_KEY","POPULAR_REPOSITORIES_LIST_KEY","CREATE_PARAMS_KEY","PACKAGES_KEY","LIST_SNAPSHOTS_KEY","containsPending","useMutation","hasPending","success","popularRepositoriesKeyArray","filteredRequest","onMutate","cancelQueries","previousPopularData","setQueryData","previousData","_newData","contentListKeyArray","_data","_variables","setQueriesData","from","newMeta","Infinity","optimisticResults","previousStatus","cloneDeep","at","getFeatures","registry","initStore","initialState","reducer","middleware","Error","ReducerRegistry"],"sourceRoot":""}